[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"3"},{"size":567,"mtime":1607074685755,"results":"4","hashOfConfig":"5"},{"size":2451,"mtime":1607263567268,"results":"6","hashOfConfig":"5"},{"size":11212,"mtime":1607406426175,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lm62wj",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    Collapse,\r\n    ModalBody\r\n    \r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie'\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n}\r\n\r\nconst History = () =>{ \r\n    const [history, setHistory]=useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const token = Cookies.get('token');\r\n    const fullName = Cookies.get('fullName')\r\n    const [expense, setExpense]=useState([]);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    console.log(token)\r\n\r\n    const urlHistory ='http://3.0.91.163/subscription'\r\n    const urlExpense ='http://3.0.91.163/expense'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n    \r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        axios\r\n        .get(urlHistory, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            setHistory(res.data);\r\n            setIsLoading(false);    \r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n        axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setExpense(res.data);\r\n            setIsLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        dataMonth();\r\n        dataWeek();\r\n    }, [])\r\n    \r\n    const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n             console.log(res);\r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        console.log(dates, totals)\r\n        \r\n    }\r\n\r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res);\r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n\r\n    // const expenses = () =>{\r\n    //     setIsLoading(true);\r\n    //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n    //     .then((res)=>{\r\n    //         console.log(res.data)\r\n    //         setExpense(res.data);\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch((err)=> console.log(err));\r\n    // }\r\n\r\n    const deleteSubscribe = () =>{\r\n\r\n    }\r\n    const subscribeDetails = (id) => {\r\n        setIsLoading(true);\r\n        const url =`http://3.0.91.163/service?id=${id}`\r\n        axios.get(url).then((res)=>{\r\n            console.log(res.data.subscribeId)\r\n            setSubscribeId(res.data);\r\n            setModal(!modal)\r\n            setIsLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));           \r\n    }\r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs=\"8\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\"className=\"bg-default\">\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'10px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscribe</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {history.map((history)=>(\r\n                        <Col xs=\"4\" key={history.id}>\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"150px\"\r\n                                src={history.service.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                {history.service.name}\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=> subscribeDetails(history.id)}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id =\"button\"\r\n                            >\r\n                                Unsubcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <h5>\r\n                                    Description: <br/>{subscribe.description}\r\n                                </h5>\r\n                                <h5>\r\n                                    Cost: {subscribe.cost}\r\n                                </h5>   \r\n                            </CardText>\r\n                            <Row>\r\n                            <Button\r\n                                to=\"\"\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Unsubscribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                                </Col>\r\n                            ))}\r\n                            \r\n                    </ModalBody>\r\n                </Modal>\r\n            </Container>\r\n            </Col>\r\n            <Col xs=\"4\" style={{backgroundColor: 'white'}}> \r\n                <h4>history</h4>\r\n                {history.map((subscribtion, i)=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                    <Row>\r\n                    <Col xs=\"8\">\r\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight\"><h6>{subscribtion.service.name}  <br/> {subscribtion.repeat}</h6> \r\n                    </CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                    <h6>Rp.  {subscribtion.service.cost} </h6>\r\n                    </Col>       \r\n                    </Row>\r\n                </Card>\r\n                ))}\r\n                {expense.map((expenses, i )=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                <Row>\r\n                    <Col xs=\"8\">\r\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold\"><h6>{expenses.title} <br/> {expenses.purchaseDate}</h6></CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                    <h6>Rp.  {expenses.total} </h6>\r\n                    </Col>  \r\n                </Row>  \r\n                </Card> \r\n                ))}\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default History;",{"ruleId":"33","severity":1,"message":"34","line":18,"column":8,"nodeType":"35","messageId":"36","endLine":18,"endColumn":15},{"ruleId":"33","severity":1,"message":"37","line":19,"column":8,"nodeType":"35","messageId":"36","endLine":19,"endColumn":12},{"ruleId":"33","severity":1,"message":"38","line":20,"column":8,"nodeType":"35","messageId":"36","endLine":20,"endColumn":14},{"ruleId":"33","severity":1,"message":"39","line":21,"column":8,"nodeType":"35","messageId":"36","endLine":21,"endColumn":16},{"ruleId":"33","severity":1,"message":"40","line":22,"column":8,"nodeType":"35","messageId":"36","endLine":22,"endColumn":15},{"ruleId":"33","severity":1,"message":"41","line":23,"column":8,"nodeType":"35","messageId":"36","endLine":23,"endColumn":12},{"ruleId":"33","severity":1,"message":"42","line":24,"column":10,"nodeType":"35","messageId":"36","endLine":24,"endColumn":14},{"ruleId":"33","severity":1,"message":"43","line":27,"column":9,"nodeType":"35","messageId":"36","endLine":27,"endColumn":19},{"ruleId":"33","severity":1,"message":"44","line":47,"column":12,"nodeType":"35","messageId":"36","endLine":47,"endColumn":21},{"ruleId":"33","severity":1,"message":"45","line":49,"column":11,"nodeType":"35","messageId":"36","endLine":49,"endColumn":19},{"ruleId":"33","severity":1,"message":"46","line":54,"column":12,"nodeType":"35","messageId":"36","endLine":54,"endColumn":21},{"ruleId":"33","severity":1,"message":"47","line":54,"column":23,"nodeType":"35","messageId":"36","endLine":54,"endColumn":35},{"ruleId":"33","severity":1,"message":"48","line":55,"column":12,"nodeType":"35","messageId":"36","endLine":55,"endColumn":21},{"ruleId":"33","severity":1,"message":"49","line":55,"column":23,"nodeType":"35","messageId":"36","endLine":55,"endColumn":35},{"ruleId":"33","severity":1,"message":"50","line":56,"column":19,"nodeType":"35","messageId":"36","endLine":56,"endColumn":27},{"ruleId":"33","severity":1,"message":"51","line":57,"column":20,"nodeType":"35","messageId":"36","endLine":57,"endColumn":29},{"ruleId":"52","severity":1,"message":"53","line":90,"column":8,"nodeType":"54","endLine":90,"endColumn":10,"suggestions":"55"},{"ruleId":"33","severity":1,"message":"56","line":162,"column":11,"nodeType":"35","messageId":"36","endLine":162,"endColumn":26},"no-unused-vars","'youtube' is defined but never used.","Identifier","unusedVar","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["57"],"'deleteSubscribe' is assigned a value but never used.",{"desc":"58","fix":"59"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"60","text":"61"},[2743,2745],"[dataMonth, dataWeek, token]"]