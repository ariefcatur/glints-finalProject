[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"14"},{"size":1019,"mtime":1608026248734,"results":"15","hashOfConfig":"16"},{"size":3943,"mtime":1608120337106,"results":"17","hashOfConfig":"16"},{"size":15031,"mtime":1608115267787,"results":"18","hashOfConfig":"16"},{"size":2063,"mtime":1607762145156,"results":"19","hashOfConfig":"16"},{"size":199,"mtime":1607762145026,"results":"20","hashOfConfig":"16"},{"size":3097,"mtime":1608114707164,"results":"21","hashOfConfig":"16"},{"size":6824,"mtime":1608114707240,"results":"22","hashOfConfig":"16"},{"size":6513,"mtime":1608114707156,"results":"23","hashOfConfig":"16"},{"size":13200,"mtime":1608114707193,"results":"24","hashOfConfig":"16"},{"size":1879,"mtime":1608123658378,"results":"25","hashOfConfig":"16"},{"size":3904,"mtime":1608116659568,"results":"26","hashOfConfig":"16"},{"size":2451,"mtime":1607762145101,"results":"27","hashOfConfig":"16"},{"size":12865,"mtime":1608114707238,"results":"28","hashOfConfig":"16"},{"size":2083,"mtime":1608114707169,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lm62wj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["62","63"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["64","65","66","67"],"import React, {useState, useEffect} from \"react\";\r\nimport {Card, Row, Col} from \"reactstrap\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Calendar=()=>{\r\n    const [upComing, setUpComing] = useState([]);\r\n    const [month, setMonth] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const token = Cookies.get(\"token\");\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        axios\r\n        .get(' http://52.148.70.171/subscription', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then((res)=>{\r\n            console.log(res.data.map((e)=> e.dueDate))\r\n            setUpComing(\r\n                ...upComing,\r\n                res.data.map((e)=>({\r\n                    title : e.service.name,\r\n                    date: e.dueDate.substr(0, 10),\r\n                }))\r\n            )\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    \r\n    let checkComingMonth = upComing.filter((e)=> e.date.substr(5,2) == month);\r\n    // console.log(\"cek coming month\" , checkComingMonth)\r\n    checkComingMonth.sort((a,b)=>{\r\n        if (a.date < b.date) return -1;\r\n        return a.date > b.date ? 1 : 0;\r\n    })\r\n    return(\r\n        <>\r\n        {loading && <p>Loading...</p>}\r\n        {!loading && (\r\n           \r\n        <div>\r\n           \r\n            <Row>\r\n                <Col sm=\"8\">\r\n                    <Card>\r\n                    <FullCalendar \r\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                        datesSet={(arg)=>{\r\n                            console.log(arg);\r\n                            console.log(arg.view.currentStart.toISOString()); //starting visible date\r\n                            console.log(arg.view.currentEnd.toISOString()); //ending visible date        \r\n                            setMonth(arg.view.currentEnd.toISOString().substr(5, 2))\r\n                        }}\r\n                        initialView=\"dayGridMonth\"\r\n                        // height =\"100%\"\r\n                        events={upComing}\r\n                        // events={[\r\n                        // { title: \"event 1\", date: \"2020-12-06\" },\r\n                        // { title: \"event 2\", date: \"2020-12-12\" },\r\n                        //  ]}\r\n                    />\r\n                    </Card> \r\n                </Col> \r\n                <Col sm=\"4\">\r\n                     <h3\r\n                        style={{\r\n                        color: \"black\",\r\n                        }}\r\n                        className=\"text-center\"\r\n                    >\r\n                        Up Coming Expense\r\n                    </h3>\r\n                    {checkComingMonth === undefined ||\r\n                    checkComingMonth.length == 0 ? (\r\n                        <h2 className=\"text-center my-5\">\r\n                        There Is No Up Coming Expense This Month\r\n                        </h2>\r\n                    ) : (\r\n                        checkComingMonth.map((x) => (\r\n                        <>\r\n                            <div className=\"upcomingCard row\">\r\n                            <div className=\"upcoming card\">\r\n                                <h2 className=\"text-center\">{x.date.substr(8, 2)}</h2>\r\n                            </div>\r\n                            <div className=\"upcomingDetail card\">\r\n                                <h2 className=\"\">{x.title}</h2>\r\n                            </div>\r\n                            </div>\r\n                        </>\r\n                        ))\r\n                    )}\r\n                </Col>  \r\n\r\n            </Row>\r\n        </div>\r\n      )}\r\n      </>\r\n    )\r\n}\r\nexport default Calendar;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  Collapse,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { Element } from \"react-scroll\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Line } from \"@reactchartjs/react-chart.js\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport empty from \"../assets/empty.png\";\r\nimport glass from \"../assets/glass.png\";\r\nimport expense from \"../assets/expense.png\"\r\nimport \"../components/Profile.css\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst History = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const token = Cookies.get(\"token\");\r\n  const fullName = Cookies.get(\"fullName\");\r\n  const [expense, setExpense] = useState([]);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const [totalHistory, setTotalHistory] = useState({});\r\n  const urlMonth = \"http://52.148.70.171/chart/monthly\";\r\n  const urlWeek = \"http://52.148.70.171/chart/weekly\";\r\n\r\n  // console.log(token)\r\n\r\n  const urlHistory = \"http://52.148.70.171/subscription\";\r\n  const urlExpense = \"http://52.148.70.171/expense\";\r\n  const urlTotalHistory = \"http://52.148.70.171/history\";\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setIsLoading(true);\r\n    axios\r\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        setExpense(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    dataMonth();\r\n    dataWeek();\r\n\r\n    axios\r\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setTotalHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        //  console.log(res);\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    const url = `http://3.0.91.163/subscription/${id}/`;\r\n    axios\r\n      .delete(url, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // const expenses = () =>{\r\n  //     setIsLoading(true);\r\n  //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n  //     .then((res)=>{\r\n  //         console.log(res.data)\r\n  //         setExpense(res.data);\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n\r\n  // const subscribeDetails = (id) => {\r\n  //     setIsLoading(true);\r\n  //     const url =`http://3.0.91.163/service?id=${id}`\r\n  //     axios.get(url).then((res)=>{\r\n  //         console.log(res.data.subscribeId)\r\n  //         setSubscribeId(res.data);\r\n  //         setModal(!modal)\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"8\">\r\n            <Container>\r\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                <Col xs=\"12\" className=\"bg-default\">\r\n                  <Row>\r\n                    <Col xs=\"6\">\r\n                      <h4>Spending Value</h4>\r\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                      <div style={{ float: \"right\", position: \"relative\" }}>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapse}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                        >\r\n                          Month\r\n                        </Button>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapseWeek}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\r\n                        >\r\n                          Week\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                  <Collapse isOpen={isOpen}>\r\n                    <Line data={chartData} options={options} />\r\n                  </Collapse>\r\n                  <Collapse isOpen={isOpenWeek}>\r\n                    <Line data={chartWeek} options={options} />\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <Container>\r\n              <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscriptions</h3>\r\n              </Row>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n              <Row>\r\n                {history.length !== 0 ? (\r\n                  history.map((history) => (\r\n                    <Col xs=\"4\" key={history.id}>\r\n                      <Card>\r\n                        <CardImg\r\n                          top\r\n                          width=\"100%\"\r\n                          height=\"150px\"\r\n                          src={history.service.picture}\r\n                          alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold text-center\"\r\n                          >\r\n                            {history.service.name}\r\n                          </CardTitle>\r\n                          <Row>\r\n                            <Button\r\n                              onClick={() => {\r\n                                if (\r\n                                  window.confirm(\r\n                                    \"are you sure you wish to unsubscribe this item?\"\r\n                                  )\r\n                                )\r\n                                  handleRemove(history.serviceId);\r\n                              }}\r\n                              className=\"btn btn-primary btn-block\"\r\n                              id=\"button\"\r\n                            >\r\n                              Unsubscribe\r\n                            </Button>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))\r\n                ) : (\r\n                  <Container>\r\n                    <p style={{ opacity: \"60%\" }}>\r\n                      <i>\r\n                        <strong>You don't have any subscription.</strong>\r\n                      </i>\r\n                    </p>\r\n                    <Col className=\"subs\">\r\n                      <img\r\n                        src={glass}\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"50%\",\r\n                          opacity: \"0%\",\r\n                          position: \"center\",\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Container>\r\n                )}\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n\r\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"7px\" }}>\r\n            <h4>History</h4>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            <Card\r\n              style={{\r\n                marginTop: \"20px\",\r\n                color: \"white\",\r\n                backgroundColor: \"#8F48EA\",\r\n                marginBottom: \"25px\",\r\n              }}\r\n            >\r\n              <Row style={{ marginBottom: \"20px\" }}>\r\n                <Col xs=\"6\" style={{ paddingTop: \"20px\" }}>\r\n                  <CardTitle className=\"text-white\">\r\n                    <strong>Total :</strong>\r\n                  </CardTitle>\r\n                </Col>\r\n                <Col xs=\"6\" style={{ paddingTop: \"20px\" }}>\r\n                  <h6 style={{ float: \"right\" }}>\r\n                    <strong>IDR {totalHistory.total}</strong>{\" \"}\r\n                  </h6>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"700px\",\r\n                overflow: \"scroll\",\r\n                marginBottom: \"100px\",\r\n              }}\r\n            >\r\n              <h4>Subscriptions</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {history.length !== 0 ? (\r\n                history.map((subscribtion, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{ marginTop: \"20px\", backgroundColor: \"#f6f9fc\" }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"6\">\r\n                        <CardTitle className=\"text-dark font-weight\">\r\n                          <h6>\r\n                            {subscribtion.service.name} <br />{\" \"}\r\n                            {subscribtion.repeat}\r\n                          </h6>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"6\">\r\n                        <h6 style={{ float: \"right\" }}>\r\n                          IDR {subscribtion.service.cost}{\" \"}\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container style={{marginBottom:\"20px\"}}>\r\n                  <p style={{ opacity: \"60%\"}}>\r\n                    <i>\r\n                      <strong>No subscription found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs2\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n              <h4>Expenses</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {expense.length !== 0\r\n                ? expense.map((expenses, i) => (\r\n                    <Card\r\n                      key={i}\r\n                      style={{\r\n                        marginTop: \"20px\",\r\n                        padding: \"5px\",\r\n                        backgroundColor: \"#f6f9fc\",\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col xs=\"6\" style={{ paddingTop: \"10px\" }}>\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold\"\r\n                          >\r\n                            <h6>\r\n                              {expenses.title} <br /> {expenses.purchaseDate}\r\n                            </h6>\r\n                          </CardTitle>\r\n                        </Col>\r\n                        <Col xs=\"6\">\r\n                          <h6 style={{ float: \"right\", paddingTop: \"20px\" }}>\r\n                            IDR {expenses.total}{\" \"}\r\n                          </h6>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  ))\r\n                : (\r\n                  <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No expense found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs3\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n                )}\r\n            </Element>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js",["87","88","89","90","91","92"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["93","94","95","96","97","98","99"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["100"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js",["101","102","103","104","105"],"import React, { useEffect, useState } from 'react';\r\nimport {Bell} from 'react-feather';\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n    Button,\r\n    Popover,\r\n    PopoverHeader,\r\n    PopoverBody\r\n}from 'reactstrap';\r\n\r\n\r\nconst Bells = () => {\r\n    const [notif, setNotif] = useState([]);\r\n    const [date, setDate] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    \r\n    const token = Cookies.get(\"token\");\r\n\r\n    const toggle = () => setPopoverOpen(!popoverOpen)\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        axios\r\n        .get('http://52.148.70.171/subscription', {\r\n            headers: { Authorization: `Bearer ${token}`} \r\n        })\r\n        .then((res)=>{\r\n            setNotif(res.data)\r\n        })\r\n        console.log(\"setNotif\", setNotif)\r\n    }, [])\r\n\r\n    let tanggal = new Date();\r\n    \r\n    const maxDate = new Date(tanggal)\r\n    maxDate.setDate(maxDate.getDate() + 3)\r\n    //console.log(\"tanggal\")\r\n    let checkDueDate  = notif.filter((e)=>new Date(e.dueDate) <= maxDate)\r\n    //console.log(\"cek due date\", checkDueDate)\r\n    // if(tanggal<checkDueDate){\r\n    //     console.log(\"tampilkan notif\")\r\n    // }\r\n    // else{\r\n    //     console.log(\"notif ngak ada\")\r\n    // }\r\n    return (\r\n        <div>\r\n            <div id=\"Popover1\">\r\n                <Bell />\r\n            </div>\r\n            <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={toggle}>\r\n            <PopoverHeader>Notification</PopoverHeader>\r\n            {checkDueDate.map((notif)=>(\r\n                <PopoverBody>\r\n                <h3>{notif.service.name}</h3>\r\n                <h3>{notif.dueDate}</h3>\r\n                </PopoverBody>\r\n            ))}\r\n            </Popover>\r\n        </div>    \r\n    );\r\n    \r\n}\r\nexport default Bells;\r\n \r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js",["106"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["107","108","109","110","111","112","113"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":36,"column":8,"nodeType":"121","endLine":36,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":38,"column":9,"nodeType":"125","messageId":"126","endLine":38,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":39,"column":69,"nodeType":"129","messageId":"130","endLine":39,"endColumn":71},{"ruleId":"127","severity":1,"message":"128","line":83,"column":45,"nodeType":"129","messageId":"130","endLine":83,"endColumn":47},{"ruleId":"123","severity":1,"message":"131","line":10,"column":3,"nodeType":"125","messageId":"126","endLine":10,"endColumn":11},{"ruleId":"123","severity":1,"message":"132","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":8},{"ruleId":"123","severity":1,"message":"133","line":13,"column":3,"nodeType":"125","messageId":"126","endLine":13,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":15,"column":3,"nodeType":"125","messageId":"126","endLine":15,"endColumn":12},{"ruleId":"123","severity":1,"message":"135","line":18,"column":10,"nodeType":"125","messageId":"126","endLine":18,"endColumn":14},{"ruleId":"123","severity":1,"message":"136","line":21,"column":10,"nodeType":"125","messageId":"126","endLine":21,"endColumn":20},{"ruleId":"123","severity":1,"message":"137","line":25,"column":8,"nodeType":"125","messageId":"126","endLine":25,"endColumn":15},{"ruleId":"123","severity":1,"message":"138","line":45,"column":10,"nodeType":"125","messageId":"126","endLine":45,"endColumn":19},{"ruleId":"123","severity":1,"message":"139","line":47,"column":9,"nodeType":"125","messageId":"126","endLine":47,"endColumn":17},{"ruleId":"123","severity":1,"message":"140","line":49,"column":10,"nodeType":"125","messageId":"126","endLine":49,"endColumn":21},{"ruleId":"123","severity":1,"message":"141","line":49,"column":23,"nodeType":"125","messageId":"126","endLine":49,"endColumn":37},{"ruleId":"123","severity":1,"message":"142","line":52,"column":10,"nodeType":"125","messageId":"126","endLine":52,"endColumn":19},{"ruleId":"123","severity":1,"message":"143","line":52,"column":21,"nodeType":"125","messageId":"126","endLine":52,"endColumn":33},{"ruleId":"123","severity":1,"message":"144","line":53,"column":10,"nodeType":"125","messageId":"126","endLine":53,"endColumn":19},{"ruleId":"123","severity":1,"message":"145","line":53,"column":21,"nodeType":"125","messageId":"126","endLine":53,"endColumn":33},{"ruleId":"123","severity":1,"message":"146","line":54,"column":17,"nodeType":"125","messageId":"126","endLine":54,"endColumn":25},{"ruleId":"123","severity":1,"message":"147","line":55,"column":18,"nodeType":"125","messageId":"126","endLine":55,"endColumn":27},{"ruleId":"123","severity":1,"message":"148","line":66,"column":9,"nodeType":"125","messageId":"126","endLine":66,"endColumn":15},{"ruleId":"119","severity":1,"message":"149","line":108,"column":6,"nodeType":"121","endLine":108,"endColumn":8,"suggestions":"150"},{"ruleId":"123","severity":1,"message":"151","line":3,"column":3,"nodeType":"125","messageId":"126","endLine":3,"endColumn":9},{"ruleId":"123","severity":1,"message":"133","line":6,"column":3,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"123","severity":1,"message":"152","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":14},{"ruleId":"123","severity":1,"message":"153","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":16},{"ruleId":"123","severity":1,"message":"154","line":10,"column":18,"nodeType":"125","messageId":"126","endLine":10,"endColumn":23},{"ruleId":"123","severity":1,"message":"155","line":15,"column":11,"nodeType":"125","messageId":"126","endLine":15,"endColumn":20},{"ruleId":"123","severity":1,"message":"156","line":14,"column":8,"nodeType":"125","messageId":"126","endLine":14,"endColumn":13},{"ruleId":"123","severity":1,"message":"157","line":15,"column":8,"nodeType":"125","messageId":"126","endLine":15,"endColumn":17},{"ruleId":"123","severity":1,"message":"158","line":25,"column":10,"nodeType":"125","messageId":"126","endLine":25,"endColumn":20},{"ruleId":"123","severity":1,"message":"159","line":27,"column":9,"nodeType":"125","messageId":"126","endLine":27,"endColumn":16},{"ruleId":"123","severity":1,"message":"160","line":42,"column":10,"nodeType":"125","messageId":"126","endLine":42,"endColumn":14},{"ruleId":"123","severity":1,"message":"161","line":43,"column":10,"nodeType":"125","messageId":"126","endLine":43,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":102,"column":11,"nodeType":"164","endLine":102,"endColumn":37},{"ruleId":"119","severity":1,"message":"165","line":55,"column":6,"nodeType":"121","endLine":55,"endColumn":8,"suggestions":"166"},{"ruleId":"123","severity":1,"message":"151","line":6,"column":5,"nodeType":"125","messageId":"126","endLine":6,"endColumn":11},{"ruleId":"123","severity":1,"message":"167","line":15,"column":12,"nodeType":"125","messageId":"126","endLine":15,"endColumn":16},{"ruleId":"123","severity":1,"message":"168","line":15,"column":18,"nodeType":"125","messageId":"126","endLine":15,"endColumn":25},{"ruleId":"123","severity":1,"message":"169","line":16,"column":12,"nodeType":"125","messageId":"126","endLine":16,"endColumn":19},{"ruleId":"119","severity":1,"message":"165","line":33,"column":8,"nodeType":"121","endLine":33,"endColumn":10,"suggestions":"170"},{"ruleId":"119","severity":1,"message":"165","line":31,"column":6,"nodeType":"121","endLine":31,"endColumn":8,"suggestions":"171"},{"ruleId":"123","severity":1,"message":"172","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"123","severity":1,"message":"135","line":23,"column":10,"nodeType":"125","messageId":"126","endLine":23,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":173,"column":41,"nodeType":"164","endLine":177,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":195,"column":41,"nodeType":"164","endLine":199,"endColumn":42},{"ruleId":"175","severity":1,"message":"176","line":211,"column":41,"nodeType":"164","endLine":211,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":216,"column":41,"nodeType":"164","endLine":220,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":239,"column":41,"nodeType":"164","endLine":243,"endColumn":42},{"ruleId":"119","severity":1,"message":"165","line":41,"column":6,"nodeType":"121","endLine":41,"endColumn":8,"suggestions":"177"},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.","ArrayExpression",["180"],"no-unused-vars","'date' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["181"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["182"],"'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'loading' is assigned a value but never used.",["183"],["184"],"'CardBody' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"190","fix":"193"},{"desc":"190","fix":"194"},"Update the dependencies array to be: [token, upComing]",{"range":"195","text":"196"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"197","text":"198"},"Update the dependencies array to be: [token]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},{"range":"203","text":"200"},[1164,1166],"[token, upComing]",[3060,3062],"[dataMonth, dataWeek, token]",[1304,1306],"[token]",[885,887],[751,753],[919,921]]