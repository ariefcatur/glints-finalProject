[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\UploadImg.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js":"15","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"16","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"17","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"18","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"19","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js":"20"},{"size":1019,"mtime":1608026248734,"results":"21","hashOfConfig":"22"},{"size":2353,"mtime":1608830741038,"results":"23","hashOfConfig":"22"},{"size":3980,"mtime":1608830741083,"results":"24","hashOfConfig":"22"},{"size":14125,"mtime":1608976366873,"results":"25","hashOfConfig":"22"},{"size":15036,"mtime":1608976708075,"results":"26","hashOfConfig":"22"},{"size":4851,"mtime":1608992990494,"results":"27","hashOfConfig":"22"},{"size":5997,"mtime":1608976268299,"results":"28","hashOfConfig":"22"},{"size":344,"mtime":1608830741097,"results":"29","hashOfConfig":"22"},{"size":3883,"mtime":1608627575489,"results":"30","hashOfConfig":"22"},{"size":1772,"mtime":1608976268330,"results":"31","hashOfConfig":"22"},{"size":9022,"mtime":1608976268343,"results":"32","hashOfConfig":"22"},{"size":1293,"mtime":1607762145160,"results":"33","hashOfConfig":"22"},{"size":871,"mtime":1608282592527,"results":"34","hashOfConfig":"22"},{"size":6524,"mtime":1608627576003,"results":"35","hashOfConfig":"22"},{"size":4963,"mtime":1608977051401,"results":"36","hashOfConfig":"22"},{"size":567,"mtime":1607762145127,"results":"37","hashOfConfig":"22"},{"size":2398,"mtime":1608976268311,"results":"38","hashOfConfig":"22"},{"size":2580,"mtime":1608986972512,"results":"39","hashOfConfig":"22"},{"size":14299,"mtime":1608991184387,"results":"40","hashOfConfig":"22"},{"size":3131,"mtime":1608996125911,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1lm62wj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["94","95"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",["96","97","98","99"],"import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Container, Col, Row, Table } from \"reactstrap\";\r\nimport { Facebook, Twitter, Instagram, Linkedin } from \"react-feather\";\r\nimport gplay from \"../pages/img/googleplay.png\";\r\nimport appstore from \"../pages/img/appstore1.png\";\r\nimport crest from \"../assets/logo-subsit.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container >\r\n        <Container fluid style={{paddingTop:\"30px\"}}>\r\n          {/* <Row md=\"6\" sm=\"12\" style={{ padding: \"1%\", marginTop: \"1%\" }}>\r\n            <img src={crest} alt=\"\" style={{ width: \"10%\" }} />\r\n          </Row> */}\r\n          <Row>\r\n              <Container className=\"icons\" style={{ textAlign: \"center\" }}>\r\n                <Facebook\r\n                  size={45}\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n                <Twitter\r\n                  size={45}\r\n                  style={{\r\n                    marginRight: \"2%\",\r\n                    marginLeft: \"2%\",\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n                <Instagram\r\n                  size={45}\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n              </Container>\r\n          </Row>\r\n          <Row>\r\n              <Container style={{ textAlign: \"center\" }}>\r\n              <Container>\r\n                  <p><b>Terms of use | Privacy Policy</b></p>\r\n              </Container>\r\n              <img className=\"store\" src={gplay} alt=\"\"/>\r\n              <img className=\"store\" src={appstore} alt=\"\"/>\r\n              </Container>\r\n          </Row>\r\n          <b>\r\n            <p className=\"footerTable\">\r\n              Copyright &copy; 2020 SubsItId.herokuapp.com\r\n            </p>\r\n          </b>\r\n        </Container>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n",["100","101"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js",["102"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nconst TopUp = (props) => {\r\n  const { className } = props;\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const [results, setResults] = useState(\"\");\r\n  const [saldo, setSaldo] = useState(null);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      saldo: parseInt(saldo),\r\n    };\r\n\r\n    // axios\r\n    //   .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\r\n    //     headers: { Authorization: `Bearer ${token}` },\r\n    //   })\r\n    axios({\r\n      method: 'PATCH',\r\n      url: `https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`,\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\"ini res.data top up\");\r\n        console.log(res.data);\r\n        // return window.location.reload();\r\n      });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\r\n        onClick={toggle}\r\n      >\r\n        <strong>Top-up</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Top-up your balance here.</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Container>\r\n              <FormGroup>\r\n                <Label for=\"cardNumber\">Select Card</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"cardNumber\"\r\n                  id=\"cardNumber\"\r\n                  onChange={(e) => setCardNumber(e.target.value)}\r\n                >\r\n                  <option>Select card</option>\r\n                  {results.length !== 0\r\n                    ? results.map((result) => (\r\n                        <option value={result.cardNumber}>\r\n                          {result.cardBank} - IDR {result.saldo}\r\n                        </option>\r\n                      ))\r\n                    : \"\"}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"saldo\">Top-up amount:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"saldo\"\r\n                  id=\"saldo\"\r\n                  onClick={(e) => setSaldo(e.target.value)}\r\n                >\r\n                  <option>Select amount</option>\r\n                  <option>50000</option>\r\n                  <option>100000</option>\r\n                  <option>250000</option>\r\n                  <option>500000</option>\r\n                  <option>1000000</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  size=\"sm\"\r\n                  type=\"submit\"\r\n                  block\r\n                  outline\r\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n                >\r\n                  <strong>Confirm</strong>\r\n                </Button>\r\n              </FormGroup>\r\n            </Container>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopUp;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["103"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport visa from \"../assets/visa.png\";\r\nimport master from \"../assets/mastercard.png\";\r\nimport \"./Profile.css\";\r\nimport expense from \"../assets/expense.png\";\r\n\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure you want to remove this card?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, I'm sure!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete(`${urlCard}?cardNumber=${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          });\r\n        Swal.fire(\"Done!\", \"Your card has been removed.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong><NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Master\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Visa\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Container>\r\n            <p style={{ opacity: \"60%\" }}>\r\n              <i>\r\n                <strong>No card found. Please add card first.</strong>\r\n              </i>\r\n            </p>\r\n            <Col className=\"subs4\">\r\n              <img\r\n                src={expense}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n          // <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  Collapse,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { Element } from \"react-scroll\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Line } from \"@reactchartjs/react-chart.js\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport empty from \"../assets/empty.png\";\r\nimport glass from \"../assets/glass.png\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"../components/Profile.css\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst History = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const token = Cookies.get(\"token\");\r\n  const fullName = Cookies.get(\"fullName\");\r\n  const [expense, setExpense] = useState([]);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const [totalHistory, setTotalHistory] = useState([]);\r\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\r\n  const urlWeek = \"https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\r\n\r\n  const urlHistory = \"https://binar8-jul-hendri.nandaworks.com/subscription\";\r\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\r\n  const urlTotalHistory = \"https://binar8-jul-hendri.nandaworks.com/history\";\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setIsLoading(true);\r\n    axios\r\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        setHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        setExpense(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    dataMonth();\r\n    dataWeek();\r\n\r\n    axios\r\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(\"totalhistory\" ,res.data);\r\n        setTotalHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You are about to unsubscribe this service.\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, I'm sure.\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const url = ` https://binar8-jul-hendri.nandaworks.com/subscription/${id}/`;\r\n        axios\r\n          .delete(url, { headers: { Authorization: `Bearer ${token}` } })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          })\r\n          .catch((err) => console.log(err));    \r\n        Swal.fire(\"Done!\", \"You've been unsubscribed from this service.\", \"success\");\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"8\">\r\n            <Container>\r\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                <Col xs=\"12\" className=\"bg-default\">\r\n                  <Row>\r\n                    <Col xs=\"6\">\r\n                      <h4>Spending Value</h4>\r\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                      <div style={{ float: \"right\", position: \"relative\" }}>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapse}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                        >\r\n                          Month\r\n                        </Button>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapseWeek}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\r\n                        >\r\n                          Week\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                  <Collapse isOpen={isOpen}>\r\n                    <Line data={chartData} options={options} />\r\n                  </Collapse>\r\n                  <Collapse isOpen={isOpenWeek}>\r\n                    <Line data={chartWeek} options={options} />\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <Container>\r\n              <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscriptions</h3>\r\n              </Row>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n              <Row>\r\n                {history.length !== 0 ? (\r\n                  history.map((history) => (\r\n                    <Col xs=\"4\" key={history.id}>\r\n                      <Card className=\"mb-4\">\r\n                        <CardImg\r\n                          top\r\n                          width=\"100%\"\r\n                          height=\"150px\"\r\n                          src={history.service.picture}\r\n                          alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold text-center\"\r\n                          >\r\n                            <p><b>{history.service.name}</b></p>\r\n                          </CardTitle>\r\n                            <Button\r\n                              onClick={() => {\r\n                                handleRemove(history.serviceId);\r\n                              }}\r\n                              className=\"btn btn-primary btn-block\"\r\n                              id=\"button\"\r\n                            >\r\n                              <b>Unsubscribe</b>\r\n                            </Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))\r\n                ) : (\r\n                  <Container>\r\n                    <p style={{ opacity: \"60%\" }}>\r\n                      <i>\r\n                        <strong>You don't have any subscription.</strong>\r\n                      </i>\r\n                    </p>\r\n                    <Col className=\"subs\">\r\n                      <img\r\n                        src={glass}\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"50%\",\r\n                          opacity: \"0%\",\r\n                          position: \"center\",\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Container>\r\n                )}\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n\r\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"10px\" }}>\r\n            <h4>History</h4>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            <Card\r\n              style={{\r\n                marginTop: \"20px\",\r\n                color: \"white\",\r\n                backgroundColor: \"#8F48EA\",\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Row style={{ marginBottom: \"20px\" }}>\r\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\r\n                  <CardTitle className=\"text-white\">\r\n                    <strong>Total :</strong>\r\n                  </CardTitle>\r\n                </Col>\r\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\r\n                  <h6 style={{ float: \"right\" }}>\r\n                    <strong><NumberFormat value={totalHistory.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/> </strong>\r\n                  </h6>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"1000px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <h4>Subscriptions</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\", marginRight:\"5px\" }} />\r\n              {history.length !== 0 ? (\r\n                history.map((subscribtion, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{\r\n                      padding:\"3px\",\r\n                      marginTop: \"20px\",\r\n                      backgroundColor: \"#f6f9fc\",\r\n                      marginBottom: \"20px\",\r\n                      marginRight:\"5px\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"7\">\r\n                        <CardTitle className=\"text-dark font-weight\">\r\n                          <h6 style={{ paddingTop: \"15px\" }}>\r\n                            {subscribtion.repeat} : {subscribtion.service.name}{\" \"}\r\n                          </h6>\r\n                          <Moment format=\"D MMM YYYY\" >{subscribtion.startDate}</Moment>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"5\">\r\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\r\n                        <NumberFormat value={subscribtion.service.cost} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/>\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container style={{ marginBottom: \"20px\" }}>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No subscription found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs2\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n              <h4>Expenses</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\", marginRight:\"5px\" }} />\r\n              {expense.length !== 0 ? (\r\n                expense.map((expenses, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{\r\n                      marginTop: \"15px\",\r\n                      padding: \"5px\",\r\n                      backgroundColor: \"#f6f9fc\",\r\n                      marginRight:\"5px\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"6\" style={{ paddingTop: \"15px\" }}>\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight\">\r\n                          <h6>{expenses.title} </h6>\r\n                          <Moment format=\"D MMM YYYY\" >{expenses.purchaseDate}</Moment>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"6\">\r\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\r\n                        <NumberFormat value={expenses.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/>  \r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No expense found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs3\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n            </Element>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["123"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { X } from \"react-feather\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"./Profile.css\";\r\nimport { Element } from \"react-scroll\";\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you won't be able to retrieve this data!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          });\r\n        Swal.fire(\"Done!\", \"Your expense record has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"500px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <thead\r\n                className=\"text-center\"\r\n                style={{ backgroundColor: \"#BA8FF2\" }}\r\n              >\r\n                <tr>\r\n                  <th style={{ width: \"20%\" }}>Date</th>\r\n                  <th>Transaction</th>\r\n                  <th>Costs</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              {results.length !== 0 ? (\r\n                results.map((result) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-center\">\r\n                        <Moment format=\"D MMM YYYY\">\r\n                          {result.purchaseDate}\r\n                        </Moment>\r\n                      </td>\r\n                      <td className=\"text-center\" style={{ width: \"50%\" }}>\r\n                        {result.title}\r\n                      </td>\r\n                      \r\n                      <td className=\"text-center\"><NumberFormat value={result.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></td>\r\n                      <td style={{ width: \"100%\" }} className=\"text-center\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            handleDelete(result.id);\r\n                          }}\r\n                          color=\"danger\"\r\n                          outline\r\n                        >\r\n                          <X size={15} />\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              ) : (\r\n                <tbody>\r\n                  <tr>\r\n                    <td colSpan=\"6\">\r\n                      <Container>\r\n                        <p style={{ opacity: \"60%\" }}>\r\n                          <i>\r\n                            <strong>No expense found.</strong>\r\n                          </i>\r\n                        </p>\r\n                        <Col className=\"subs3\">\r\n                          <img\r\n                            src={expense}\r\n                            alt=\"\"\r\n                            style={{\r\n                              width: \"40%\",\r\n                              opacity: \"0%\",\r\n                              position: \"center\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                      </Container>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </Element>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["124","125","126","127","128","129"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",["130"],"import Cookies from \"js-cookie\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n    let history = useHistory();\r\n    Cookies.remove('token');\r\n    Cookies.remove('username');\r\n    Cookies.remove('status');\r\n    history.push('/');\r\n    return window.location.reload();\r\n    return null;\r\n\r\n}\r\n\r\nexport default Logout;",["131","132"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\UploadImg.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["133","134","135","136","137","138","139","140","141","142"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["143","144"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["145"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js",["146","147"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["148","149","150","151","152"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport avatar from \"../pages/img/circle3.png\";\r\nimport \"./Profile.css\";\r\nimport { User, Mail } from \"react-feather\";\r\nimport Edit from \"./EditProfile\";\r\nimport TabProfile from \"./TabProfile\";\r\nimport FileUpload from \"./UploadImg\"\r\n\r\nconst Profile = () => {\r\n  const [users, setUsers] = useState(\"\");\r\n  const [img, setImg] = useState(\"\");\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  const urlUpload = \"https://binar8-jul-hendri.nandaworks.com/files\";\r\n\r\n  useEffect(() => {\r\n\r\n    document.body.style.backgroundColor = \"#E5E5E5\"\r\n\r\n    axios\r\n      .get(\r\n        ` https://binar8-jul-hendri.nandaworks.com/auth/user/`, {\r\n            headers: {Authorization : `Bearer ${token}`}\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUsers(res.data);\r\n      })\r\n      .catch((error) => {\r\n      console.log(error);\r\n      });\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col xl=\"4\" sm=\"12\">\r\n        <Card id=\"cardphoto\">\r\n          <FileUpload/>\r\n        </Card>\r\n          <Card id=\"profilecard\">\r\n            {users.length !== 0 ? (\r\n              users.map((user)=> (\r\n                <CardBody key={user.id} className=\"cardBody\">\r\n                  <CardImg top src={user.photo} at=\"\" className=\"imgProfile\" />\r\n\r\n               \r\n                <Row className=\"rowright\">\r\n                  <Container>\r\n                    <Edit />\r\n                  </Container>\r\n                </Row>\r\n                <CardTitle>\r\n                  <Container>\r\n                    <p>\r\n                      <User size={22} /> <b>{user.fullName}</b>\r\n                    </p>\r\n                  </Container>\r\n                  <Container>\r\n                    <p>\r\n                      <Mail size={22} /> <strong>{user.email}</strong>\r\n                    </p>\r\n                  </Container>\r\n                </CardTitle>\r\n              </CardBody>\r\n              ))\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xl=\"8\" sm=\"12\">\r\n          <TabProfile />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["153","154","155","156","157","158","159","160","161","162"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\nimport { Calendar, PieChart } from 'react-feather';\r\nimport CalendarEvent from \"../components/Calendar\";\r\nimport Bells from \"./Bells\";\r\nimport AOS from 'aos';\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const featureBox1 = [\r\n    \"Sign Up\"\r\n  ];\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\r\n      <Navbar expand=\"sm\" style={{backgroundColor:\"#fefefe\", height:\"100px\"}}>\r\n      <NavbarBrand className=\"lognav\">\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li>\r\n                <a href=\"#about\"><Button id=\"transparant\" >About</Button></a>\r\n                </li>\r\n                <li>\r\n                <a href=\"#service\"><Button id=\"transparant\"> Service </Button></a>\r\n                </li>\r\n                <li>\r\n                <Signup \r\n                  btnTitle={featureBox1}\r\n                />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            <div>\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <PieChart style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Calendar\">\r\n                    <Calendar style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Bells />\r\n                </li>\r\n                <li>\r\n                  <ProfMenu/>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Collapse,\r\n  Spinner,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport youtube from \"./img/youtube.jpg\";\r\nimport hulu from \"./img/hulu-logo.jpg\";\r\nimport disney from \"./img/disney.jpeg\";\r\nimport sportify from \"./img/spotify.jpg\";\r\nimport netflix from \"./img/netflix.jpeg\";\r\nimport logo from \"./img/Rectangle.png\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport '../components/Profile.css'\r\nimport sleep from '../assets/sleep.png'\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\nconst Dashboard = () => {\r\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\r\n  const [subscribes, setSubscribes] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const token = Cookies.get(\"token\");\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [serviceId, setServiceId] = useState([]);\r\n  const [card, setCard] = useState([]);\r\n  const [cardId, setCardId] = useState(null);\r\n  const [checkCard, setCheckCard] = useState(\"\");\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n  const [chartData, setChartData] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const urlWeek = \" https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\r\n\r\n  const history = useHistory();\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setLoading(true);\r\n    axios\r\n      .get(urlSubscribe)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubscribes(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCheckCard(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    dataMonth();\r\n    dataWeek();\r\n  }, []);\r\n\r\n  const subscribeDetails = (id) => {\r\n    setLoading(true);\r\n    const url = ` http://52.148.70.171/service?id=${id}`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(\"subscribe id\", res.data);\r\n        setSubscribeId(res.data);\r\n        setModal(!modal);\r\n        setLoading(false);\r\n        subscribeCard();\r\n        setServiceId(id);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const subscribeCard = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(urlCard, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCard(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const subscribtion = (e) => {\r\n    e.preventDefault();\r\n    const url = ` http://52.148.70.171/subscription/${serviceId}/?cardId=${cardId}`;\r\n    // console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n    // console.log(token)\r\n    axios\r\n      .post(url, null, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        history.push(\"/history\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center mt-5\">\r\n          <Spinner\r\n            type=\"grow\"\r\n            style={{ width: \"4rem\", height: \"4rem\", color: \"#8F48EA\" }}\r\n          />\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n          Please wait...\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132, 0.2)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n              pointBackgroundColor: \"rgb(255, 99, 132)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n          <Col xs=\"12\" className=\"bg-default\">\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <h4>Spending Value</h4>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <div style={{ float: \"right\", position: \"relative\" }}>\r\n                  <Button\r\n                    id=\"button\"\r\n                    onClick={collapse}\r\n                    style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                  <Button\r\n                    id=\"button\"\r\n                    onClick={collapseWeek}\r\n                    style={{ marginBottom: \"1rem\", marginRight: \"30px\" }}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs=\"12\" className=\"bg-default\">\r\n            <Collapse isOpen={isOpen}>\r\n              <Line data={chartData} options={options} />\r\n            </Collapse>\r\n            <Collapse isOpen={isOpenWeek}>\r\n              <Line data={chartWeek} options={options} />\r\n            </Collapse>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className=\"ml-0 mt-3 mb-0\">\r\n          <h3>Popular Apps</h3>\r\n        </Row>\r\n        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          {checkCard.length !== 0 ? (\r\n            subscribes.map((subscribes) => (\r\n              <Col xs=\"3\" key={subscribes.id}>\r\n                <Card style={{ marginBottom: \"50px\" }}>\r\n                  <CardImg\r\n                    top\r\n                    width=\"100%\"\r\n                    height=\"170px\"\r\n                    src={subscribes.picture}\r\n                    alt=\"subscribtion\"\r\n                    style={{ border: \"0.5px solid grey\" }}\r\n                  />\r\n                  <CardBody className=\"bg-dangers\">\r\n                    <CardTitle\r\n                      tag=\"h6\"\r\n                      className=\"text-dark font-weight-bold text-center\"\r\n                    >\r\n                      <p>\r\n                        <b>{subscribes.name}</b>\r\n                      </p>\r\n                    </CardTitle>\r\n                    <Button\r\n                      onClick={() => subscribeDetails(subscribes.id)}\r\n                      className=\"btn btn-primary btn-block\"\r\n                      id=\"button\"\r\n                    >\r\n                      <b>Susbcribe</b>\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            ))\r\n          ) : (\r\n            <Container className=\"text-align-center\">\r\n              <Container\r\n                style={{\r\n                  opacity: \"60%\",\r\n                  paddingTop: \"30px\",\r\n                }}\r\n              >\r\n                <p>\r\n                  <b>\r\n                    <i>\r\n                      Oops! It seems like you haven't added any card yet. Please\r\n                      submit your card information in your profile page before\r\n                      using this feature.\r\n                    </i>\r\n                  </b>\r\n                </p>\r\n                <Col className=\"subs6\">\r\n                  <img\r\n                    src={sleep}\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      opacity: \"0%\",\r\n                      position: \"center\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Container>\r\n            </Container>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}></ModalHeader>\r\n            <ModalBody>\r\n              {subscribeId.map((subscribe) => (\r\n                <Row key={subscribe.id}>\r\n                  <CardTitle style={{ textAlign: \"center\" }}>\r\n                    <h5>\r\n                      <strong>{subscribe.name}</strong>\r\n                    </h5>\r\n                  </CardTitle>\r\n                  <CardImg\r\n                    top\r\n                    width=\"15%\"\r\n                    src={subscribe.picture}\r\n                    style={{ border: \"0.5px solid grey\" }}\r\n                    alt=\"subscribtion\"\r\n                  />\r\n                  <CardBody style={{ marginBottom:\"-25px\" }}>\r\n                    <CardText style={{ textAlign: \"justify\" }}>\r\n                      <p>{subscribe.description}</p>\r\n                    </CardText>\r\n                    {/* <CardText>\r\n                      <p>\r\n                        Cost: <strong>IDR {subscribe.cost}</strong>\r\n                      </p>\r\n                    </CardText> */}\r\n                    <Row style={{marginBottom: \"-5px\"}}>\r\n                      <Col md=\"7\">\r\n                        \r\n                          <FormGroup>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"cardId\"\r\n                              id=\"cardId\"\r\n                              onChange={(e) => {\r\n                                setCardId(e.target.value);\r\n                                console.log(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option>Select Card</option>\r\n                              {card.length !== 0\r\n                                ? card.map((cards) => (\r\n                                    <option value={cards.id}>\r\n                                      {cards.cardBank} - IDR {cards.saldo}\r\n                                    </option>\r\n                                  ))\r\n                                : \"\"}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        \r\n                      </Col>\r\n                      <Col md=\"5\">\r\n                      <Alert id=\"cost\">\r\n                      <strong><NumberFormat value={subscribe.cost} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/> </strong>\r\n                      </Alert>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col md=\"12\">\r\n                        <Button\r\n                          onClick={subscribtion}\r\n                          className=\"btn btn-block\"\r\n                          id=\"button\"\r\n                        >\r\n                          <b>Subscribe</b>\r\n                        </Button>\r\n                    </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Row>\r\n              ))}\r\n            </ModalBody>\r\n          </Modal>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":21,"nodeType":"188","messageId":"189","endLine":3,"endColumn":24},{"ruleId":"186","severity":1,"message":"190","line":3,"column":31,"nodeType":"188","messageId":"189","endLine":3,"endColumn":36},{"ruleId":"186","severity":1,"message":"191","line":4,"column":40,"nodeType":"188","messageId":"189","endLine":4,"endColumn":48},{"ruleId":"186","severity":1,"message":"192","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":13},{"ruleId":"182","replacedBy":"193"},{"ruleId":"184","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":39,"column":6,"nodeType":"197","endLine":39,"endColumn":8,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"196","line":69,"column":6,"nodeType":"197","endLine":69,"endColumn":8,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":10,"column":3,"nodeType":"188","messageId":"189","endLine":10,"endColumn":11},{"ruleId":"186","severity":1,"message":"201","line":12,"column":3,"nodeType":"188","messageId":"189","endLine":12,"endColumn":8},{"ruleId":"186","severity":1,"message":"202","line":13,"column":3,"nodeType":"188","messageId":"189","endLine":13,"endColumn":14},{"ruleId":"186","severity":1,"message":"203","line":15,"column":3,"nodeType":"188","messageId":"189","endLine":15,"endColumn":12},{"ruleId":"186","severity":1,"message":"204","line":18,"column":10,"nodeType":"188","messageId":"189","endLine":18,"endColumn":14},{"ruleId":"186","severity":1,"message":"205","line":21,"column":10,"nodeType":"188","messageId":"189","endLine":21,"endColumn":20},{"ruleId":"186","severity":1,"message":"206","line":25,"column":8,"nodeType":"188","messageId":"189","endLine":25,"endColumn":15},{"ruleId":"186","severity":1,"message":"207","line":48,"column":10,"nodeType":"188","messageId":"189","endLine":48,"endColumn":19},{"ruleId":"186","severity":1,"message":"208","line":50,"column":9,"nodeType":"188","messageId":"189","endLine":50,"endColumn":17},{"ruleId":"186","severity":1,"message":"209","line":52,"column":10,"nodeType":"188","messageId":"189","endLine":52,"endColumn":21},{"ruleId":"186","severity":1,"message":"210","line":52,"column":23,"nodeType":"188","messageId":"189","endLine":52,"endColumn":37},{"ruleId":"186","severity":1,"message":"211","line":55,"column":10,"nodeType":"188","messageId":"189","endLine":55,"endColumn":19},{"ruleId":"186","severity":1,"message":"212","line":55,"column":21,"nodeType":"188","messageId":"189","endLine":55,"endColumn":33},{"ruleId":"186","severity":1,"message":"213","line":56,"column":10,"nodeType":"188","messageId":"189","endLine":56,"endColumn":19},{"ruleId":"186","severity":1,"message":"214","line":56,"column":21,"nodeType":"188","messageId":"189","endLine":56,"endColumn":33},{"ruleId":"186","severity":1,"message":"215","line":57,"column":17,"nodeType":"188","messageId":"189","endLine":57,"endColumn":25},{"ruleId":"186","severity":1,"message":"216","line":58,"column":18,"nodeType":"188","messageId":"189","endLine":58,"endColumn":27},{"ruleId":"186","severity":1,"message":"217","line":67,"column":9,"nodeType":"188","messageId":"189","endLine":67,"endColumn":15},{"ruleId":"195","severity":1,"message":"218","line":107,"column":6,"nodeType":"197","endLine":107,"endColumn":8,"suggestions":"219"},{"ruleId":"195","severity":1,"message":"196","line":32,"column":6,"nodeType":"197","endLine":32,"endColumn":8,"suggestions":"220"},{"ruleId":"186","severity":1,"message":"221","line":9,"column":8,"nodeType":"188","messageId":"189","endLine":9,"endColumn":15},{"ruleId":"186","severity":1,"message":"222","line":10,"column":8,"nodeType":"188","messageId":"189","endLine":10,"endColumn":13},{"ruleId":"186","severity":1,"message":"223","line":15,"column":10,"nodeType":"188","messageId":"189","endLine":15,"endColumn":17},{"ruleId":"195","severity":1,"message":"224","line":52,"column":6,"nodeType":"197","endLine":52,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":54,"column":69,"nodeType":"228","messageId":"229","endLine":54,"endColumn":71},{"ruleId":"226","severity":1,"message":"227","line":108,"column":41,"nodeType":"228","messageId":"229","endLine":108,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":11,"column":5,"nodeType":"232","messageId":"233","endLine":11,"endColumn":17},{"ruleId":"182","replacedBy":"234"},{"ruleId":"184","replacedBy":"235"},{"ruleId":"186","severity":1,"message":"236","line":12,"column":3,"nodeType":"188","messageId":"189","endLine":12,"endColumn":8},{"ruleId":"186","severity":1,"message":"237","line":15,"column":8,"nodeType":"188","messageId":"189","endLine":15,"endColumn":13},{"ruleId":"186","severity":1,"message":"238","line":16,"column":8,"nodeType":"188","messageId":"189","endLine":16,"endColumn":17},{"ruleId":"186","severity":1,"message":"239","line":27,"column":10,"nodeType":"188","messageId":"189","endLine":27,"endColumn":20},{"ruleId":"186","severity":1,"message":"240","line":29,"column":9,"nodeType":"188","messageId":"189","endLine":29,"endColumn":16},{"ruleId":"186","severity":1,"message":"241","line":44,"column":10,"nodeType":"188","messageId":"189","endLine":44,"endColumn":14},{"ruleId":"186","severity":1,"message":"242","line":45,"column":10,"nodeType":"188","messageId":"189","endLine":45,"endColumn":17},{"ruleId":"186","severity":1,"message":"243","line":46,"column":10,"nodeType":"188","messageId":"189","endLine":46,"endColumn":22},{"ruleId":"186","severity":1,"message":"244","line":89,"column":9,"nodeType":"188","messageId":"189","endLine":89,"endColumn":18},{"ruleId":"245","severity":1,"message":"246","line":92,"column":28,"nodeType":"247","messageId":"248","endLine":92,"endColumn":29,"suggestions":"249"},{"ruleId":"186","severity":1,"message":"250","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":20,"column":9,"nodeType":"253","endLine":20,"endColumn":70},{"ruleId":"251","severity":1,"message":"252","line":18,"column":8,"nodeType":"253","endLine":18,"endColumn":27},{"ruleId":"186","severity":1,"message":"254","line":17,"column":8,"nodeType":"188","messageId":"189","endLine":17,"endColumn":14},{"ruleId":"186","severity":1,"message":"255","line":18,"column":8,"nodeType":"188","messageId":"189","endLine":18,"endColumn":20},{"ruleId":"186","severity":1,"message":"256","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":14},{"ruleId":"186","severity":1,"message":"257","line":22,"column":10,"nodeType":"188","messageId":"189","endLine":22,"endColumn":13},{"ruleId":"186","severity":1,"message":"258","line":22,"column":15,"nodeType":"188","messageId":"189","endLine":22,"endColumn":21},{"ruleId":"186","severity":1,"message":"259","line":26,"column":9,"nodeType":"188","messageId":"189","endLine":26,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":46,"column":6,"nodeType":"197","endLine":46,"endColumn":8,"suggestions":"260"},{"ruleId":"186","severity":1,"message":"261","line":6,"column":3,"nodeType":"188","messageId":"189","endLine":6,"endColumn":16},{"ruleId":"186","severity":1,"message":"262","line":9,"column":3,"nodeType":"188","messageId":"189","endLine":9,"endColumn":6},{"ruleId":"186","severity":1,"message":"237","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":13},{"ruleId":"186","severity":1,"message":"263","line":16,"column":8,"nodeType":"188","messageId":"189","endLine":16,"endColumn":14},{"ruleId":"186","severity":1,"message":"264","line":18,"column":8,"nodeType":"188","messageId":"189","endLine":18,"endColumn":11},{"ruleId":"186","severity":1,"message":"265","line":19,"column":8,"nodeType":"188","messageId":"189","endLine":19,"endColumn":13},{"ruleId":"186","severity":1,"message":"266","line":23,"column":8,"nodeType":"188","messageId":"189","endLine":23,"endColumn":21},{"ruleId":"186","severity":1,"message":"267","line":25,"column":8,"nodeType":"188","messageId":"189","endLine":25,"endColumn":11},{"ruleId":"186","severity":1,"message":"217","line":30,"column":9,"nodeType":"188","messageId":"189","endLine":30,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":40,"column":15,"nodeType":"253","endLine":40,"endColumn":34},{"ruleId":"186","severity":1,"message":"268","line":20,"column":3,"nodeType":"188","messageId":"189","endLine":20,"endColumn":8},{"ruleId":"186","severity":1,"message":"269","line":23,"column":8,"nodeType":"188","messageId":"189","endLine":23,"endColumn":15},{"ruleId":"186","severity":1,"message":"270","line":24,"column":8,"nodeType":"188","messageId":"189","endLine":24,"endColumn":12},{"ruleId":"186","severity":1,"message":"271","line":25,"column":8,"nodeType":"188","messageId":"189","endLine":25,"endColumn":14},{"ruleId":"186","severity":1,"message":"272","line":26,"column":8,"nodeType":"188","messageId":"189","endLine":26,"endColumn":16},{"ruleId":"186","severity":1,"message":"273","line":27,"column":8,"nodeType":"188","messageId":"189","endLine":27,"endColumn":15},{"ruleId":"186","severity":1,"message":"274","line":28,"column":8,"nodeType":"188","messageId":"189","endLine":28,"endColumn":12},{"ruleId":"186","severity":1,"message":"204","line":29,"column":10,"nodeType":"188","messageId":"189","endLine":29,"endColumn":14},{"ruleId":"186","severity":1,"message":"275","line":29,"column":16,"nodeType":"188","messageId":"189","endLine":29,"endColumn":25},{"ruleId":"186","severity":1,"message":"205","line":32,"column":10,"nodeType":"188","messageId":"189","endLine":32,"endColumn":20},{"ruleId":"186","severity":1,"message":"276","line":85,"column":10,"nodeType":"188","messageId":"189","endLine":85,"endColumn":19},{"ruleId":"186","severity":1,"message":"277","line":85,"column":21,"nodeType":"188","messageId":"189","endLine":85,"endColumn":33},{"ruleId":"186","severity":1,"message":"215","line":92,"column":17,"nodeType":"188","messageId":"189","endLine":92,"endColumn":25},{"ruleId":"186","severity":1,"message":"216","line":93,"column":18,"nodeType":"188","messageId":"189","endLine":93,"endColumn":27},{"ruleId":"186","severity":1,"message":"211","line":96,"column":10,"nodeType":"188","messageId":"189","endLine":96,"endColumn":19},{"ruleId":"186","severity":1,"message":"212","line":96,"column":21,"nodeType":"188","messageId":"189","endLine":96,"endColumn":33},{"ruleId":"186","severity":1,"message":"213","line":97,"column":10,"nodeType":"188","messageId":"189","endLine":97,"endColumn":19},{"ruleId":"186","severity":1,"message":"214","line":97,"column":21,"nodeType":"188","messageId":"189","endLine":97,"endColumn":33},{"ruleId":"195","severity":1,"message":"218","line":139,"column":6,"nodeType":"197","endLine":139,"endColumn":8,"suggestions":"278"},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Linkedin' is defined but never used.","'crest' is defined but never used.",["279"],["280"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["281"],["282"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["283"],["284"],"'Loading' is defined but never used.","'sleep' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["285"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["279"],["280"],"'Alert' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'btnTitle1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["286","287"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Moment' is defined but never used.","'NumberFormat' is defined but never used.","'avatar' is defined but never used.","'img' is assigned a value but never used.","'setImg' is assigned a value but never used.","'urlUpload' is assigned a value but never used.",["288"],"'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'AOS' is defined but never used.","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.",["289"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"293","fix":"294"},{"desc":"290","fix":"295"},{"desc":"296","fix":"297"},{"messageId":"298","fix":"299","desc":"300"},{"messageId":"301","fix":"302","desc":"303"},{"desc":"290","fix":"304"},{"desc":"293","fix":"305"},"Update the dependencies array to be: [token]",{"range":"306","text":"307"},{"range":"308","text":"307"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"309","text":"310"},{"range":"311","text":"307"},"Update the dependencies array to be: [token, upComing]",{"range":"312","text":"313"},"removeEscape",{"range":"314","text":"315"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"316","text":"317"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"318","text":"307"},{"range":"319","text":"310"},[868,870],"[token]",[1777,1779],[3199,3201],"[dataMonth, dataWeek, token]",[939,941],[1581,1583],"[token, upComing]",[2681,2682],"",[2681,2681],"\\",[1095,1097],[3996,3998]]