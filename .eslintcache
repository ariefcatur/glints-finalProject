[{"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js":"1","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js":"2","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js":"3","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js":"4","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js":"5","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js":"6","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js":"7","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js":"8","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js":"9","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js":"10","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js":"11","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js":"12","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js":"13","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js":"14","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js":"15","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js":"16","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowSubscriptions.js":"17","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js":"18","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowCard.js":"19","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js":"20","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js":"21"},{"size":546,"mtime":1606980992273,"results":"22","hashOfConfig":"23"},{"size":1283,"mtime":1607397458522,"results":"24","hashOfConfig":"23"},{"size":2251,"mtime":1607319888450,"results":"25","hashOfConfig":"23"},{"size":2383,"mtime":1607219256831,"results":"26","hashOfConfig":"23"},{"size":298,"mtime":1607226668764,"results":"27","hashOfConfig":"23"},{"size":1993,"mtime":1607241707793,"results":"28","hashOfConfig":"23"},{"size":11380,"mtime":1607400440704,"results":"29","hashOfConfig":"23"},{"size":10672,"mtime":1607398522367,"results":"30","hashOfConfig":"23"},{"size":12573,"mtime":1607076230330,"results":"31","hashOfConfig":"23"},{"size":3544,"mtime":1606980992273,"results":"32","hashOfConfig":"23"},{"size":4187,"mtime":1607399995084,"results":"33","hashOfConfig":"23"},{"size":1255,"mtime":1607076230330,"results":"34","hashOfConfig":"23"},{"size":189,"mtime":1607226668760,"results":"35","hashOfConfig":"23"},{"size":852,"mtime":1607226668764,"results":"36","hashOfConfig":"23"},{"size":1992,"mtime":1607230205571,"results":"37","hashOfConfig":"23"},{"size":5992,"mtime":1607265604162,"results":"38","hashOfConfig":"23"},{"size":1524,"mtime":1607399692894,"results":"39","hashOfConfig":"23"},{"size":1350,"mtime":1607395737501,"results":"40","hashOfConfig":"23"},{"size":1472,"mtime":1607402926938,"results":"41","hashOfConfig":"23"},{"size":6305,"mtime":1607399114455,"results":"42","hashOfConfig":"23"},{"size":5479,"mtime":1607403358813,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1h8k743",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js",[],["100","101"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js",["102","103"],"import React, {Component} from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter, Link } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Dashboard from './pages/Dashboard'\nimport History from './pages/History'\nimport Profile from './components/Profile.js'\nimport Footer from './components/Footer.js'\nimport TopMenu from \"./pages/TopMenu\";\nimport Logout from \"./pages/Logout\";\n\n\n\nfunction App(){\n  return(\n    <>\n     <TopMenu />\n     {/* <TopUser /> */}\n          {/* <ul>\n            <li>\n              <Link to=\"/Dashboard\"> Dashboard </Link>\n            </li>\n            <li>\n              <Link to=\"/History\"> History </Link>\n            </li>\n            <li> \n              <Link to=\"/Profile\"> Profile </Link>\n            </li>\n            <li>\n              <Link to=\"/Home\"> Home </Link>\n            </li>\n          </ul> */}\n    <Switch>\n      <Route path =\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route path =\"/history\">\n        <History />\n      </Route>\n      <Route path =\"/profile\">\n        <Profile />\n      </Route>\n      <Route path =\"/logout\">\n        <Logout />\n      </Route>\n      <Route path=\"/\">\n            <Home />\n      </Route>\n    </Switch>\n    <Footer/>\n    </>\n  );\n}\n\n\n\nexport default withRouter(App);\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js",["104","105"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from 'js-cookie';\nimport avatar from \"../assets/avatar2.png\";\nimport \"./Profile.css\";\nimport { User, Mail, MapPin, Smile } from \"react-feather\";\nimport Edit from \"./EditProfile\";\nimport TabProfile from \"./TabProfile\";\n\nconst Profile = (props) => {\n  const [user, setUser] = useState(\"\");\n\n  const fullname = Cookies.get('fullname');\n\n  const token = Cookies.get('token');\n\n  const email = Cookies.get('email');\n\n  useEffect(() => {\n    axios\n      .get(\n        `http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/user/`, {\n            headers: {Authorization : `Bearer ${token}`}\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        setUser(res);\n      });\n  }, []);\n\n  return (\n    <Container className=\"profile\">\n      <Row>\n        <Col xl=\"4\" sm=\"12\">\n          <Card>\n            {user ? (\n              <CardBody className=\"cardBody\">\n                <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\n                <Row className=\"rowright\">\n                  <Container>\n                    <Edit />\n                  </Container>\n                </Row>\n                <CardTitle>\n                  <Container>\n                    <p>\n                      <User size={22} /> {fullname}\n                    </p>\n                  </Container>\n                  {/* <Container>\n                    <p>\n                      <Smile size={22} /> Username\n                    </p>\n                  </Container> */}\n                  <Container>\n                    <p>\n                      <Mail size={22} /> {email}\n                    </p>\n                  </Container>\n                  <Container>\n                    <p>\n                      <MapPin size={22} /> Bandung\n                    </p>\n                  </Container>\n                </CardTitle>\n              </CardBody>\n            ) : (\n              \"\"\n            )}\n          </Card>\n        </Col>\n        <Col xl=\"8\" sm=\"12\">\n          <TabProfile />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js",["106","107","108","109","110","111","112","113"],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n} from \"reactstrap\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport subsit from \"./img/SubsIt..svg\";\nimport \"./TopMenu.css\";\nimport Modals from \"./Modalender\";\nimport { Link} from \"react-router-dom\";\nimport app from \"./img/app.svg\";\nimport chart from \"./img/Group 11.svg\";\nimport { checkLogin } from \"../Helper\";\nimport ProfMenu from \"./ProfMenu\";\n\nconst TopMenu = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Container fluid className=\"barnav\">\n      <Navbar expand=\"md\">\n        <NavbarBrand className=\"lognav\" href=\"/\">\n          <Link to=\"/dashboard\">\n            <img src={subsit}></img>\n          </Link>\n        </NavbarBrand>\n\n        <Nav className=\"ml-auto\" navbar>\n          <Collapse isOpen={isOpen} navbar></Collapse>\n          {!checkLogin() && (\n            <div className=\"body\">\n              <ul id=\"Menu\">\n                <li className=\"liquid1\"></li>\n                <li>\n                  <a href=\"#\">About</a>\n                </li>\n                <li>\n                  <a href=\"#\">Product</a>\n                </li>\n                <li>\n                  <Signup />\n                </li>\n              </ul>\n            </div>\n          )}\n          {checkLogin() && (\n            <div>\n              <ul id=\"Menu\" className=\"liquid1\">\n                <li>\n                  <Link to=\"/history\">\n                    <img src={chart}></img>\n                  </Link>\n                </li>\n                <li>\n                  <img src={app}></img>\n                </li>\n                <li>\n                  <Modals />\n                </li>\n                <li>\n                  <ProfMenu />\n                </li>\n              </ul>\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default TopMenu;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useEffect, useState } from 'react';\nimport {\n    Container,\n    Row,\n    CardImg,\n    Card,\n    Col,\n    CardBody,\n    CardTitle,\n    CardText,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Collapse,\n    Spinner,\n} from 'reactstrap';\nimport youtube from './img/youtube.jpg'\nimport hulu from './img/hulu-logo.jpg'\nimport disney from './img/disney.jpeg'\nimport sportify from './img/spotify.jpg'\nimport netflix from './img/netflix.jpeg'\nimport logo from './img/Rectangle.png'\nimport { Link, useParams} from 'react-router-dom';\nimport { Line } from '@reactchartjs/react-chart.js'\nimport axios from 'axios';\nimport {checkLogin} from '../Helper';\nimport Cookies from 'js-cookie';\nimport AddExpenses from '../components/AddExpenses';\n\n\n// const dataMonth= {\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\n//     datasets:[\n//         {\n//             label: '# Month',\n//             data: [12, 19, 3, 5, 2, 3],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\n\n// const options = {\n//     scales: {\n//         yAxes: [\n//           {\n//             ticks: {\n//               beginAtZero: true,\n//             },\n//           },\n//         ],\n//       },\n// }\n\n// const dataWeek= {\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n//     datasets:[\n//         {\n//             label: '# Week',\n//             data: [12, 19, 3, 5],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\n\n\n\nconst Dashboard = () =>{ \n    const urlSubscribe = 'http://3.0.91.163/service'\n    const [subscribes, setSubscribes] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [isOpen, setIsOpen] = useState(true);\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [subscribeId, setSubscribeId] = useState([]);\n    const token = Cookies.get('token');\n    const [startDate, setStartDate] = useState(0)\n    const [serviceId, setServiceId] = useState([])\n    const [card,setCard] = useState([])\n    const [cardId,setCardId] = useState(null)\n    const urlCard = 'http://3.0.91.163/card'\n    const [chartData, setChartData] = useState({});\n    const [dates, setDates] = useState([]);\n    const [totals, setTotals] = useState([]);\n    const urlMonth='http://3.0.91.163/chart/monthly'\n    const [chartWeek, setChartWeek] = useState({});\n    const [weekMonth, setWeekMonth] = useState([]);\n    const [totalWeek, setTotalWeek] = useState([]);\n    const urlWeek='http://3.0.91.163/chart/weekly'\n\n    const toggle = () =>setModal(!modal);\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\n\n    useEffect(() => {\n        setLoading(true);\n        axios.get(urlSubscribe).then((res) => {\n          setSubscribes(res.data);\n          setLoading(false);\n        })\n        .catch((err)=> console.log(err));\n        \n        dataMonth();\n        dataWeek();\n      }, []);\n    \n    const subscribeDetails = (id) => {\n        setLoading(true);\n        const url =`http://3.0.91.163/service?id=${id}`\n        axios.get(url).then((res)=>{\n            console.log(res.data.subscribeId)\n            setSubscribeId(res.data);\n            setModal(!modal)\n            setLoading(false);\n            subscribeCard()\n        })\n        .catch((err)=> console.log(err));           \n    }\n\n    const subscribeCard = () =>{\n        setLoading(true);\n        axios.get(urlCard, {headers : {Authorization : `Bearer ${token}`}})\n        .then((res)=>{\n            console.log(res.data)\n            setCard(res.data);\n            setLoading(false);\n        })\n        .catch((err)=> console.log(err));\n    }\n\n    const subscribtion = (e)=>{\n        e.preventDefault();\n        const url =`http://3.0.91.163/${serviceId}/?cardId=${cardId}`\n        \n        axios\n        .post(url, {headers:{Authorization: `Bearer ${token}`}})\n        .then((res)=>{\n            console.log(res.data)\n        })\n        .catch((error)=>{\n            console.error(error);\n        });\n    }\n\n    if (loading) {\n        return (\n          <div>\n            <Row className=\"justify-content-center mt-5\">\n              <Spinner type=\"grow\" color=\"warning\" />\n            </Row>\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\n              Sedang memuat data...\n            </Row>\n          </div>\n        );\n      }\n\n      const dataMonth =()=>  {\n        let month = [];\n        let pay = [];\n         axios\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\n         .then((res)=>{\n             console.log(res);\n             for(const dataObj of res.data){\n                 month.push(dataObj.dates)\n                 pay.push(dataObj.totals)\n             }\n             setChartData({\n                labels: month,\n                datasets:[\n                    {\n                        label: '# Month',\n                        data: pay,\n                        fill: false,\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\n                    },\n                ],  \n            })\n         }).catch((err)=>{\n             console.log(err)\n        });\n        console.log(dates, totals)\n        \n    }\n    \n    const dataWeek =()=> {\n        let week = [];\n        let pay = [];\n        axios\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\n        .then((res)=>{\n            console.log(res);\n            for(const dataObj of res.data){\n                week.push(dataObj.weekMonth)\n                pay.push(dataObj.totals)\n            }\n            setChartWeek({\n               labels: week,\n               datasets:[\n                   {\n                       label: '# Week',\n                       data: pay,\n                       fill: false,\n                       backgroundColor: 'rgb(255, 99, 132)',\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\n                   },\n               ],  \n           })\n        }).catch((err)=>{\n            console.log(err)\n       });\n       console.log(dates, totals)\n    }\n\n    const options = {\n        scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n    }\n    \n   \n    return(\n        <Container fluid className=\"content\">\n            <Container>\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n                    <Col xs=\"12\" className=\"bg-default\">\n                        <Row>\n                        <Col xs=\"6\">\n                            <h4>Spending Value</h4>\n                        </Col>\n                        <Col xs=\"6\">   \n                        <div style={{float :'right', position:'relative',  }}> \n                        <Button  id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\n                        <Button  id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'30px'}}>Week</Button>\n                        </div>\n                        </Col>\n                        </Row>\n                    </Col>\n                    <Col xs=\"12\" className=\"bg-default\">\n                        <Collapse isOpen={isOpen}>\n                            <Line data={chartData}  options={options} />\n                        </Collapse>\n                        <Collapse isOpen={isOpenWeek}>\n                            <Line data={chartWeek}  options={options} />\n                        </Collapse>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n            <Row className=\"ml-0 mt-3 mb-2\">\n                <h3>Popular Apps</h3>\n            </Row>\n            </Container>\n            <Container>\n                <Row>\n                    {subscribes.map((subscribes, ) =>(\n                        <Col xs=\"3\" key={subscribes.id}>\n                        <Card style={{marginBottom:'50px'}}>\n                            <CardImg\n                                top\n                                width=\"100%\"\n                                height=\"170px\"\n                                src={subscribes.picture}\n                                alt=\"subscribtion\"\n                            />\n                            <CardBody className=\"bg-dangers\">\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\n                                <h5>{subscribes.name}</h5>\n                            </CardTitle>\n                            <Row>\n                            <Button\n                                onClick={()=> subscribeDetails(subscribes.id)}\n                                className=\"btn btn-primary btn-block\"\n                                id=\"button\"\n                            >\n                                Subcribe\n                            </Button>\n                            </Row>\n                            </CardBody>\n                        </Card>\n                        </Col>  \n                    ))}\n                </Row>\n                <Row>\n                    <Modal isOpen={modal} toggle={toggle} >\n                        <ModalHeader toggle={toggle}> \n                        </ModalHeader>\n                        <ModalBody>\n                        {subscribeId.map((subscribe)=>(\n                            <Col key={subscribe.id}>\n                            <CardImg\n                                top\n                                height=\"300px\"\n                                src={subscribe.picture}\n                                alt=\"subscribtion\"\n                            /> \n                        <CardBody>\n                            <CardText>\n                                <h5>\n                                    Description: <br/>{subscribe.description}\n                                </h5>\n                                <h5>\n                                    Cost: {subscribe.cost}\n                                </h5>\n                                {card.map((cards)=>(\n                                <h5>Card : {cards.cardBank} </h5>    \n                                ))}\n                                \n                            </CardText>\n                            <Row>\n                            <Button\n                                to=\"\"\n                                className=\"btn btn-primary btn-block\"\n                                id=\"button\"\n                            >\n                                Subscribe\n                            </Button>\n                            </Row>\n                        </CardBody>\n                                </Col>\n                            ))}\n                            \n                    </ModalBody>\n                </Modal>\n                </Row> \n                <Row>\n                <AddExpenses/>\n                </Row> \n            </Container>\n        </Container>\n    )\n}\n\nexport default Dashboard;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React, { useEffect, useState } from 'react';\nimport {\n    Container,\n    Row,\n    CardImg,\n    Card,\n    Col,\n    CardBody,\n    CardTitle,\n    CardText,\n    Button,\n    Modal,\n    ModalHeader,\n    Collapse,\n    ModalBody\n    \n} from 'reactstrap';\nimport youtube from './img/youtube.jpg'\nimport hulu from './img/hulu-logo.jpg'\nimport disney from './img/disney.jpeg'\nimport sportify from './img/spotify.jpg'\nimport netflix from './img/netflix.jpeg'\nimport logo from './img/Rectangle.png'\nimport { Link } from 'react-router-dom';\nimport { Line } from '@reactchartjs/react-chart.js'\nimport axios from 'axios';\nimport {checkLogin} from '../Helper';\nimport Cookies from 'js-cookie'\n\nconst options = {\n    scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n}\n\nconst History = () =>{ \n    const [history, setHistory]=useState([]);\n    const [modal, setModal] = useState(false);\n    const [isOpen, setIsOpen] = useState(true);\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const token = Cookies.get('token');\n    const fullName = Cookies.get('fullName')\n    const [expense, setExpense]=useState([]);\n    const [subscribeId, setSubscribeId] = useState([]);\n    const [chartData, setChartData] = useState({});\n    const [chartWeek, setChartWeek] = useState({});\n    const [weekMonth, setWeekMonth] = useState([]);\n    const [totalWeek, setTotalWeek] = useState([]);\n    const [dates, setDates] = useState([]);\n    const [totals, setTotals] = useState([]);\n    const urlMonth='http://3.0.91.163/chart/monthly'\n    const urlWeek='http://3.0.91.163/chart/weekly'\n\n    console.log(token)\n\n    const urlHistory ='http://3.0.91.163/subscription'\n    const urlExpense ='http://3.0.91.163/expense'\n\n    const toggle = () =>setModal(!modal);\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\n    \n    useEffect(()=>{\n        setIsLoading(true);\n        axios\n        .get(urlHistory, {headers : {Authorization : `Bearer ${token}`}})\n        .then((res)=>{\n            console.log(res.data);\n            setHistory(res.data);\n            setIsLoading(false);\n            expenses();\n        })\n        .catch((err)=>console.log(err))\n\n        dataMonth();\n        dataWeek();\n    }, [])\n    \n    const dataMonth =()=>  {\n        let month = [];\n        let pay = [];\n         axios\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\n         .then((res)=>{\n             console.log(res);\n             for(const dataObj of res.data){\n                 month.push(dataObj.dates)\n                 pay.push(dataObj.totals)\n             }\n             setChartData({\n                labels: month,\n                datasets:[\n                    {\n                        label: '# Month',\n                        data: pay,\n                        fill: false,\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\n                    },\n                ],  \n            })\n         }).catch((err)=>{\n             console.log(err)\n        });\n        console.log(dates, totals)\n        \n    }\n\n    const dataWeek =()=> {\n        let week = [];\n        let pay = [];\n        axios\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\n        .then((res)=>{\n            console.log(res);\n            for(const dataObj of res.data){\n                week.push(dataObj.weekMonth)\n                pay.push(dataObj.totals)\n            }\n            setChartWeek({\n               labels: week,\n               datasets:[\n                   {\n                       label: '# Week',\n                       data: pay,\n                       fill: false,\n                       backgroundColor: 'rgb(255, 99, 132)',\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\n                   },\n               ],  \n           })\n        }).catch((err)=>{\n            console.log(err)\n       });\n       console.log(dates, totals)\n    }\n\n    const expenses = () =>{\n        setIsLoading(true);\n        axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\n        .then((res)=>{\n            console.log(res.data)\n            setExpense(res.data);\n            setIsLoading(false);\n        })\n        .catch((err)=> console.log(err));\n    }\n\n    const deleteSubscribe = () =>{\n\n    }\n    const subscribeDetails = (id) => {\n        setIsLoading(true);\n        const url =`http://3.0.91.163/service?id=${id}`\n        axios.get(url).then((res)=>{\n            console.log(res.data.subscribeId)\n            setSubscribeId(res.data);\n            setModal(!modal)\n            setIsLoading(false);\n        })\n        .catch((err)=> console.log(err));           \n    }\n    return(\n        <Container fluid className=\"content\">\n            <Container>\n            <Row>\n            <Col xs=\"8\">\n            <Container>\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n                    <Col xs=\"12\"className=\"bg-default\">\n                    <Row>\n                        <Col xs=\"6\" >\n                            <h4>Spending Value</h4>\n                        </Col>\n                        <Col xs=\"6\">   \n                        <div style={{float :'right', position:'relative',  }}> \n                        <Button id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\n                        <Button id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'10px'}}>Week</Button>\n                        </div>\n                        </Col>\n                    </Row>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Collapse isOpen={isOpen}>\n                            <Line data={chartData}  options={options} />\n                        </Collapse>\n                        <Collapse isOpen={isOpenWeek}>\n                            <Line data={chartWeek}  options={options} />\n                        </Collapse>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n            <Row className=\"ml-0 mt-3 mb-2\">\n                <h3>Your Subscribe</h3>\n            </Row>\n            </Container>\n            <Container>\n                <Row>\n                    {history.map((history)=>(\n                        <Col xs=\"4\" key={history.id}>\n                        <Card>\n                            <CardImg\n                                top\n                                width=\"100%\"\n                                height=\"150px\"\n                                src={history.service.picture}\n                                alt=\"subscribtion\"\n                            />\n                            <CardBody className=\"bg-dangers\">\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\n                                {history.service.name}\n                            </CardTitle>\n                            <Row>\n                            <Button\n                                onClick={()=> subscribeDetails(history.id)}\n                                className=\"btn btn-primary btn-block\"\n                                id =\"button\"\n                            >\n                                Unsubcribe\n                            </Button>\n                            </Row>\n                            </CardBody>\n                        </Card>\n                        </Col>\n                    ))}\n                </Row>\n                <Modal isOpen={modal} toggle={toggle} >\n                        <ModalHeader toggle={toggle}> \n                        </ModalHeader>\n                        <ModalBody>\n                        {subscribeId.map((subscribe)=>(\n                            <Col key={subscribe.id}>\n                            <CardImg\n                                top\n                                height=\"300px\"\n                                src={subscribe.picture}\n                                alt=\"subscribtion\"\n                            /> \n                        <CardBody>\n                            <CardText>\n                                <h5>\n                                    Description: <br/>{subscribe.description}\n                                </h5>\n                                <h5>\n                                    Cost: {subscribe.cost}\n                                </h5>   \n                            </CardText>\n                            <Row>\n                            <Button\n                                to=\"\"\n                                className=\"btn btn-primary btn-block\"\n                                id=\"button\"\n                            >\n                                Unsubscribe\n                            </Button>\n                            </Row>\n                            </CardBody>\n                                </Col>\n                            ))}\n                            \n                    </ModalBody>\n                </Modal>\n            </Container>\n            </Col>\n            <Col xs=\"4\" style={{backgroundColor: 'white'}}> \n                <h4>history</h4>\n\n                \n                {history.map((subscribtion, i)=>(\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\n                    <Row>\n                    <Col xs=\"8\">\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight\"><h6>{subscribtion.service.name}  <br/> {subscribtion.repeat}</h6> \n                    </CardTitle>\n                    </Col>\n                    <Col xs=\"4\">\n                    <h6>Rp.  {subscribtion.service.cost} </h6>\n                    </Col>       \n                    </Row>\n                </Card>\n                ))}\n                {expense.map((expenses, i )=>(\n                 <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\n                <Row>\n                    <Col xs=\"8\">\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold\"><h6>{expenses.title} <br/> {expenses.purchaseDate}</h6></CardTitle>\n                    </Col>\n                    <Col xs=\"4\">\n                    <h6>Rp.  {expenses.total} </h6>\n                    </Col>\n                    \n                </Row>  \n                </Card> \n                ))}\n            </Col>\n            </Row>\n            </Container>\n        </Container>\n    )\n}\n\nexport default History;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js",["153","154","155","156","157","158","159"],"import React, {useState, useEffect} from 'react';\nimport {\n    Container,\n    Row,\n    CardImg,\n    Card,\n    Col,\n    CardBody,\n    CardTitle,\n    Button,\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Spinner,\n    \n} from 'reactstrap';\nimport subscribe from './img/subscribe.svg'\nimport expense from './img/expense.svg'\nimport budgetting from './img/budgetting.svg'\nimport history from './img/history.svg'\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faAd, faCoins, faDigitalTachograph, faClipboard} from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nconst Home = () =>{\n    const urlSubscribe = 'http://3.0.91.163/service';\n    const [subscribes, setSubscribes] = useState([]);\n    const [activeTab, setActiveTab] = useState('1');\n    const [loading, setLoading] = useState(false);\n    \n    \n    useEffect(() => {\n        setLoading(true);\n    \n        axios.get(urlSubscribe).then((res) => {\n          setSubscribes(res.data);\n          setLoading(false);\n        });\n      }, []);\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n      }\n    \n    const addIcon = <FontAwesomeIcon icon ={faAd}/>;\n    const addCoins = <FontAwesomeIcon icon ={faCoins}/>;\n    const addDigital = <FontAwesomeIcon icon ={faDigitalTachograph}/>;\n    const addClipboard = <FontAwesomeIcon icon={faClipboard}/>;\n\n    if (loading) {\n        return (\n          <div>\n            <Row className=\"justify-content-center mt-5\">\n              <Spinner type=\"grow\" color=\"warning\" />\n            </Row>\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\n              Sedang memuat data...\n            </Row>\n          </div>\n        );\n    }\n    return(\n        <>\n            <Container fluid>\n                <Row className=\"banner\"> \n                    <Col xs=\"5\">\n                        <div className=\"logo\">\n                        <h1><b>Stress Free</b></h1>\n                        <h1><b>Subscription Manager</b></h1>\n                        <Button \n                            width=\"80px\"\n                            to=\"\"\n                            className=\"btn \" \n                            id=\"button\"\n                        >\n                            Try For Free\n                        </Button>\n\n                        </div>\n                    </Col>\n                    <Col xs=\"7\"> \n                        <Row>\n                        <div className=\"logo-gambar\"></div>   \n                        </Row>  \n                    </Col>\n                </Row>\n            </Container>\n            <Container className=\"about\">\n            <h1 className=\"section\" >About US</h1>\n            <div className=\"section-title-divider \"></div>\n            \n                <div className=\"aboutIntro\">\n                    <h3><span className=\"text-green\">Manage</span> your subscription business from anywhere\n                    <br />\n                    You can easily keep a pulse on your subscription business in one platform, from anywhere.</h3>\n                \n                </div>\n            \n            </Container>\n            <Container fluid className=\"content\">\n            <section id=\"features\" className=\"features\">\n                <Container >\n                    <Nav >\n                        <Col sm=\"3\" >\n                            <Card className=\"tabs\">\n                                <NavItem>\n                                    <NavLink className={classnames({ active: activeTab === '1'})}\n                                        onClick={() =>{toggle('1');}}\n                                    >\n                                        <Row><Col sm=\"8\"><h4>Subscribe</h4></Col>\n                                         <Col sm=\"4\" className=\"icon\"> {addIcon} </Col></Row>\n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        <Col sm=\"3\">\n                            <Card className=\"tabs\">\n                                <NavItem >\n                                    <NavLink className={classnames({active: activeTab === '2'})}\n                                    onClick={()=>{toggle('2');}}\n                                >\n                                   <Row><Col sm=\"8\" ><h4>Expense</h4></Col> \n                                   <Col sm=\"4\" className=\"icon\"> {addCoins} </Col></Row> \n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        <Col sm=\"3\">\n                            <Card className=\"tabs\">\n                                <NavItem>\n                                    <NavLink className={classnames({active: activeTab === '3'})}\n                                    onClick={()=>{toggle('3');}}\n                                >\n                                    <Row><Col sm=\"8\"><h4>Budgetting</h4></Col> \n                                    <Col sm=\"4\" className=\"icon\"> {addDigital} </Col></Row>\n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        <Col sm =\"3\">\n                            <Card className=\"tabs\">\n                                <NavItem>\n                                    <NavLink className={classnames({active: activeTab === '4'})}\n                                    onClick={()=>{toggle('4');}}\n                                >\n                                     <Row><Col sm=\"8\"><h4>History</h4></Col>\n                                      <Col sm=\"4\"className=\"icon\" > {addClipboard} </Col></Row>\n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        \n                    </Nav>\n                   \n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <Row>\n                                <Col lg=\"12\">\n                                    <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                         <h3>Easily create a subscription website</h3>\n                                         <h4>Simply put in the items you wish to purchase on subscription, and the website builder will generate a subscription website for you \n                                            right away. Join a member and create your own management subscription service you want to make.\n                                        </h4>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={subscribe}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <Row>\n                                <Col lg=\"12\">\n                                <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                            <h3>Control your own daily expense</h3>\n                                            \n                                         <h4>Expense</h4>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={expense}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <Row>\n                                <Col lg=\"12\">\n                                <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                        <h3></h3>\n                                         <h4>Budgetting</h4>\n                                         </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={budgetting}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                            <Row>\n                                <Col lg=\"12\">\n                                <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                         <h3>Real-time reporting for finance and subscribtion</h3>\n                                         <h4>With full visibility of all business expenditure and powerful reporting features at your disposal,\n                                            SubsIt empowers you to make smarter financial decisions.\n                                            Process expenses as they are approved and post to your accounting package with ease.</h4>\n                                         </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={history}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </TabContent>\n                </Container>\n            </section>\n            </Container>\n            <Container fluid className=\"popular\">\n                <Container>\n                    <h1 className=\"section\" >Popular Apps</h1>\n                    <div className=\"section-title-divider \"></div>\n                <Row>\n                    {subscribes.slice(0,4).map((subscribes, i) =>(\n                        <Col sm=\"3\" key={i}>\n                        <Card>\n                            <CardImg\n                                top\n                                width=\"100%\"\n                                height=\"170px\"\n                                src={subscribes.picture}\n                                alt=\"subscribtion\"\n                            />\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\n                            <h4>{subscribes.name}</h4>\n                            </CardTitle>\n                        </Card>\n                        </Col>\n                    ))}\n                       \n                </Row>\n                </Container>\n            \n            </Container>\n            <Container fluid className=\"team\">\n                <Container>\n                    <h1 className=\"section\" >Team</h1>\n                    <div className=\"section-title-divider \"></div>\n                </Container>\n            </Container>\n        </>\n    )\n}\n\nexport default Home;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js",["160","161","162","163","164","165"],"import React, { useState } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Container, Card, CardBody, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { CreditCard, Activity, DollarSign } from 'react-feather'\nimport classnames from 'classnames';\nimport './Profile.css'\nimport AddCard from './AddCard'\nimport AddExpenses from './AddExpenses'\nimport ShowExpenses from './ShowExpense'\nimport ShowCard from './ShowCard'\n\nconst TabProfile = (props) => {\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }}\n          >\n            <CreditCard size={22}/> Cards\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { toggle('2'); }}\n          >\n            <Activity size={22}/> Card Status\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '3' })}\n            onClick={() => { toggle('3'); }}\n          >\n            <DollarSign size={22}/> Expenses\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n        <Row className=\"rowright\">\n            <Container>\n            <AddCard/>\n            </Container>\n        </Row>\n        <Row>\n          <ShowCard/>\n            {/* <Col xl=\"4\" sm=\"12\">\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                        </CardTitle>\n                        <CardText>\n                            <p>Card Number: 1122334455667788</p>\n                            <p>Card Type: Master</p>\n                            <p>Balance: Rp 1000000</p>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xl=\"4\" sm=\"12\">\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            <h5>BNI</h5>\n                        </CardTitle>\n                        <CardText>\n                            <p>Card Number: 1122334455667788</p>\n                            <p>Card Type: Master</p>\n                            <p>Balance: Rp 1000000</p>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n            <Col xl=\"4\" sm=\"12\">\n                <Card>\n                    <CardBody>\n                        <CardTitle>\n                            <h5>BNI</h5>\n                        </CardTitle>\n                        <CardText>\n                            <p>Card Number: 1122334455667788</p>\n                            <p>Card Type: Master</p>\n                            <p>Balance: Rp 1000000</p>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col> */}\n        </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n            {/* <Col sm=\"6\">\n              <Card body>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n                <Button>Go somewhere</Button>\n              </Card>\n            </Col>\n            <Col sm=\"6\">\n              <Card body>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n                <Button>Go somewhere</Button>\n              </Card>\n            </Col> */}\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"3\">\n        <Row >\n            <Container className=\"rowright\">\n            <AddExpenses/>\n            </Container>\n            <ShowExpenses/>\n        </Row>\n        <Row>\n        </Row>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n}\n\nexport default TabProfile;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js",["166","167"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Calendar from \"react-calendar\";\nimport Lendar from \"./img/calendar.svg\";\nimport \"./Modalender.css\"\n\nconst Modalender = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\n  return (\n    <div>\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\n           \n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\n        <ModalHeader>CALENDAR</ModalHeader>\n        <ModalBody>\n          <b>Your Schedule</b><br />\n            <Calendar />\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Modalender;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js",["168"],"import profile from \"./img/Ellipse 1.svg\";\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst ProfMenu = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  \n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle\n        tag=\"span\"\n        data-toggle=\"dropdown\"\n        aria-expanded={dropdownOpen}\n      >\n       <img src={profile}></img>\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem> <Link to=\"/profile\">View Profile</Link></DropdownItem>\n        <DropdownItem> <Link to=\"/logout\">Log Out</Link></DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nexport default ProfMenu;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js",["169","170","171","172","173","174"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Signup from \"./Signup\";\n\n\nconst Login = (props) => {\n  const { className } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <>\n      <div className=\"modal-dialog modal-login\">\n        <div className=\"modal-content\">\n          <div className=\"model-header\">\n            <h4 className=\"modal-title\">LOGIN</h4>\n            <button className=\"close\"></button>\n          </div>\n          <div className=\"modal-body\">\n            <form method=\"post\">\n              <div className=\"form-group\">\n                <i className=\"fa fa-user\"></i>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                  required=\"required\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <i className=\"fa fa-lock\"></i>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  required=\"required\"\n                />\n              </div>\n              <hr />\n              <div className=\"form-group\">\n                <Input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                  value=\"Login\"\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\n          </div>\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\n            <ModalBody>\n              <Signup />\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js",["175","176","177","178","179","180","181"],"import React, { useState } from \"react\";\nimport \"./Signup.css\";\nimport { Modal, ModalHeader, ModalBody, Button, Alert } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\n\n\nconst SignUp = (props) => {\n  let history = useHistory();\n  const { buttonLabel, className } = props;\n\n  const [modalSignUp, setModalSignUp] = useState(false);\n  const [modalSignIn, setModalSignIn] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const checker = () => {\n    localStorage.getItem(\"token\") === null\n      ? setIsLoggedIn(false)\n      : setIsLoggedIn(true);\n  };\n\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\n  const toggleSignIn = () => {\n    setModalSignIn(!modalSignIn);\n    setModalSignUp(false);\n  };\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState()\n\n  const handleSubmitSignUp = (e) => {\n    e.preventDefault();\n\n    const urlSignUp = \" http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/register\";\n    const bodyData = {\n      fullName: fullName,\n      email: email,\n      password: password,\n    };\n\n    axios.post(urlSignUp, bodyData).then((ress)=>{\n      console.log(ress.bodyData);\n      history.push({toggleSignIn});\n      // <Alert color=\"primary\">Mantav</Alert>;\n    })\n  };\n\n\n  const handleSubmitSignIn = (e) => {\n    e.preventDefault();\n\n    const urlSignIn = \"http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/login\";\n    const bodyData = {\n      email: email,\n      password: password,\n    };\n\n    axios.post(urlSignIn, bodyData).then((res)=>{\n      console.log(res);\n      const fullname = res.data.fullName;\n      const email = res.data.email;\n      const token = res.data.token;\n      Cookies.set('fullname', fullname, {expires:1});\n      Cookies.set('email', email,{expires:1});\n      Cookies.set('token', token,{expires:1});\n      setUser(res.data);\n      history.push(`/Dashboard`);\n    })\n      \n  };\n\n  return (\n    <div>\n      <div className=\"SignUpModal\">\n        <div className=\"navigation\">\n        \n          <a  onClick={toggleSignUp}>\n            {buttonLabel}Sign Up\n          </a>\n        </div>\n\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\n          <ModalHeader toggle={toggleSignUp}>\n            <div className=\"ModalHeader\">\n              <h4 className=\"SignTitle\">Sign Up For a New Account</h4>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <form onSubmit={handleSubmitSignUp}>\n              <div className=\"form-group\">\n                <label id=\"SignUp\">Full Name</label>\n                <br />\n                <input\n                  id=\"InputSignUp\"\n                  type=\"text\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter full name\"\n                  onChange={(e) => setFullName(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label id=\"SignUp\">Email</label>\n                <br />\n                <input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label id=\"SignUp\">Password</label>\n                <br />\n                <input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n              <button\n                id=\"submitButton\"\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n              >\n                Sign Up\n              </button>\n              <p className=\"Login\">\n                Already have an account?{\" \"}\n                <Button color=\"primary\" onClick={toggleSignIn}>\n                  {buttonLabel}Login\n                </Button>\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\n              </p>\n            </form>\n          </ModalBody>\n        </Modal>\n      </div>\n\n      <div className=\"SignInModal\">\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\n          <ModalHeader toggle={toggleSignIn}>\n            <div className=\"ModalHeader\"></div>\n          </ModalHeader>\n          <ModalBody>\n            <form onSubmit={handleSubmitSignIn}>\n              <div className=\"form-group\">\n                <label id=\"SignUp\">Email</label>\n                <br />\n                <input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label id=\"SignUp\">Password</label>\n                <br />\n                <input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n              <button\n                id=\"submitButton\"\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                onClick={toggleSignIn}\n              >\n                Login\n              </button>\n            </form>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>\n\n    // </div>\n  );\n};\n\nexport default SignUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowSubscriptions.js",["182"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js",["183"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst ShowExpenses = () => {\n  const [results, setResults] = useState(\"\");\n\n  const urlExpense = \"http://3.0.91.163/expense\";\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlExpense, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <>\n      {results.length !== 0 ? (\n        results.map((result) => (\n          <Col md={3} key={result.id}>\n            <Card style={{ marginBottom: \"15px\", minHeight:\"165px\"}}>\n              <CardBody className=\"d-flex flex-column align-items-center\">\n                <CardTitle style={{minHeight:\"50px\"}}>\n                  <strong>{result.title}</strong>\n                </CardTitle>\n                <CardText>Rp {result.total}</CardText>\n                <CardText>{result.purchaseDate}</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))\n      ) : (\n        <Container></Container>\n      )}\n    </>\n  );\n};\n\nexport default ShowExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowCard.js",["184","185","186"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js",["187"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { Plus } from 'react-feather'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst AddCard = (props) => {\n\n  const urlAddCard = \"http://3.0.91.163/card\";\n\n  const history = useHistory();\n\n  const { className } = props;\n\n  const [cardType, setCardType] = useState(null);\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardValid, setCardValid] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const [cardBank, setCardBank] = useState(null);\n  const [saldo, setSaldo] = useState(\"\");\n  const [cardHolder, setCardHolder] = useState(\"\");\n\n  const token = Cookies.get('token');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      cardType: cardType,\n      cardNumber: cardNumber,\n      cardValid: cardValid,\n      cvv: cvv,\n      cardBank: cardBank,\n      saldo: saldo,\n      cardHolder: cardHolder,\n    };\n\n    console.log(data);\n\n    axios\n      .post(urlAddCard, data, {\n        headers: {Authorization: `Bearer ${token}`}\n      })\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((error) =>{\n        console.log(error);\n      })\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{color: \"white\", backgroundColor: \"#8F48EA\"}}\n        onClick={toggle}>\n        <Plus size={15}/>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Add new card here.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n              <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"cardType\">Card Type</Label>\n                        <Input\n                        type=\"select\"\n                        name=\"cardType\"\n                        id=\"cardType\"\n                        onChange={(e) => setCardType(e.target.value)}\n                        >\n                            <option>Select card type</option>\n                            <option>Master</option>\n                            <option>Visa</option>\n                        </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"cardNumber\">Card Number</Label>\n                        <Input\n                        type=\"cardNumber\"\n                        name=\"cardNumber\"\n                        id=\"cardNumber\"\n                        placeholder=\"•••• •••• •••• ••••\"\n                        onChange={(e) => setCardNumber(e.target.value)}\n                        />\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"cardValid\">Card Expiry</Label>\n                        <Input\n                        type=\"cardValid\"\n                        name=\"cardValid\"\n                        id=\"cardValid\"\n                        placeholder=\"•• / ••\"\n                        onChange={(e) => setCardValid(e.target.value)}\n                        />\n                  </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"cvv\">Card CVC</Label>\n                     <Input\n                        type=\"cvv\"\n                        name=\"cvv\"\n                        id=\"cvv\"\n                        placeholder=\"••••\"\n                        onChange={(e) => setCvv(e.target.value)}\n                     />\n                  </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"cardBank\">Bank</Label>\n                        <Input\n                        type=\"select\"\n                        name=\"cardBank\"\n                        id=\"cardBank\"\n                        onChange={(e) => setCardBank(e.target.value)}\n                        >\n                          <option>Select Bank</option>\n                          <option>BRI</option>\n                          <option>Mandiri</option>\n                          <option>BNI</option>\n                          <option>BCA</option>\n                          <option>CIMB Niaga</option>\n                          <option>BTN</option>\n                          <option>Panin</option>\n                          <option>Citibank</option>\n                          <option>Other</option>\n                        </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"saldo\">Balance</Label>\n                     <Input\n                        type=\"saldo\"\n                        name=\"saldo\"\n                        id=\"saldo\"\n                        placeholder=\"IDR\"\n                        onChange={(e) => setSaldo(e.target.value)}\n                     />\n                  </FormGroup>\n                  </Col>\n                  <Col>\n                  <FormGroup>\n                    <Label for=\"cardHolder\">Card Holder Name</Label>\n                        <Input\n                        type=\"cardHolder\"\n                        name=\"cardHolder\"\n                        id=\"cardHolder\"\n                        placeholder=\"Input card holder's name\"\n                        onChange={(e) => setCardHolder(e.target.value)}\n                    />\n                  </FormGroup>\n                  </Col>\n              </Row>\n            <FormGroup>\n              <Button\n                block\n                type=\"submit\"\n                onClick={toggle}\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n              >\n                <strong>Add New Card</strong>\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddCard;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js",["188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":1,"column":16,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"197","line":3,"column":37,"nodeType":"195","messageId":"196","endLine":3,"endColumn":41},{"ruleId":"193","severity":1,"message":"198","line":15,"column":30,"nodeType":"195","messageId":"196","endLine":15,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":39,"column":6,"nodeType":"201","endLine":39,"endColumn":8,"suggestions":"202"},{"ruleId":"193","severity":1,"message":"203","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":16},{"ruleId":"193","severity":1,"message":"204","line":11,"column":8,"nodeType":"195","messageId":"196","endLine":11,"endColumn":13},{"ruleId":"193","severity":1,"message":"205","line":24,"column":9,"nodeType":"195","messageId":"196","endLine":24,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":31,"column":13,"nodeType":"208","endLine":31,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":42,"column":19,"nodeType":"208","endLine":42,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":45,"column":19,"nodeType":"208","endLine":45,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":58,"column":21,"nodeType":"208","endLine":58,"endColumn":38},{"ruleId":"206","severity":1,"message":"207","line":62,"column":19,"nodeType":"208","endLine":62,"endColumn":34},{"ruleId":"193","severity":1,"message":"211","line":18,"column":8,"nodeType":"195","messageId":"196","endLine":18,"endColumn":15},{"ruleId":"193","severity":1,"message":"212","line":19,"column":8,"nodeType":"195","messageId":"196","endLine":19,"endColumn":12},{"ruleId":"193","severity":1,"message":"213","line":20,"column":8,"nodeType":"195","messageId":"196","endLine":20,"endColumn":14},{"ruleId":"193","severity":1,"message":"214","line":21,"column":8,"nodeType":"195","messageId":"196","endLine":21,"endColumn":16},{"ruleId":"193","severity":1,"message":"215","line":22,"column":8,"nodeType":"195","messageId":"196","endLine":22,"endColumn":15},{"ruleId":"193","severity":1,"message":"216","line":23,"column":8,"nodeType":"195","messageId":"196","endLine":23,"endColumn":12},{"ruleId":"193","severity":1,"message":"197","line":24,"column":10,"nodeType":"195","messageId":"196","endLine":24,"endColumn":14},{"ruleId":"193","severity":1,"message":"217","line":24,"column":16,"nodeType":"195","messageId":"196","endLine":24,"endColumn":25},{"ruleId":"193","severity":1,"message":"218","line":27,"column":9,"nodeType":"195","messageId":"196","endLine":27,"endColumn":19},{"ruleId":"193","severity":1,"message":"219","line":83,"column":12,"nodeType":"195","messageId":"196","endLine":83,"endColumn":21},{"ruleId":"193","severity":1,"message":"220","line":83,"column":23,"nodeType":"195","messageId":"196","endLine":83,"endColumn":35},{"ruleId":"193","severity":1,"message":"221","line":84,"column":23,"nodeType":"195","messageId":"196","endLine":84,"endColumn":35},{"ruleId":"193","severity":1,"message":"222","line":86,"column":19,"nodeType":"195","messageId":"196","endLine":86,"endColumn":28},{"ruleId":"193","severity":1,"message":"223","line":89,"column":19,"nodeType":"195","messageId":"196","endLine":89,"endColumn":27},{"ruleId":"193","severity":1,"message":"224","line":90,"column":20,"nodeType":"195","messageId":"196","endLine":90,"endColumn":29},{"ruleId":"193","severity":1,"message":"225","line":93,"column":12,"nodeType":"195","messageId":"196","endLine":93,"endColumn":21},{"ruleId":"193","severity":1,"message":"226","line":93,"column":23,"nodeType":"195","messageId":"196","endLine":93,"endColumn":35},{"ruleId":"193","severity":1,"message":"227","line":94,"column":12,"nodeType":"195","messageId":"196","endLine":94,"endColumn":21},{"ruleId":"193","severity":1,"message":"228","line":94,"column":23,"nodeType":"195","messageId":"196","endLine":94,"endColumn":35},{"ruleId":"199","severity":1,"message":"229","line":111,"column":10,"nodeType":"201","endLine":111,"endColumn":12,"suggestions":"230"},{"ruleId":"193","severity":1,"message":"231","line":137,"column":11,"nodeType":"195","messageId":"196","endLine":137,"endColumn":23},{"ruleId":"193","severity":1,"message":"211","line":18,"column":8,"nodeType":"195","messageId":"196","endLine":18,"endColumn":15},{"ruleId":"193","severity":1,"message":"212","line":19,"column":8,"nodeType":"195","messageId":"196","endLine":19,"endColumn":12},{"ruleId":"193","severity":1,"message":"213","line":20,"column":8,"nodeType":"195","messageId":"196","endLine":20,"endColumn":14},{"ruleId":"193","severity":1,"message":"214","line":21,"column":8,"nodeType":"195","messageId":"196","endLine":21,"endColumn":16},{"ruleId":"193","severity":1,"message":"215","line":22,"column":8,"nodeType":"195","messageId":"196","endLine":22,"endColumn":15},{"ruleId":"193","severity":1,"message":"216","line":23,"column":8,"nodeType":"195","messageId":"196","endLine":23,"endColumn":12},{"ruleId":"193","severity":1,"message":"197","line":24,"column":10,"nodeType":"195","messageId":"196","endLine":24,"endColumn":14},{"ruleId":"193","severity":1,"message":"218","line":27,"column":9,"nodeType":"195","messageId":"196","endLine":27,"endColumn":19},{"ruleId":"193","severity":1,"message":"232","line":47,"column":12,"nodeType":"195","messageId":"196","endLine":47,"endColumn":21},{"ruleId":"193","severity":1,"message":"233","line":49,"column":11,"nodeType":"195","messageId":"196","endLine":49,"endColumn":19},{"ruleId":"193","severity":1,"message":"225","line":54,"column":12,"nodeType":"195","messageId":"196","endLine":54,"endColumn":21},{"ruleId":"193","severity":1,"message":"226","line":54,"column":23,"nodeType":"195","messageId":"196","endLine":54,"endColumn":35},{"ruleId":"193","severity":1,"message":"227","line":55,"column":12,"nodeType":"195","messageId":"196","endLine":55,"endColumn":21},{"ruleId":"193","severity":1,"message":"228","line":55,"column":23,"nodeType":"195","messageId":"196","endLine":55,"endColumn":35},{"ruleId":"193","severity":1,"message":"223","line":56,"column":19,"nodeType":"195","messageId":"196","endLine":56,"endColumn":27},{"ruleId":"193","severity":1,"message":"224","line":57,"column":20,"nodeType":"195","messageId":"196","endLine":57,"endColumn":29},{"ruleId":"199","severity":1,"message":"234","line":84,"column":8,"nodeType":"201","endLine":84,"endColumn":10,"suggestions":"235"},{"ruleId":"193","severity":1,"message":"236","line":156,"column":11,"nodeType":"195","messageId":"196","endLine":156,"endColumn":26},{"ruleId":"193","severity":1,"message":"237","line":8,"column":5,"nodeType":"195","messageId":"196","endLine":8,"endColumn":13},{"ruleId":"193","severity":1,"message":"197","line":23,"column":10,"nodeType":"195","messageId":"196","endLine":23,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":173,"column":41,"nodeType":"208","endLine":177,"endColumn":42},{"ruleId":"206","severity":1,"message":"207","line":195,"column":41,"nodeType":"208","endLine":199,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":211,"column":41,"nodeType":"208","endLine":211,"endColumn":45},{"ruleId":"206","severity":1,"message":"207","line":216,"column":41,"nodeType":"208","endLine":220,"endColumn":42},{"ruleId":"206","severity":1,"message":"207","line":239,"column":41,"nodeType":"208","endLine":243,"endColumn":42},{"ruleId":"193","severity":1,"message":"240","line":2,"column":65,"nodeType":"195","messageId":"196","endLine":2,"endColumn":69},{"ruleId":"193","severity":1,"message":"237","line":2,"column":71,"nodeType":"195","messageId":"196","endLine":2,"endColumn":79},{"ruleId":"193","severity":1,"message":"241","line":2,"column":81,"nodeType":"195","messageId":"196","endLine":2,"endColumn":87},{"ruleId":"193","severity":1,"message":"242","line":2,"column":89,"nodeType":"195","messageId":"196","endLine":2,"endColumn":98},{"ruleId":"193","severity":1,"message":"243","line":2,"column":100,"nodeType":"195","messageId":"196","endLine":2,"endColumn":108},{"ruleId":"193","severity":1,"message":"244","line":2,"column":115,"nodeType":"195","messageId":"196","endLine":2,"endColumn":118},{"ruleId":"193","severity":1,"message":"241","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":20,"column":9,"nodeType":"208","endLine":20,"endColumn":70},{"ruleId":"206","severity":1,"message":"207","line":23,"column":8,"nodeType":"208","endLine":23,"endColumn":27},{"ruleId":"193","severity":1,"message":"241","line":3,"column":3,"nodeType":"195","messageId":"196","endLine":3,"endColumn":9},{"ruleId":"193","severity":1,"message":"245","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":14},{"ruleId":"193","severity":1,"message":"246","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":14},{"ruleId":"193","severity":1,"message":"247","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":16},{"ruleId":"193","severity":1,"message":"248","line":10,"column":18,"nodeType":"195","messageId":"196","endLine":10,"endColumn":23},{"ruleId":"193","severity":1,"message":"249","line":15,"column":11,"nodeType":"195","messageId":"196","endLine":15,"endColumn":20},{"ruleId":"193","severity":1,"message":"250","line":3,"column":49,"nodeType":"195","messageId":"196","endLine":3,"endColumn":54},{"ruleId":"193","severity":1,"message":"204","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":13},{"ruleId":"193","severity":1,"message":"251","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":17},{"ruleId":"193","severity":1,"message":"252","line":18,"column":10,"nodeType":"195","messageId":"196","endLine":18,"endColumn":20},{"ruleId":"193","severity":1,"message":"253","line":20,"column":9,"nodeType":"195","messageId":"196","endLine":20,"endColumn":16},{"ruleId":"193","severity":1,"message":"254","line":35,"column":10,"nodeType":"195","messageId":"196","endLine":35,"endColumn":14},{"ruleId":"209","severity":1,"message":"255","line":83,"column":11,"nodeType":"208","endLine":83,"endColumn":38},{"ruleId":"199","severity":1,"message":"200","line":34,"column":6,"nodeType":"201","endLine":34,"endColumn":8,"suggestions":"256"},{"ruleId":"199","severity":1,"message":"200","line":32,"column":6,"nodeType":"201","endLine":32,"endColumn":8,"suggestions":"257"},{"ruleId":"193","severity":1,"message":"258","line":2,"column":31,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"193","severity":1,"message":"241","line":2,"column":67,"nodeType":"195","messageId":"196","endLine":2,"endColumn":73},{"ruleId":"199","severity":1,"message":"200","line":28,"column":8,"nodeType":"201","endLine":28,"endColumn":10,"suggestions":"259"},{"ruleId":"193","severity":1,"message":"260","line":23,"column":9,"nodeType":"195","messageId":"196","endLine":23,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":49,"column":6,"nodeType":"201","endLine":49,"endColumn":8,"suggestions":"261"},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Smile' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["264"],"'NavbarToggler' is defined but never used.","'Login' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setServiceId' is assigned a value but never used.","'setCardId' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.",["265"],"'subscribtion' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', 'expenses', and 'token'. Either include them or remove the dependency array.",["266"],"'deleteSubscribe' is assigned a value but never used.","'CardBody' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Card' is defined but never used.","'Button' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'Col' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'Alert' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["267"],["268"],"'Row' is defined but never used.",["269"],"'history' is assigned a value but never used.",["270"],"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"271","fix":"277"},{"desc":"271","fix":"278"},{"desc":"271","fix":"279"},{"desc":"271","fix":"280"},"Update the dependencies array to be: [token]",{"range":"281","text":"282"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"283","text":"284"},"Update the dependencies array to be: [dataMonth, dataWeek, expenses, token]",{"range":"285","text":"286"},{"range":"287","text":"282"},{"range":"288","text":"282"},{"range":"289","text":"282"},{"range":"290","text":"282"},[893,895],"[token]",[3248,3250],"[dataMonth, dataWeek]",[2418,2420],"[dataMonth, dataWeek, expenses, token]",[711,713],[655,657],[684,686],[1093,1095]]