[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditDebt.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"15","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"16","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Loading.js":"17","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"18","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js":"19","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"20","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js":"21"},{"size":567,"mtime":1607762145127,"results":"22","hashOfConfig":"23"},{"size":2451,"mtime":1607762145101,"results":"24","hashOfConfig":"23"},{"size":12337,"mtime":1608624667019,"results":"25","hashOfConfig":"23"},{"size":2656,"mtime":1608727987572,"results":"26","hashOfConfig":"23"},{"size":312,"mtime":1607762145157,"results":"27","hashOfConfig":"23"},{"size":12632,"mtime":1608729054060,"results":"28","hashOfConfig":"23"},{"size":3883,"mtime":1608627575489,"results":"29","hashOfConfig":"23"},{"size":199,"mtime":1607762145026,"results":"30","hashOfConfig":"23"},{"size":7322,"mtime":1608794757437,"results":"31","hashOfConfig":"23"},{"size":3680,"mtime":1608624795429,"results":"32","hashOfConfig":"23"},{"size":13133,"mtime":1608627575698,"results":"33","hashOfConfig":"23"},{"size":4316,"mtime":1608627575765,"results":"34","hashOfConfig":"23"},{"size":5182,"mtime":1608627575864,"results":"35","hashOfConfig":"23"},{"size":2204,"mtime":1608624912385,"results":"36","hashOfConfig":"23"},{"size":15309,"mtime":1608632593405,"results":"37","hashOfConfig":"23"},{"size":3770,"mtime":1608728992889,"results":"38","hashOfConfig":"23"},{"size":350,"mtime":1608294444054,"results":"39","hashOfConfig":"23"},{"size":1293,"mtime":1607762145160,"results":"40","hashOfConfig":"23"},{"size":2444,"mtime":1608290649799,"results":"41","hashOfConfig":"23"},{"size":6524,"mtime":1608627576003,"results":"42","hashOfConfig":"23"},{"size":6481,"mtime":1608628358600,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1lm62wj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],["95","96"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Collapse,\r\n  Spinner,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport youtube from \"./img/youtube.jpg\";\r\nimport hulu from \"./img/hulu-logo.jpg\";\r\nimport disney from \"./img/disney.jpeg\";\r\nimport sportify from \"./img/spotify.jpg\";\r\nimport netflix from \"./img/netflix.jpeg\";\r\nimport logo from \"./img/Rectangle.png\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\nconst Dashboard = () => {\r\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\r\n  const [subscribes, setSubscribes] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const token = Cookies.get(\"token\");\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [serviceId, setServiceId] = useState([]);\r\n  const [card, setCard] = useState([]);\r\n  const [cardId, setCardId] = useState(null);\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n  const [chartData, setChartData] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const urlWeek = \" https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\r\n  \r\n  const history = useHistory();\r\n\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setLoading(true);\r\n    axios\r\n      .get(urlSubscribe)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubscribes(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    dataMonth();\r\n    dataWeek();\r\n  }, []);\r\n\r\n  const subscribeDetails = (id) => {\r\n    setLoading(true);\r\n    const url = ` http://52.148.70.171/service?id=${id}`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(\"subscribe id\", res.data);\r\n        setSubscribeId(res.data);\r\n        setModal(!modal);\r\n        setLoading(false);\r\n        subscribeCard();\r\n        setServiceId(id);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const subscribeCard = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(urlCard, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCard(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const subscribtion = (e) => {\r\n    e.preventDefault();\r\n    const url = ` http://52.148.70.171/subscription/${serviceId}/?cardId=${cardId}`;\r\n    // console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n    // console.log(token)\r\n    axios\r\n      .post(url, null, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        history.push(\"/history\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center mt-5\">\r\n          <Spinner type=\"grow\" style={{ width: '4rem', height: '4rem', color:'#8F48EA' }} />\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n          Please wait...\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132, 0.2)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n              pointBackgroundColor: \"rgb(255, 99, 132)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n          <Col xs=\"12\" className=\"bg-default\">\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <h4>Spending Value</h4>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <div style={{ float: \"right\", position: \"relative\" }}>\r\n                  <Button\r\n                    id=\"button\"\r\n                    onClick={collapse}\r\n                    style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                  <Button\r\n                    id=\"button\"\r\n                    onClick={collapseWeek}\r\n                    style={{ marginBottom: \"1rem\", marginRight: \"30px\" }}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs=\"12\" className=\"bg-default\">\r\n            <Collapse isOpen={isOpen}>\r\n              <Line data={chartData} options={options} />\r\n            </Collapse>\r\n            <Collapse isOpen={isOpenWeek}>\r\n              <Line data={chartWeek} options={options} />\r\n            </Collapse>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className=\"ml-0 mt-3 mb-0\">\r\n          <h3>Popular Apps</h3>\r\n        </Row>\r\n        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          {subscribes.map((subscribes) => (\r\n            <Col xs=\"3\" key={subscribes.id}>\r\n              <Card style={{ marginBottom: \"50px\" }}>\r\n                <CardImg\r\n                  top\r\n                  width=\"100%\"\r\n                  height=\"170px\"\r\n                  src={subscribes.picture}\r\n                  alt=\"subscribtion\"\r\n                  style={{border:\"0.5px solid grey\"}}\r\n                />\r\n                <CardBody className=\"bg-dangers\">\r\n                  <CardTitle\r\n                    tag=\"h6\"\r\n                    className=\"text-dark font-weight-bold text-center\"\r\n                  >\r\n                    <h5>{subscribes.name}</h5>\r\n                  </CardTitle>\r\n                  <Row>\r\n                    <Button\r\n                      onClick={() => subscribeDetails(subscribes.id)}\r\n                      className=\"btn btn-primary btn-block\"\r\n                      id=\"button\"\r\n                    >\r\n                      Subcribe\r\n                    </Button>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}></ModalHeader>\r\n            <ModalBody>\r\n              {subscribeId.map((subscribe) => (\r\n                <Col key={subscribe.id}>\r\n                  <CardTitle style={{textAlign:\"center\"}}><h5><strong>{subscribe.name}</strong></h5></CardTitle>\r\n                  <CardImg\r\n                    top\r\n                    width=\"15%\"\r\n                    src={subscribe.picture}\r\n                    style={{border:\"0.5px solid grey\"}}\r\n                    alt=\"subscribtion\"\r\n                  />\r\n                  <CardBody>\r\n                    <CardText style={{textAlign:\"justify\"}}>\r\n                      <p>{subscribe.description}</p>\r\n                    </CardText>\r\n                    <CardText>\r\n                      <p>Cost: <strong>IDR {subscribe.cost}</strong></p>\r\n                    </CardText>\r\n                    <Row>\r\n                      <Col md=\"8\">\r\n                        {/* {card.map((cards)=>(\r\n                                <Select\r\n\r\n                                value={cards.cardBank}/>\r\n                            ))} */}\r\n                        <Row>\r\n                          <FormGroup>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"cardId\"\r\n                              id=\"cardId\"\r\n                              onChange={(e) => {\r\n                                setCardId(e.target.value);\r\n                                console.log(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option>Select Card</option>\r\n                              {card.length !== 0\r\n                                ? card.map((cards) => (\r\n                                    <option value={cards.id}>\r\n                                      {cards.cardBank}\r\n                                    </option>\r\n                                  ))\r\n                                : \"\"}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          onClick={subscribtion}\r\n                          className=\"btn btn-primary\"\r\n                          id=\"button\"\r\n                        >\r\n                          Subscribe\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Col>\r\n              ))}\r\n            </ModalBody>\r\n          </Modal>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["116","117","118","119","120","121","122","123","124"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\nimport { Calendar, PieChart } from 'react-feather';\r\nimport CalendarEvent from \"../components/Calendar\";\r\n\r\nimport Bells from \"./Bells\";\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\r\n      <Navbar expand=\"md\" style={{backgroundColor:\"#fefefe\", }}>\r\n      <NavbarBrand className=\"lognav\" href=\"/\" >\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li className=\"liquid1\"></li>\r\n                <li>\r\n                <Button id=\"transparant\" >About</Button>\r\n                </li>\r\n                <li>\r\n                <Button id=\"transparant\"> Product</Button>\r\n                </li>\r\n                <li>\r\n                <Signup />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            \r\n            <div>\r\n              {/* <NavbarBrand className=\"lognav\" href=\"/\" >\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand> */}\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <PieChart style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Calendar\">\r\n                    <Calendar style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Bells />\r\n                </li>\r\n                <li>\r\n                  <ProfMenu/>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["125","126","127","128","129","130"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport subscribe from \"./img/subscribe.svg\";\r\nimport expense from \"./img/expense.svg\";\r\nimport budgetting from \"./img/budgetting.svg\";\r\nimport history from \"./img/history.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAd,\r\n  faCoins,\r\n  faDigitalTachograph,\r\n  faClipboard,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\r\n  const [subscribes, setSubscribes] = useState([]);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    axios.get(urlSubscribe).then((res) => {\r\n      setSubscribes(res.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const addIcon = <FontAwesomeIcon icon={faAd} />;\r\n  const addCoins = <FontAwesomeIcon icon={faCoins} />;\r\n  const addDigital = <FontAwesomeIcon icon={faDigitalTachograph} />;\r\n  const addClipboard = <FontAwesomeIcon icon={faClipboard} />;\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center mt-5\">\r\n          <Spinner type=\"grow\" color=\"warning\" />\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n          Loading...\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row className=\"banner\">\r\n          <Col xs=\"5\">\r\n            <div className=\"logo\">\r\n              <h1>\r\n                <b>Stress Free</b>\r\n              </h1>\r\n              <h1>\r\n                <b>Subscription Manager</b>\r\n              </h1>\r\n              <Button width=\"80px\" to=\"\" className=\"btn \" id=\"button\">\r\n                Try For Free\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"7\">\r\n            <div className=\"logo-gambar\"></div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container fluid className=\"about\">\r\n        <h1 className=\"section-title\" style={{ color: \"#003764\" }}>\r\n          <b>About US</b>\r\n        </h1>\r\n        <div className=\"section-title-divider\"></div>\r\n\r\n        <div className=\"aboutIntro\">\r\n          <h3>\r\n            <span className=\"text-green\">Manage</span> your subscriptions\r\n            and expenses data with ease.\r\n            <br />\r\n            <br/>\r\n            You can easily keep a pulse on your subscription and expense in one\r\n            platform from anywhere.\r\n          </h3>\r\n        </div>\r\n      </Container>\r\n      <Container fluid className=\"content\">\r\n        <section id=\"features\" className=\"features\">\r\n          <Container>\r\n            <Nav>\r\n              <Col sm=\"3\">\r\n                <Card className=\"tabs\">\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === \"1\" })}\r\n                      onClick={() => {\r\n                        toggle(\"1\");\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col sm=\"8\">\r\n                          <h4>Subscribe</h4>\r\n                        </Col>\r\n                        <Col sm=\"4\" className=\"icon\">\r\n                          {\" \"}\r\n                          {addIcon}{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Card>\r\n              </Col>\r\n              <Col sm=\"3\">\r\n                <Card className=\"tabs\">\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === \"2\" })}\r\n                      onClick={() => {\r\n                        toggle(\"2\");\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col sm=\"8\">\r\n                          <h4>Expense</h4>\r\n                        </Col>\r\n                        <Col sm=\"4\" className=\"icon\">\r\n                          {\" \"}\r\n                          {addCoins}{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Card>\r\n              </Col>\r\n              <Col sm=\"3\">\r\n                <Card className=\"tabs\">\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === \"3\" })}\r\n                      onClick={() => {\r\n                        toggle(\"3\");\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col sm=\"8\">\r\n                          <h4>Debts</h4>\r\n                        </Col>\r\n                        <Col sm=\"4\" className=\"icon\">\r\n                          {\" \"}\r\n                          {addDigital}{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Card>\r\n              </Col>\r\n              <Col sm=\"3\">\r\n                <Card className=\"tabs\">\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === \"4\" })}\r\n                      onClick={() => {\r\n                        toggle(\"4\");\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col sm=\"8\">\r\n                          <h4>History</h4>\r\n                        </Col>\r\n                        <Col sm=\"4\" className=\"icon\">\r\n                          {\" \"}\r\n                          {addClipboard}{\" \"}\r\n                        </Col>\r\n                      </Row>\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Card>\r\n              </Col>\r\n            </Nav>\r\n\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Row>\r\n                  <Col lg=\"12\">\r\n                    <Row>\r\n                      <Col lg=\"6\">\r\n                        <div className=\"intro\">\r\n                          <h3>\r\n                            <strong>\r\n                              Easily create a subscription website\r\n                            </strong>\r\n                          </h3>\r\n                          <h4 style={{ textAlign: \"justify\" }}>\r\n                            Simply put in the items you wish to purchase on\r\n                            subscription, and the website builder will generate\r\n                            a subscription website for you right away. Join a\r\n                            member and create your own management subscription\r\n                            service you want to make.\r\n                          </h4>\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        lg=\"6\"\r\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n                      >\r\n                        <img src={subscribe} width=\"100%\" height=\"400px\"></img>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Row>\r\n                  <Col lg=\"12\">\r\n                    <Row>\r\n                      <Col lg=\"6\">\r\n                        <div className=\"intro\">\r\n                          <h3>\r\n                            <strong>Control your own expense</strong>\r\n                          </h3>\r\n\r\n                          <h4 style={{ textAlign: \"justify\" }}>\r\n                            Our expense feature will help you monitoring,\r\n                            tracking and most importantly managing your\r\n                            expenses. Just remember to input your expense data\r\n                            whenever you make them.\r\n                          </h4>\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        lg=\"6\"\r\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n                      >\r\n                        <img src={expense} width=\"100%\" height=\"400px\"></img>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tabId=\"3\">\r\n                <Row>\r\n                  <Col lg=\"12\">\r\n                    <Row>\r\n                      <Col lg=\"6\">\r\n                        <div className=\"intro\">\r\n                          <h3>\r\n                            <strong>\r\n                              Trackdown your debts activities easily\r\n                            </strong>\r\n                          </h3>\r\n                          <h4 style={{ textAlign: \"justify\" }}>\r\n                            Don't want to lose track on your debts records? Just\r\n                            keep them in our easy-to-use debt's note feature.\r\n                            You can instantly edit or delete your record once\r\n                            you are finish with it.\r\n                          </h4>\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        lg=\"6\"\r\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n                      >\r\n                        <img src={budgetting} width=\"100%\" height=\"400px\"></img>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tabId=\"4\">\r\n                <Row>\r\n                  <Col lg=\"12\">\r\n                    <Row>\r\n                      <Col lg=\"6\">\r\n                        <div className=\"intro\">\r\n                          <h3>\r\n                            <strong>\r\n                              Real-time reporting on your expenses and\r\n                              subscriptions\r\n                            </strong>\r\n                          </h3>\r\n                          <h4 style={{ textAlign: \"justify\" }}>\r\n                            With full visibility of all business expenditure and\r\n                            powerful reporting features at your disposal, SubsIt\r\n                            empowers you to make smarter financial decisions.\r\n                          </h4>\r\n                        </div>\r\n                      </Col>\r\n                      <Col\r\n                        lg=\"6\"\r\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n                      >\r\n                        <img src={history} width=\"100%\" height=\"400px\"></img>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n            </TabContent>\r\n          </Container>\r\n        </section>\r\n      </Container>\r\n      <Container fluid className=\"popular\">\r\n        <Container>\r\n          <h1 className=\"section-title\" style={{ color: \"#003764\" }}>\r\n            <b>Popular Apps</b>\r\n          </h1>\r\n          <div className=\"section-title-divider \"></div>\r\n          <Row className=\"mt-3\">\r\n            {subscribes.slice(0, 4).map((subscribes, i) => (\r\n              <Col sm=\"3\" key={i}>\r\n                <Card>\r\n                  <CardImg\r\n                    top\r\n                    width=\"100%\"\r\n                    height=\"170px\"\r\n                    src={subscribes.picture}\r\n                    alt=\"subscribtion\"\r\n                  />\r\n                  <CardTitle\r\n                    tag=\"h6\"\r\n                    className=\"text-dark font-weight-bold text-center\"\r\n                  >\r\n                    <h4>{subscribes.name}</h4>\r\n                  </CardTitle>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n      {/* <Container fluid className=\"team\">\r\n                <Container>\r\n                    <h1 className=\"section\" >Team</h1>\r\n                    <div className=\"section-title-divider \"></div>\r\n                </Container>\r\n            </Container> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["131","132","133","134","135","136","137"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js",["138"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nconst TopUp = (props) => {\r\n  const { className } = props;\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const [results, setResults] = useState(\"\");\r\n  const [saldo, setSaldo] = useState(null);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    const data = {\r\n      saldo: saldo,\r\n    };\r\n\r\n    axios\r\n      .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\r\n        onClick={toggle}\r\n      >\r\n        <strong>Top-up</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Top-up your balance here.</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Container>\r\n              <FormGroup>\r\n                <Label for=\"cardNumber\">Select Card</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"cardNumber\"\r\n                  id=\"cardNumber\"\r\n                  onChange={(e) => setCardNumber(e.target.value)}\r\n                >\r\n                  <option>Select card</option>\r\n                  {results.length !== 0\r\n                    ? results.map((result) => (\r\n                        <option value={result.cardNumber}>\r\n                          {result.cardBank} - IDR {result.saldo}\r\n                        </option>\r\n                      ))\r\n                    : \"\"}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"saldo\">Top-up amount:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"saldo\"\r\n                  id=\"saldo\"\r\n                  onClick={(e) => setSaldo(e.target.value)}\r\n                >\r\n                  <option>Select amount</option>\r\n                  <option>50000</option>\r\n                  <option>100000</option>\r\n                  <option>250000</option>\r\n                  <option>500000</option>\r\n                  <option>1000000</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  size=\"sm\"\r\n                  type=\"submit\"\r\n                  block\r\n                  outline\r\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n                >\r\n                  <strong>Confirm</strong>\r\n                </Button>\r\n              </FormGroup>\r\n            </Container>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopUp;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["139"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n// import Loading from './Loading'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport visa from \"../assets/visa.png\";\r\nimport master from \"../assets/mastercard.png\";\r\nimport \"./Profile.css\";\r\nimport expense from \"../assets/expense.png\";\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`${urlCard}?cardNumber=${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n        // setLoading(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Master\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Visa\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom:\"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Container>\r\n            <p style={{ opacity: \"60%\" }}>\r\n              <i>\r\n                <strong>No card found. Please add card first.</strong>\r\n              </i>\r\n            </p>\r\n            <Col className=\"subs4\">\r\n              <img\r\n                src={expense}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n          // <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["140"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { X } from \"react-feather\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"./Profile.css\";\r\nimport {Element} from \"react-scroll\"\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n          <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"500px\",\r\n                overflow: \"scroll\",\r\n                \r\n              }}\r\n            >\r\n            <thead\r\n              className=\"text-center\"\r\n              style={{ backgroundColor: \"#BA8FF2\" }}\r\n            >\r\n              <tr>\r\n                <th style={{ width: \"30%\" }}>Date</th>\r\n                <th>Transaction</th>\r\n                <th>Currency</th>\r\n                <th>Costs</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            {results.length !== 0 ? (\r\n              results.map((result) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"text-center\"><Moment format=\"D MMM YYYY\" >{result.purchaseDate}</Moment></td>\r\n                    <td className=\"text-center\" style={{ width: \"50%\" }}>{result.title}</td>\r\n                    <td className=\"text-center\">IDR</td>\r\n                    <td className=\"text-center\">{result.total}</td>\r\n                    <td style={{ width: \"100%\" }} className=\"text-center\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          if (\r\n                            window.confirm(\r\n                              `Expense record of \"${result.title}\" is going to be deleted. Please click OK to confirm.`\r\n                            )\r\n                          )\r\n                            handleDelete(result.id);\r\n                        }}\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        <X size={15} />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                \r\n              ))\r\n            \r\n              )  : (\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan=\"6\">\r\n                    <Container>\r\n                      <p style={{ opacity: \"60%\" }}>\r\n                        <i>\r\n                          <strong>No expense found.</strong>\r\n                        </i>\r\n                      </p>\r\n                      <Col className=\"subs3\">\r\n                        <img\r\n                          src={expense}\r\n                          alt=\"\"\r\n                          style={{\r\n                            width: \"40%\",\r\n                            opacity: \"0%\",\r\n                            position: \"center\",\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Container>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n            </Element>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditDebt.js",["141"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["142"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  Collapse,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { Element } from \"react-scroll\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Line } from \"@reactchartjs/react-chart.js\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport empty from \"../assets/empty.png\";\r\nimport glass from \"../assets/glass.png\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"../components/Profile.css\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst History = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const token = Cookies.get(\"token\");\r\n  const fullName = Cookies.get(\"fullName\");\r\n  const [expense, setExpense] = useState([]);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const [totalHistory, setTotalHistory] = useState([]);\r\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\r\n  const urlWeek = \"https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\r\n\r\n  // console.log(token)\r\n\r\n  const urlHistory = \"https://binar8-jul-hendri.nandaworks.com/subscription\";\r\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\r\n  const urlTotalHistory = \"https://binar8-jul-hendri.nandaworks.com/history\";\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setIsLoading(true);\r\n    axios\r\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        setExpense(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    dataMonth();\r\n    dataWeek();\r\n\r\n    axios\r\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(\"totalhistory\" ,res.data);\r\n        setTotalHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        //  console.log(res);\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    const url = ` https://binar8-jul-hendri.nandaworks.com/subscription/${id}/`;\r\n    axios\r\n      .delete(url, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // const expenses = () =>{\r\n  //     setIsLoading(true);\r\n  //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n  //     .then((res)=>{\r\n  //         console.log(res.data)\r\n  //         setExpense(res.data);\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n\r\n  // const subscribeDetails = (id) => {\r\n  //     setIsLoading(true);\r\n  //     const url =`http://3.0.91.163/service?id=${id}`\r\n  //     axios.get(url).then((res)=>{\r\n  //         console.log(res.data.subscribeId)\r\n  //         setSubscribeId(res.data);\r\n  //         setModal(!modal)\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"8\">\r\n            <Container>\r\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                <Col xs=\"12\" className=\"bg-default\">\r\n                  <Row>\r\n                    <Col xs=\"6\">\r\n                      <h4>Spending Value</h4>\r\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                      <div style={{ float: \"right\", position: \"relative\" }}>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapse}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                        >\r\n                          Month\r\n                        </Button>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapseWeek}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\r\n                        >\r\n                          Week\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                  <Collapse isOpen={isOpen}>\r\n                    <Line data={chartData} options={options} />\r\n                  </Collapse>\r\n                  <Collapse isOpen={isOpenWeek}>\r\n                    <Line data={chartWeek} options={options} />\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <Container>\r\n              <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscriptions</h3>\r\n              </Row>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n              <Row>\r\n                {history.length !== 0 ? (\r\n                  history.map((history) => (\r\n                    <Col xs=\"4\" key={history.id}>\r\n                      <Card className=\"mb-4\">\r\n                        <CardImg\r\n                          top\r\n                          width=\"100%\"\r\n                          height=\"150px\"\r\n                          src={history.service.picture}\r\n                          alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold text-center\"\r\n                          >\r\n                            {history.service.name}\r\n                          </CardTitle>\r\n                          <Row>\r\n                            <Button\r\n                              onClick={() => {\r\n                                if (\r\n                                  window.confirm(\r\n                                    \"are you sure you wish to unsubscribe this item?\"\r\n                                  )\r\n                                )\r\n                                  handleRemove(history.serviceId);\r\n                              }}\r\n                              className=\"btn btn-primary btn-block\"\r\n                              id=\"button\"\r\n                            >\r\n                              Unsubscribe\r\n                            </Button>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))\r\n                ) : (\r\n                  <Container>\r\n                    <p style={{ opacity: \"60%\" }}>\r\n                      <i>\r\n                        <strong>You don't have any subscription.</strong>\r\n                      </i>\r\n                    </p>\r\n                    <Col className=\"subs\">\r\n                      <img\r\n                        src={glass}\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"50%\",\r\n                          opacity: \"0%\",\r\n                          position: \"center\",\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Container>\r\n                )}\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n\r\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"7px\" }}>\r\n            <h4>History</h4>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            <Card\r\n              style={{\r\n                marginTop: \"20px\",\r\n                color: \"white\",\r\n                backgroundColor: \"#8F48EA\",\r\n                marginBottom: \"25px\",\r\n              }}\r\n            >\r\n              <Row style={{ marginBottom: \"20px\" }}>\r\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\r\n                  <CardTitle className=\"text-white\">\r\n                    <strong>Total :</strong>\r\n                  </CardTitle>\r\n                </Col>\r\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\r\n                  <h6 style={{ float: \"right\" }}>\r\n                    <strong>IDR {totalHistory.total}</strong>{\" \"}\r\n                  </h6>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"1000px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <h4>Subscriptions</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {history.length !== 0 ? (\r\n                history.map((subscribtion, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{\r\n                      padding: \"5px\",\r\n                      marginTop: \"20px\",\r\n                      backgroundColor: \"#f6f9fc\",\r\n                      marginBottom: \"20px\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"8\">\r\n                        <CardTitle className=\"text-dark font-weight\">\r\n                          <h6 style={{ paddingTop: \"15px\" }}>\r\n                            {subscribtion.repeat} : {subscribtion.service.name}{\" \"}\r\n                          </h6>\r\n                          <Moment format=\"D MMM YYYY\" >{subscribtion.startDate}</Moment>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"4\">\r\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\r\n                          IDR {subscribtion.service.cost}{\" \"}\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container style={{ marginBottom: \"20px\" }}>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No subscription found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs2\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n              <h4>Expenses</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {expense.length !== 0 ? (\r\n                expense.map((expenses, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{\r\n                      marginTop: \"20px\",\r\n                      padding: \"5px\",\r\n                      backgroundColor: \"#f6f9fc\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"6\" style={{ paddingTop: \"15px\" }}>\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight\">\r\n                          <h6>{expenses.title} </h6>\r\n                          <Moment format=\"D MMM YYYY\" >{expenses.purchaseDate}</Moment>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"6\">\r\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\r\n                          IDR {expenses.total}{\" \"}\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No expense found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs3\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n            </Element>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["162","163","164"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Card, Row, Col } from \"reactstrap\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst CalendarEvent = () => {\r\n  const [upComing, setUpComing] = useState([]);\r\n  const [month, setMonth] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setLoading(true);\r\n    axios\r\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.map((e) => e.dueDate));\r\n        setUpComing(\r\n          ...upComing,\r\n          res.data.map((e) => ({\r\n            title: e.service.name,\r\n            date: e.dueDate.substr(0, 10),\r\n          }))\r\n        );\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  let checkComingMonth = upComing.filter((e) => e.date.substr(5, 2) == month);\r\n  // console.log(\"cek coming month\" , checkComingMonth)\r\n  checkComingMonth.sort((a, b) => {\r\n    if (a.date < b.date) return -1;\r\n    return a.date > b.date ? 1 : 0;\r\n  });\r\n  return (\r\n    <>\r\n      <Container className=\"mb-5 mt-5\">\r\n      {loading && <Loading/>}\r\n      </Container>\r\n      {!loading && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm=\"8\">\r\n              <Card style={{ padding: \"20px\" }}>\r\n                <FullCalendar\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                  datesSet={(arg) => {\r\n                    console.log(arg);\r\n                    console.log(arg.view.currentStart.toISOString()); //starting visible date\r\n                    console.log(arg.view.currentEnd.toISOString()); //ending visible date\r\n                    setMonth(arg.view.currentEnd.toISOString().substr(5, 2));\r\n                  }}\r\n                  initialView=\"dayGridMonth\"\r\n                  // height =\"100%\"\r\n                  events={upComing}\r\n                  // events={[\r\n                  // { title: \"event 1\", date: \"2020-12-06\" },\r\n                  // { title: \"event 2\", date: \"2020-12-12\" },\r\n                  //  ]}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col sm=\"4\">\r\n              <Card style={{ padding: \"20px\", minHeight: \"605px\", marginBottom:\"50px\" }}>\r\n                <h4\r\n                  style={{\r\n                    color: \"#222222\",\r\n                  }}\r\n                  className=\"text-center\"\r\n                >\r\n                  <strong>Events</strong>\r\n                </h4>\r\n                <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                {checkComingMonth === undefined ||\r\n                checkComingMonth.length == 0 ? (\r\n                  <h5 className=\"text-center my-5\">\r\n                    <strong>\r\n                      <i>No event found in this month.</i>\r\n                    </strong>\r\n                  </h5>\r\n                ) : (\r\n                  checkComingMonth.map((x) => (\r\n                    <p className=\"text-left\" style={{marginBottom:\"20px\"}}>\r\n                      <b>{x.title}</b> service will be due on the <b>{x.date.substr(8, 2)}</b>th of this month.\r\n                    </p>\r\n                  ))\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CalendarEvent;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Loading.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["165","166"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js",["167","168","169","170","171","172"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js",["173","174","175","176","177","178","179","180","181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":20,"column":3,"nodeType":"188","messageId":"189","endLine":20,"endColumn":8},{"ruleId":"186","severity":1,"message":"190","line":22,"column":8,"nodeType":"188","messageId":"189","endLine":22,"endColumn":15},{"ruleId":"186","severity":1,"message":"191","line":23,"column":8,"nodeType":"188","messageId":"189","endLine":23,"endColumn":12},{"ruleId":"186","severity":1,"message":"192","line":24,"column":8,"nodeType":"188","messageId":"189","endLine":24,"endColumn":14},{"ruleId":"186","severity":1,"message":"193","line":25,"column":8,"nodeType":"188","messageId":"189","endLine":25,"endColumn":16},{"ruleId":"186","severity":1,"message":"194","line":26,"column":8,"nodeType":"188","messageId":"189","endLine":26,"endColumn":15},{"ruleId":"186","severity":1,"message":"195","line":27,"column":8,"nodeType":"188","messageId":"189","endLine":27,"endColumn":12},{"ruleId":"186","severity":1,"message":"196","line":28,"column":10,"nodeType":"188","messageId":"189","endLine":28,"endColumn":14},{"ruleId":"186","severity":1,"message":"197","line":28,"column":16,"nodeType":"188","messageId":"189","endLine":28,"endColumn":25},{"ruleId":"186","severity":1,"message":"198","line":31,"column":10,"nodeType":"188","messageId":"189","endLine":31,"endColumn":20},{"ruleId":"186","severity":1,"message":"199","line":81,"column":10,"nodeType":"188","messageId":"189","endLine":81,"endColumn":19},{"ruleId":"186","severity":1,"message":"200","line":81,"column":21,"nodeType":"188","messageId":"189","endLine":81,"endColumn":33},{"ruleId":"186","severity":1,"message":"201","line":87,"column":17,"nodeType":"188","messageId":"189","endLine":87,"endColumn":25},{"ruleId":"186","severity":1,"message":"202","line":88,"column":18,"nodeType":"188","messageId":"189","endLine":88,"endColumn":27},{"ruleId":"186","severity":1,"message":"203","line":91,"column":10,"nodeType":"188","messageId":"189","endLine":91,"endColumn":19},{"ruleId":"186","severity":1,"message":"204","line":91,"column":21,"nodeType":"188","messageId":"189","endLine":91,"endColumn":33},{"ruleId":"186","severity":1,"message":"205","line":92,"column":10,"nodeType":"188","messageId":"189","endLine":92,"endColumn":19},{"ruleId":"186","severity":1,"message":"206","line":92,"column":21,"nodeType":"188","messageId":"189","endLine":92,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":123,"column":6,"nodeType":"209","endLine":123,"endColumn":8,"suggestions":"210"},{"ruleId":"186","severity":1,"message":"211","line":6,"column":3,"nodeType":"188","messageId":"189","endLine":6,"endColumn":16},{"ruleId":"186","severity":1,"message":"212","line":9,"column":3,"nodeType":"188","messageId":"189","endLine":9,"endColumn":6},{"ruleId":"186","severity":1,"message":"213","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":13},{"ruleId":"186","severity":1,"message":"214","line":16,"column":8,"nodeType":"188","messageId":"189","endLine":16,"endColumn":14},{"ruleId":"186","severity":1,"message":"215","line":18,"column":8,"nodeType":"188","messageId":"189","endLine":18,"endColumn":11},{"ruleId":"186","severity":1,"message":"216","line":19,"column":8,"nodeType":"188","messageId":"189","endLine":19,"endColumn":13},{"ruleId":"186","severity":1,"message":"217","line":23,"column":8,"nodeType":"188","messageId":"189","endLine":23,"endColumn":21},{"ruleId":"186","severity":1,"message":"218","line":30,"column":9,"nodeType":"188","messageId":"189","endLine":30,"endColumn":15},{"ruleId":"219","severity":1,"message":"220","line":37,"column":15,"nodeType":"221","endLine":37,"endColumn":34},{"ruleId":"186","severity":1,"message":"222","line":8,"column":3,"nodeType":"188","messageId":"189","endLine":8,"endColumn":11},{"ruleId":"186","severity":1,"message":"196","line":22,"column":10,"nodeType":"188","messageId":"189","endLine":22,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":227,"column":25,"nodeType":"221","endLine":227,"endColumn":74},{"ruleId":"219","severity":1,"message":"220","line":255,"column":25,"nodeType":"221","endLine":255,"endColumn":72},{"ruleId":"219","severity":1,"message":"220","line":284,"column":25,"nodeType":"221","endLine":284,"endColumn":75},{"ruleId":"219","severity":1,"message":"220","line":313,"column":25,"nodeType":"221","endLine":313,"endColumn":72},{"ruleId":"186","severity":1,"message":"213","line":15,"column":8,"nodeType":"188","messageId":"189","endLine":15,"endColumn":13},{"ruleId":"186","severity":1,"message":"223","line":16,"column":8,"nodeType":"188","messageId":"189","endLine":16,"endColumn":17},{"ruleId":"186","severity":1,"message":"224","line":26,"column":10,"nodeType":"188","messageId":"189","endLine":26,"endColumn":20},{"ruleId":"186","severity":1,"message":"225","line":28,"column":9,"nodeType":"188","messageId":"189","endLine":28,"endColumn":16},{"ruleId":"186","severity":1,"message":"226","line":43,"column":10,"nodeType":"188","messageId":"189","endLine":43,"endColumn":14},{"ruleId":"186","severity":1,"message":"227","line":44,"column":10,"nodeType":"188","messageId":"189","endLine":44,"endColumn":17},{"ruleId":"186","severity":1,"message":"228","line":74,"column":13,"nodeType":"188","messageId":"189","endLine":74,"endColumn":21},{"ruleId":"207","severity":1,"message":"229","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":8,"suggestions":"230"},{"ruleId":"207","severity":1,"message":"229","line":54,"column":6,"nodeType":"209","endLine":54,"endColumn":8,"suggestions":"231"},{"ruleId":"207","severity":1,"message":"229","line":31,"column":6,"nodeType":"209","endLine":31,"endColumn":8,"suggestions":"232"},{"ruleId":"207","severity":1,"message":"229","line":43,"column":6,"nodeType":"209","endLine":43,"endColumn":8,"suggestions":"233"},{"ruleId":"207","severity":1,"message":"229","line":41,"column":6,"nodeType":"209","endLine":41,"endColumn":8,"suggestions":"234"},{"ruleId":"186","severity":1,"message":"235","line":10,"column":3,"nodeType":"188","messageId":"189","endLine":10,"endColumn":11},{"ruleId":"186","severity":1,"message":"236","line":12,"column":3,"nodeType":"188","messageId":"189","endLine":12,"endColumn":8},{"ruleId":"186","severity":1,"message":"237","line":13,"column":3,"nodeType":"188","messageId":"189","endLine":13,"endColumn":14},{"ruleId":"186","severity":1,"message":"238","line":15,"column":3,"nodeType":"188","messageId":"189","endLine":15,"endColumn":12},{"ruleId":"186","severity":1,"message":"196","line":18,"column":10,"nodeType":"188","messageId":"189","endLine":18,"endColumn":14},{"ruleId":"186","severity":1,"message":"198","line":21,"column":10,"nodeType":"188","messageId":"189","endLine":21,"endColumn":20},{"ruleId":"186","severity":1,"message":"239","line":25,"column":8,"nodeType":"188","messageId":"189","endLine":25,"endColumn":15},{"ruleId":"186","severity":1,"message":"240","line":46,"column":10,"nodeType":"188","messageId":"189","endLine":46,"endColumn":19},{"ruleId":"186","severity":1,"message":"241","line":48,"column":9,"nodeType":"188","messageId":"189","endLine":48,"endColumn":17},{"ruleId":"186","severity":1,"message":"242","line":50,"column":10,"nodeType":"188","messageId":"189","endLine":50,"endColumn":21},{"ruleId":"186","severity":1,"message":"243","line":50,"column":23,"nodeType":"188","messageId":"189","endLine":50,"endColumn":37},{"ruleId":"186","severity":1,"message":"203","line":53,"column":10,"nodeType":"188","messageId":"189","endLine":53,"endColumn":19},{"ruleId":"186","severity":1,"message":"204","line":53,"column":21,"nodeType":"188","messageId":"189","endLine":53,"endColumn":33},{"ruleId":"186","severity":1,"message":"205","line":54,"column":10,"nodeType":"188","messageId":"189","endLine":54,"endColumn":19},{"ruleId":"186","severity":1,"message":"206","line":54,"column":21,"nodeType":"188","messageId":"189","endLine":54,"endColumn":33},{"ruleId":"186","severity":1,"message":"201","line":55,"column":17,"nodeType":"188","messageId":"189","endLine":55,"endColumn":25},{"ruleId":"186","severity":1,"message":"202","line":56,"column":18,"nodeType":"188","messageId":"189","endLine":56,"endColumn":27},{"ruleId":"186","severity":1,"message":"218","line":67,"column":9,"nodeType":"188","messageId":"189","endLine":67,"endColumn":15},{"ruleId":"207","severity":1,"message":"244","line":109,"column":6,"nodeType":"209","endLine":109,"endColumn":8,"suggestions":"245"},{"ruleId":"207","severity":1,"message":"246","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":8,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":41,"column":69,"nodeType":"250","messageId":"251","endLine":41,"endColumn":71},{"ruleId":"248","severity":1,"message":"249","line":87,"column":41,"nodeType":"250","messageId":"251","endLine":87,"endColumn":43},{"ruleId":"186","severity":1,"message":"252","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":20,"column":9,"nodeType":"221","endLine":20,"endColumn":70},{"ruleId":"186","severity":1,"message":"252","line":6,"column":3,"nodeType":"188","messageId":"189","endLine":6,"endColumn":9},{"ruleId":"186","severity":1,"message":"212","line":11,"column":3,"nodeType":"188","messageId":"189","endLine":11,"endColumn":6},{"ruleId":"186","severity":1,"message":"253","line":18,"column":10,"nodeType":"188","messageId":"189","endLine":18,"endColumn":14},{"ruleId":"186","severity":1,"message":"254","line":18,"column":16,"nodeType":"188","messageId":"189","endLine":18,"endColumn":23},{"ruleId":"186","severity":1,"message":"255","line":19,"column":10,"nodeType":"188","messageId":"189","endLine":19,"endColumn":17},{"ruleId":"207","severity":1,"message":"229","line":36,"column":6,"nodeType":"209","endLine":36,"endColumn":8,"suggestions":"256"},{"ruleId":"186","severity":1,"message":"257","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":20},{"ruleId":"186","severity":1,"message":"258","line":20,"column":16,"nodeType":"188","messageId":"189","endLine":20,"endColumn":23},{"ruleId":"186","severity":1,"message":"259","line":21,"column":23,"nodeType":"188","messageId":"189","endLine":21,"endColumn":37},{"ruleId":"186","severity":1,"message":"260","line":22,"column":18,"nodeType":"188","messageId":"189","endLine":22,"endColumn":27},{"ruleId":"186","severity":1,"message":"261","line":23,"column":16,"nodeType":"188","messageId":"189","endLine":23,"endColumn":23},{"ruleId":"186","severity":1,"message":"262","line":24,"column":19,"nodeType":"188","messageId":"189","endLine":24,"endColumn":29},{"ruleId":"207","severity":1,"message":"229","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":8,"suggestions":"263"},{"ruleId":"186","severity":1,"message":"264","line":52,"column":9,"nodeType":"188","messageId":"189","endLine":52,"endColumn":21},{"ruleId":"186","severity":1,"message":"218","line":77,"column":9,"nodeType":"188","messageId":"189","endLine":77,"endColumn":15},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.","ArrayExpression",["267"],"'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Login' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardBody' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'hasError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["268"],["269"],["270"],["271"],["272"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["274"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'loading' is assigned a value but never used.",["275"],"'useHistory' is defined but never used.","'setName' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setType' is assigned a value but never used.","'setDueDate' is assigned a value but never used.",["276"],"'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"279","fix":"281"},{"desc":"279","fix":"282"},{"desc":"279","fix":"283"},{"desc":"279","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"279","fix":"289"},{"desc":"279","fix":"290"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"291","text":"292"},"Update the dependencies array to be: [token]",{"range":"293","text":"294"},{"range":"295","text":"294"},{"range":"296","text":"294"},{"range":"297","text":"294"},{"range":"298","text":"294"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"299","text":"300"},"Update the dependencies array to be: [token, upComing]",{"range":"301","text":"302"},{"range":"303","text":"294"},{"range":"304","text":"294"},[3546,3548],"[dataMonth, dataWeek]",[868,870],"[token]",[1271,1273],[856,858],[1047,1049],[942,944],[3213,3215],"[dataMonth, dataWeek, token]",[1217,1219],"[token, upComing]",[906,908],[1105,1107]]