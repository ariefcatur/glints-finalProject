[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowCard.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Loading.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Debt.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"15","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"16","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js":"17","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js":"18","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"19","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"20","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"21","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"22"},{"size":1019,"mtime":1608026248734,"results":"23","hashOfConfig":"24"},{"size":12861,"mtime":1607763554342,"results":"25","hashOfConfig":"24"},{"size":13167,"mtime":1607956299115,"results":"26","hashOfConfig":"24"},{"size":2337,"mtime":1608027524962,"results":"27","hashOfConfig":"24"},{"size":3717,"mtime":1607876362733,"results":"28","hashOfConfig":"24"},{"size":884,"mtime":1607762145161,"results":"29","hashOfConfig":"24"},{"size":1293,"mtime":1607762145160,"results":"30","hashOfConfig":"24"},{"size":2063,"mtime":1607762145156,"results":"31","hashOfConfig":"24"},{"size":6467,"mtime":1607782667843,"results":"32","hashOfConfig":"24"},{"size":2278,"mtime":1607782667863,"results":"33","hashOfConfig":"24"},{"size":4029,"mtime":1607875920351,"results":"34","hashOfConfig":"24"},{"size":356,"mtime":1607875920343,"results":"35","hashOfConfig":"24"},{"size":2120,"mtime":1607875920347,"results":"36","hashOfConfig":"24"},{"size":6913,"mtime":1607945383414,"results":"37","hashOfConfig":"24"},{"size":567,"mtime":1607762145127,"results":"38","hashOfConfig":"24"},{"size":13232,"mtime":1607875920356,"results":"39","hashOfConfig":"24"},{"size":2662,"mtime":1607782667858,"results":"40","hashOfConfig":"24"},{"size":5456,"mtime":1607875920339,"results":"41","hashOfConfig":"24"},{"size":3873,"mtime":1608039442833,"results":"42","hashOfConfig":"24"},{"size":2451,"mtime":1607762145101,"results":"43","hashOfConfig":"24"},{"size":6898,"mtime":1607781679734,"results":"44","hashOfConfig":"24"},{"size":312,"mtime":1607762145157,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1lm62wj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["107","108"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["109","110","111","112","113","114","115"],"import React, {useState, useEffect} from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    Button,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Spinner,\r\n    \r\n} from 'reactstrap';\r\nimport subscribe from './img/subscribe.svg'\r\nimport expense from './img/expense.svg'\r\nimport budgetting from './img/budgetting.svg'\r\nimport history from './img/history.svg'\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faAd, faCoins, faDigitalTachograph, faClipboard} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nconst Home = () =>{\r\n    const urlSubscribe = 'http://3.0.91.163/service';\r\n    const [subscribes, setSubscribes] = useState([]);\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n    \r\n        axios.get(urlSubscribe).then((res) => {\r\n          setSubscribes(res.data);\r\n          setLoading(false);\r\n        });\r\n      }, []);\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n      }\r\n    \r\n    const addIcon = <FontAwesomeIcon icon ={faAd}/>;\r\n    const addCoins = <FontAwesomeIcon icon ={faCoins}/>;\r\n    const addDigital = <FontAwesomeIcon icon ={faDigitalTachograph}/>;\r\n    const addClipboard = <FontAwesomeIcon icon={faClipboard}/>;\r\n\r\n    if (loading) {\r\n        return (\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Spinner type=\"grow\" color=\"warning\" />\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n              Sedang memuat data...\r\n            </Row>\r\n          </div>\r\n        );\r\n    }\r\n    return(\r\n        <>\r\n            <Container fluid>\r\n                <Row className=\"banner\"> \r\n                    <Col xs=\"5\">\r\n                        <div className=\"logo\">\r\n                        <h1><b>Stress Free</b></h1>\r\n                        <h1><b>Subscription Manager</b></h1>\r\n                        <Button \r\n                            width=\"80px\"\r\n                            to=\"\"\r\n                            className=\"btn \" \r\n                            id=\"button\"\r\n                        >\r\n                            Try For Free\r\n                        </Button>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs=\"7\"> \r\n                        \r\n                        <div className=\"logo-gambar\"></div>   \r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container fluid className=\"about\">\r\n            <h1 className=\"section\" >About US</h1>\r\n            <div className=\"section-title-divider \"></div>\r\n            \r\n                <div className=\"aboutIntro\">\r\n                    <h3><span className=\"text-green\">Manage</span> your subscription business from anywhere\r\n                    <br />\r\n                    You can easily keep a pulse on your subscription business in one platform, from anywhere.</h3>\r\n                \r\n                </div>\r\n            \r\n            </Container>\r\n            <Container fluid className=\"content\">\r\n            <section id=\"features\" className=\"features\">\r\n                <Container >\r\n                    <Nav >\r\n                        <Col sm=\"3\" >\r\n                            <Card className=\"tabs\">\r\n                                <NavItem>\r\n                                    <NavLink className={classnames({ active: activeTab === '1'})}\r\n                                        onClick={() =>{toggle('1');}}\r\n                                    >\r\n                                        <Row><Col sm=\"8\"><h4>Subscribe</h4></Col>\r\n                                        <Col sm=\"4\" className=\"icon\"> {addIcon} </Col></Row>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <Card className=\"tabs\">\r\n                                <NavItem >\r\n                                    <NavLink className={classnames({active: activeTab === '2'})}\r\n                                    onClick={()=>{toggle('2');}}\r\n                                >\r\n                                   <Row><Col sm=\"8\" ><h4>Expense</h4></Col> \r\n                                   <Col sm=\"4\" className=\"icon\"> {addCoins} </Col></Row> \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <Card className=\"tabs\">\r\n                                <NavItem>\r\n                                    <NavLink className={classnames({active: activeTab === '3'})}\r\n                                    onClick={()=>{toggle('3');}}\r\n                                >\r\n                                    <Row><Col sm=\"8\"><h4>Budgetting</h4></Col> \r\n                                    <Col sm=\"4\" className=\"icon\"> {addDigital} </Col></Row>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm =\"3\">\r\n                            <Card className=\"tabs\">\r\n                                <NavItem>\r\n                                    <NavLink className={classnames({active: activeTab === '4'})}\r\n                                    onClick={()=>{toggle('4');}}\r\n                                >\r\n                                     <Row><Col sm=\"8\"><h4>History</h4></Col>\r\n                                      <Col sm=\"4\"className=\"icon\" > {addClipboard} </Col></Row>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        \r\n                    </Nav>\r\n                   \r\n                    <TabContent activeTab={activeTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                    <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                         <h3>Easily create a subscription website</h3>\r\n                                         <h4>Simply put in the items you wish to purchase on subscription, and the website builder will generate a subscription website for you \r\n                                            right away. Join a member and create your own management subscription service you want to make.\r\n                                        </h4>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={subscribe}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                            <h3>Control your own daily expense</h3>\r\n                                            \r\n                                         <h4>Expense</h4>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={expense}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"3\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                        <h3></h3>\r\n                                         <h4>Budgetting</h4>\r\n                                         </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={budgetting}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"4\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                         <h3>Real-time reporting for finance and subscribtion</h3>\r\n                                         <h4>With full visibility of all business expenditure and powerful reporting features at your disposal,\r\n                                            SubsIt empowers you to make smarter financial decisions.\r\n                                            Process expenses as they are approved and post to your accounting package with ease.</h4>\r\n                                         </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={history}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </Container>\r\n            </section>\r\n            </Container>\r\n            <Container fluid className=\"popular\">\r\n                <Container>\r\n                    <h1 className=\"section\" >Popular Apps</h1>\r\n                    <div className=\"section-title-divider \"></div>\r\n                <Row>\r\n                    {subscribes.slice(0,4).map((subscribes, i) =>(\r\n                        <Col sm=\"3\" key={i}>\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"170px\"\r\n                                src={subscribes.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                            <h4>{subscribes.name}</h4>\r\n                            </CardTitle>\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n                       \r\n                </Row>\r\n                </Container>\r\n            \r\n            </Container>\r\n            {/* <Container fluid className=\"team\">\r\n                <Container>\r\n                    <h1 className=\"section\" >Team</h1>\r\n                    <div className=\"section-title-divider \"></div>\r\n                </Container>\r\n            </Container> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Collapse,\r\n    Spinner,\r\n    FormGroup,\r\n    Input,\r\n    Label\r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link, useParams} from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n\r\n\r\nconst Dashboard = () =>{ \r\n    const urlSubscribe = 'http://3.0.91.163/service'\r\n    const [subscribes, setSubscribes] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const token = Cookies.get('token');\r\n    const [startDate, setStartDate] = useState(0)\r\n    const [serviceId, setServiceId] = useState([])\r\n    const [card,setCard] = useState([])\r\n    const [cardId, setCardId] = useState(null)\r\n    const urlCard = 'http://3.0.91.163/card'\r\n    const [chartData, setChartData] = useState({});\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n\r\n    useEffect(() => {\r\n\r\n        document.body.style.backgroundColor = \"#E5E5E5\"\r\n\r\n        setLoading(true);\r\n        axios.get(urlSubscribe).then((res) => {\r\n          setSubscribes(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        \r\n        dataMonth();\r\n        dataWeek();\r\n      }, []);\r\n    \r\n    const subscribeDetails = (id) => {\r\n        setLoading(true);\r\n        const url =`http://3.0.91.163/service?id=${id}`\r\n        axios.get(url).then((res)=>{\r\n            console.log(\"subscribe id\", res.data)\r\n            setSubscribeId(res.data);\r\n            setModal(!modal)\r\n            setLoading(false);\r\n            subscribeCard()\r\n            setServiceId(id)\r\n        })\r\n        .catch((err)=> console.log(err));           \r\n    }\r\n\r\n    \r\n    const subscribeCard = () =>{\r\n        setLoading(true);\r\n        axios.get(urlCard, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setCard(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n    }\r\n    \r\n    const subscribtion = (e)=>{\r\n        e.preventDefault();\r\n        const url =`http://3.0.91.163/subscription/${serviceId}/?cardId=${cardId}`\r\n        // console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n        // console.log(token)\r\n        axios\r\n        .post(url, null, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n        })\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Spinner type=\"grow\" color=\"warning\" />\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n              Sedang memuat data...\r\n            </Row>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n            \r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        // console.log(dates, totals)\r\n        \r\n    }\r\n    \r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            \r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n    }\r\n    \r\n   \r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Row>\r\n                        <Col xs=\"6\">\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button  id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button  id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'30px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-0\">\r\n                <h3>Popular Apps</h3>\r\n            </Row>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {subscribes.map((subscribes, ) =>(\r\n                        <Col xs=\"3\" key={subscribes.id}>\r\n                        <Card style={{marginBottom:'50px'}}>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"170px\"\r\n                                src={subscribes.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                <h5>{subscribes.name}</h5>\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=> subscribeDetails(subscribes.id)}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>  \r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <ul>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Description: <br/>{subscribe.description}\r\n                                        </h5>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Cost: {subscribe.cost}\r\n                                        </h5>\r\n                                    </li>\r\n                                </ul> \r\n                            </CardText>\r\n                            <Row>\r\n                            <Col md=\"8\">\r\n                            {/* {card.map((cards)=>(\r\n                                <Select\r\n\r\n                                value={cards.cardBank}/>\r\n                            ))} */}\r\n                            <Row>\r\n                            <FormGroup>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"cardId\"\r\n                                id=\"cardId\"\r\n                                onChange={(e) =>{\r\n                                    setCardId(e.target.value)\r\n                                    console.log(e.target.value)\r\n                                } }\r\n                            >\r\n                                <option >Select Card</option>\r\n                            {card.length !== 0\r\n                                ? card.map((cards) => <option value={cards.id}>{cards.cardBank}</option>)\r\n                                : (\"\")}\r\n                            </Input>\r\n                            </FormGroup>\r\n                            </Row>\r\n                            </Col>\r\n                            <Col>\r\n                            <Button\r\n                                onClick={subscribtion}\r\n                                className=\"btn btn-primary\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subscribe\r\n                            </Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                                </Col>\r\n                            ))}   \r\n                    </ModalBody>\r\n                </Modal>\r\n                </Row> \r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["135","136","137","138","139","140","141","142","143","144","145","146"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\nimport Lendar from \"./img/calendar.svg\";\r\nimport Calendar from \"../components/Calendar\"\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\r\n      <Navbar expand=\"md\" style={{backgroundColor:\"#fefefe\", }}>\r\n        <NavbarBrand className=\"lognav\" href=\"/\" >\r\n          <Link to=\"/dashboard\">\r\n            <img src={subsit} ></img>\r\n          </Link>\r\n        </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li className=\"liquid1\"></li>\r\n                <li>\r\n                  <a href=\"#\">About</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">Product</a>\r\n                </li>\r\n                <li>\r\n                  <Signup />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            <div>\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <img src={chart}></img>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <img src={app}></img>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Calendar\">\r\n                    <img src={Lendar}></img>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <ProfMenu />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",["147","148"],"import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Container, Row, Col, Card } from 'reactstrap';\r\nimport { CreditCard, Activity, DollarSign } from 'react-feather'\r\nimport classnames from 'classnames';\r\nimport './Profile.css'\r\nimport AddCard from './AddCard'\r\nimport AddExpenses from './AddExpenses'\r\nimport ShowExpenses from './ShowExpense'\r\nimport ShowCard from './ShowCard'\r\nimport CheckStatus from './Status'\r\nimport Debt from './Debt'\r\nimport {ShoppingCart} from 'react-feather'\r\n\r\n\r\nconst TabProfile = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <Container fluid style={{backgroundColor:\"white\", paddingTop:\"20px\", minHeight:\"700px\"}}>\r\n      <Nav>\r\n        <Col md=\"3\">\r\n          <Card className=\"tabs\">\r\n            <NavItem>\r\n              <NavLink\r\n                className={classnames({ active: activeTab === \"1\" })}\r\n                onClick={() => {\r\n                  toggle(\"1\");\r\n                }}\r\n              >\r\n                <Row>\r\n                  <Container>\r\n                    <h4>\r\n                      <CreditCard size={20} /> Card\r\n                    </h4>\r\n                  </Container>\r\n                </Row>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Card>\r\n        </Col>\r\n        <Col sm=\"3\" className=\"flex\">\r\n          <Card className=\"tabs\">\r\n            <NavItem>\r\n              <NavLink\r\n                className={classnames({ active: activeTab === \"2\" })}\r\n                onClick={() => {\r\n                  toggle(\"2\");\r\n                }}\r\n              >\r\n                <Row>\r\n                  <Container>\r\n                    <h4>\r\n                      <ShoppingCart size={19} /> Expense\r\n                    </h4>\r\n                  </Container>\r\n                </Row>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Card>\r\n        </Col>\r\n        <Col sm=\"3\">\r\n          <Card className=\"tabs\">\r\n            <NavItem>\r\n              <NavLink\r\n                className={classnames({ active: activeTab === \"3\" })}\r\n                onClick={() => {\r\n                  toggle(\"3\");\r\n                }}\r\n              >\r\n                <Row>\r\n                  <Container>\r\n                    <h4>\r\n                      <DollarSign size={19} /> Debt\r\n                    </h4>\r\n                  </Container>\r\n                </Row>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Card>\r\n        </Col>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Row className=\"rowright\">\r\n            <Container>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              <AddCard />\r\n            </Container>\r\n          </Row>\r\n          <Row>\r\n            <CheckStatus />\r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <Row className=\"rowright\">\r\n            <Container>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              <AddExpenses />\r\n            </Container>\r\n          </Row>\r\n          <Row>\r\n            <Container className=\"rowright\"></Container>\r\n            <ShowExpenses />\r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n        <Row className=\"rowright\">\r\n            <Container>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Debt/>\r\n        </Row>\r\n        {/* <Row>\r\n        {/* <ShowSubscriptions/>     */}\r\n        {/* </Row>  */}\r\n        </TabPane>\r\n      </TabContent>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TabProfile;",["149","150"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["151"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["152","153"],"import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Calendar from \"react-calendar\";\r\nimport Lendar from \"./img/calendar.svg\";\r\nimport \"./Modalender.css\"\r\n\r\nconst Modalender = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\r\n  return (\r\n    <div>\r\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\r\n           \r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\r\n        <ModalHeader>CALENDAR</ModalHeader>\r\n        <ModalBody>\r\n          <b>Your Schedule</b><br />\r\n            <Calendar />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modalender;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js",["154","155","156","157","158","159"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Signup from \"./Signup\";\r\n\r\n\r\nconst Login = (props) => {\r\n  const { className } = props;\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-dialog modal-login\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"model-header\">\r\n            <h4 className=\"modal-title\">LOGIN</h4>\r\n            <button className=\"close\"></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form method=\"post\">\r\n              <div className=\"form-group\">\r\n                <i className=\"fa fa-user\"></i>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Username\"\r\n                  required=\"required\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <i className=\"fa fa-lock\"></i>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  required=\"required\"\r\n                />\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block btn-lg\"\r\n                  value=\"Login\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\r\n          </div>\r\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\r\n            <ModalBody>\r\n              <Signup />\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowCard.js",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {Trash2} from 'react-feather';\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlCard = \"http://3.0.91.163/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`${urlCard}?cardNumber=${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {results.length !== 0 ? (\r\n        results.map((result) => (\r\n          <Col md={4} key={result.id}>\r\n            <Card >\r\n              <CardBody className=\"d-flex flex-column\">\r\n                <CardTitle>\r\n                  <strong>{result.cardBank}</strong>\r\n                  <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                </CardTitle>\r\n                <CardText>{result.cardNumber}</CardText>\r\n                {/* <CardText>Rp {result.saldo}</CardText> */}\r\n                <CardText>{result.cardHolder}</CardText>\r\n                <Button\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    handleDelete(result.cardNumber);\r\n                  }}\r\n                  block\r\n                  color=\"danger\"\r\n                  outline\r\n                >\r\n                  <Trash2 size={20} />\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        ))\r\n      ) : (\r\n        <Container>\r\n          <p style={{opacity:\"60%\"}}><i><strong>You have not added any card. Please add card.</strong></i></p>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n",["161","162"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["163","164"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport Loading from './Loading'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const urlCard = \"http://3.0.91.163/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n        setLoading(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            if (result.saldo >= 1000000) {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    className=\"mb-3\"\r\n                    style={{ backgroundColor: \"#bcf7f4\", color: \"#222222\" }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :<strong> Sufficient</strong>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo > 500000 && result.saldo < 1000000) {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    className=\"mb-3\"\r\n                    style={{ backgroundColor: \"#c8f292\", color: \"#222222\" }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :<strong> Fair</strong>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo <= 300000) {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    className=\"mb-3\"\r\n                    style={{ backgroundColor: \"#f07c83\", color: \"#222222\" }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :<strong> Critical</strong>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n",["165","166"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Loading.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["167"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport avatar from \"../assets/avatar2.png\";\r\nimport \"./Profile.css\";\r\nimport { User, Mail } from \"react-feather\";\r\nimport Edit from \"./EditProfile\";\r\nimport TabProfile from \"./TabProfile\";\r\n\r\nconst Profile = () => {\r\n  const [users, setUsers] = useState(\"\");\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  useEffect(() => {\r\n\r\n    document.body.style.backgroundColor = \"#E5E5E5\"\r\n\r\n    axios\r\n      .get(\r\n        `http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/user/`, {\r\n            headers: {Authorization : `Bearer ${token}`}\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUsers(res.data);\r\n      })\r\n      .catch((error) => {\r\n      console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col xl=\"4\" sm=\"12\">\r\n          <Card>\r\n            {users.length !== 0 ? (\r\n              users.map((user)=> (\r\n                <CardBody key={user.id} className=\"cardBody\">\r\n                <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\r\n                <Row className=\"rowright\">\r\n                  <Container>\r\n                    <Edit />\r\n                  </Container>\r\n                </Row>\r\n                <CardTitle>\r\n                  <Container>\r\n                    <p>\r\n                      <User size={22} /> {user.fullName}\r\n                    </p>\r\n                  </Container>\r\n                  <Container>\r\n                    <p>\r\n                      <Mail size={22} /> {user.email}\r\n                    </p>\r\n                  </Container>\r\n                </CardTitle>\r\n              </CardBody>\r\n              ))\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xl=\"8\" sm=\"12\">\r\n          <TabProfile />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Debt.js",["168","169","170","171","172"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { X, Edit3 } from \"react-feather\";\r\nimport './Profile.css'\r\n\r\nconst Debt = () =>{\r\n    const [debt, setDebt] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [type, setType] = useState(null);\r\n    const [dueDate, setDueDate] = useState(\"\");\r\n\r\n    const url =\"http://3.0.91.163/debts/notes\"\r\n    const token = Cookies.get(\"token\")\r\n    const urlDebt =\"http://3.0.91.163/debts/add\"\r\n\r\n  \r\n    useEffect(()=>{\r\n        axios\r\n        .get(url, {headers: {Authorization: `Bearer ${token}`}\r\n    })\r\n    .then((res)=>{\r\n        console.log(\"get debt\", (res.data))\r\n        setDebt(res.data);\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n    }, []);\r\n    \r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n    \r\n    const handleSubmit = (e) =>{\r\n      e.preventDefault();\r\n\r\n      const data={\r\n        name: name,\r\n        description:description,\r\n        amount: amount,\r\n        type : type,\r\n        dueDate : dueDate,\r\n      };\r\n\r\n      axios\r\n      .post(urlDebt, data, {headers: { Authorization: `Bearer ${token}`}})\r\n      .then((res)=>{\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error)\r\n      })\r\n    }\r\n    const handleDelete =(id)=>{\r\n      axios\r\n      .delete(`http://3.0.91.163/debts/delete?id=${id}`, {\r\n        headers: { Authorization:`Bearer ${token}`}\r\n      })\r\n      .then((res)=>{\r\n        console.log(res);\r\n        return window.location.reload();\r\n      })\r\n    }\r\n    return (\r\n    <Container>\r\n        <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{color: \"white\", backgroundColor: \"#8F48EA\"}}\r\n        onClick={toggle}>\r\n        {/* <Plus size={15}/>  */}\r\n        <strong>Add Debt</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Add new Dept here</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n              <Row form>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Name</Label>\r\n                        <Input\r\n                        type=\"text\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Description</Label>\r\n                        <Input\r\n                        type=\"textarea\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Amount</Label>\r\n                        <Input\r\n                        type=\"number\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Type</Label>\r\n                        <Input\r\n                        type=\"select\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        >\r\n                          <option>Select Type</option>\r\n                          <option>Account Payable</option>\r\n                          <option>Account Receivable</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Due Date</Label>\r\n                        <Input\r\n                        type=\"date\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setDueDate(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n              </Row>\r\n            <FormGroup>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n              >\r\n                <strong>Add New Card</strong>\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n        <Row className=\"tables\"> \r\n        <Col xs=\"12\">\r\n        <Table hover style={{backgroundColor:\"whitesmoke\"}}>\r\n            <thead className=\"text-center\" style={{backgroundColor:\"#BA8FF2\"}}> \r\n                <tr>\r\n                    \r\n                    <th>Due Date</th>\r\n                    <th>Name</th>\r\n                    <th>Dept Description</th>\r\n                    <th>type</th>\r\n                    <th>Cost</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              {debt.map((debts)=>(\r\n                <tr>\r\n                <td>{debts.dueDate}</td>\r\n                <td>{debts.name}</td>\r\n                <td>{debts.description}</td>\r\n                <td>{debts.type}</td>\r\n                <td>{debts.amount}</td>\r\n                <td className=\"text-center\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  style={{color: \"white\", backgroundColor: \"#8F48EA\", marginRight:\"5px\"}}\r\n                  onClick={toggle}>\r\n                  <Edit3 size={15}/>\r\n                </Button>\r\n                <Button\r\n                      size=\"sm\"\r\n                      onClick={() => {if(window.confirm('are you sure you wish to unsubscribe this itme?'))\r\n                        handleDelete(debts.id);\r\n                      }}\r\n                      color=\"danger\"\r\n                      outline\r\n                    >\r\n                      <X size={15} />\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n              ))}\r\n                \r\n            </tbody>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n    </Container>\r\n\r\n    )\r\n    }   \r\nexport default Debt;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],["173","174"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    Collapse,\r\n    ModalBody\r\n    \r\n} from 'reactstrap';\r\nimport {\r\n    Element,\r\n} from 'react-scroll'\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie'\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n}\r\n\r\nconst History = () =>{ \r\n    const [history, setHistory]=useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const token = Cookies.get('token');\r\n    const fullName = Cookies.get('fullName')\r\n    const [expense, setExpense]=useState([]);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const [totalHistory, setTotalHistory] = useState({})\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    // console.log(token)\r\n\r\n    const urlHistory ='http://3.0.91.163/subscription'\r\n    const urlExpense ='http://3.0.91.163/expense'\r\n    const urlTotalHistory = 'http://3.0.91.163/history'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n    \r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        axios\r\n        .get(urlHistory, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            // console.log(res.data);\r\n            setHistory(res.data);\r\n            setIsLoading(false);    \r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n        axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            // console.log(res.data)\r\n            setExpense(res.data);\r\n            setIsLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        dataMonth();\r\n        dataWeek();\r\n\r\n        axios\r\n        .get(urlTotalHistory, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            setTotalHistory(res.data);\r\n            setIsLoading(false); \r\n        })\r\n        .catch((err)=> console.log(err)); \r\n    }, [])\r\n    \r\n    const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n            //  console.log(res);\r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        // console.log(dates, totals)\r\n        \r\n    }\r\n\r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res);\r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n    \r\n    const handleRemove = (id) => {\r\n        const url = `http://3.0.91.163/subscription/${id}/`;\r\n        axios\r\n        .delete(url, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            return window.location.reload();   \r\n        })\r\n        .catch((err)=>console.log(err))\r\n    } \r\n\r\n    // const expenses = () =>{\r\n    //     setIsLoading(true);\r\n    //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n    //     .then((res)=>{\r\n    //         console.log(res.data)\r\n    //         setExpense(res.data);\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch((err)=> console.log(err));\r\n    // }\r\n\r\n    // const subscribeDetails = (id) => {\r\n    //     setIsLoading(true);\r\n    //     const url =`http://3.0.91.163/service?id=${id}`\r\n    //     axios.get(url).then((res)=>{\r\n    //         console.log(res.data.subscribeId)\r\n    //         setSubscribeId(res.data);\r\n    //         setModal(!modal)\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch((err)=> console.log(err));           \r\n    // }\r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs=\"8\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\"className=\"bg-default\">\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <h4>Spending Value</h4>\r\n                            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'10px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscriptions</h3>\r\n            </Row>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {history.map((history)=>(\r\n                        <Col xs=\"4\" key={history.id}>\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"150px\"\r\n                                src={history.service.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                {history.service.name}\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=>{if(window.confirm('are you sure you wish to unsubscribe this item?')) handleRemove(history.serviceId)}}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id =\"button\"\r\n                            >\r\n                                Unsubscribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                {/* <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <h5>\r\n                                    Description: <br/>{subscribe.description}\r\n                                </h5>\r\n                                <h5>\r\n                                    Cost: {subscribe.cost}\r\n                                </h5>   \r\n                            </CardText>\r\n                            <Row>\r\n                            <Button\r\n                                to=\"\"\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Unsubscribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                                </Col>\r\n                            ))}\r\n                            \r\n                    </ModalBody>\r\n                </Modal> */}\r\n            </Container>\r\n            </Col>\r\n            \r\n            <Col xs=\"4\" style={{backgroundColor: 'white', padding:'7px'}}> \r\n                <h4>History</h4>\r\n                <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                    <Card style={{marginTop: '20px', color:'white', backgroundColor: '#8F48EA', marginBottom:'20px'}}>\r\n                        <Row>\r\n                            <Col xs=\"6\" style={{paddingTop:'20px'}}>\r\n                            <CardTitle className=\"text-white\"  ><strong>Total :</strong> \r\n                            </CardTitle>\r\n                            </Col>\r\n                            <Col xs=\"6\" style={{paddingTop:'20px'}}>\r\n                            <h6 style={{float:\"right\", }}><strong>IDR {totalHistory.total}</strong> </h6>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                <Element ClassName=\"element\" id=\"scroll-container\" style={{\r\n                    position: 'relative',\r\n                    height: '700px',\r\n                    overflow: 'scroll',\r\n                    marginBottom: '100px'\r\n                }}>\r\n                <h4>Subscribe</h4>\r\n                {history.map((subscribtion, i)=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                    <Row>\r\n                    <Col xs=\"6\">\r\n                    <CardTitle className=\"text-dark font-weight\"><h6>{subscribtion.service.name}  <br/> {subscribtion.repeat}</h6> \r\n                    </CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                    <h6 style={{float:\"right\"}}>IDR  {subscribtion.service.cost} </h6>\r\n                    </Col>       \r\n                    </Row>\r\n                </Card>\r\n                ))}\r\n                <h4>Expense</h4>\r\n                {expense.map((expenses, i )=>(\r\n                <Card key={i} style={{marginTop: '20px', padding: '5px', backgroundColor: '#f6f9fc'}}>\r\n                <Row>\r\n                    <Col xs=\"6\" style={{paddingTop:'10px'}}>\r\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold\"><h6>{expenses.title} <br/> {expenses.purchaseDate}</h6></CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                    <h6 style={{float:\"right\", paddingTop:'20px'}}>IDR  {expenses.total} </h6>\r\n                    </Col>  \r\n                </Row>  \r\n                </Card> \r\n                ))}\r\n                </Element>\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default History;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js",["193"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["194","195","196"],"import React, {useState, useEffect} from \"react\";\r\nimport {Card, Row, Col} from \"reactstrap\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Calendar=()=>{\r\n    const [upComing, setUpComing] = useState([]);\r\n    const [month, setMonth] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const token = Cookies.get(\"token\");\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        axios\r\n        .get('http://3.0.91.163/subscription', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then((res)=>{\r\n            console.log(res.data.map((e)=> e.dueDate))\r\n            setUpComing(\r\n                ...upComing,\r\n                res.data.map((e)=>({\r\n                    title : e.service.name,\r\n                    date: e.dueDate.substr(0, 10),\r\n                }))\r\n            )\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    let checkComingMonth = upComing.filter((e)=> e.date.substr(5,2)== month);\r\n    checkComingMonth.sort((a,b)=>{\r\n        if (a.date < b.date) return -1;\r\n        return a.date > b.date ? 1 : 0;\r\n    })\r\n    return(\r\n        <>\r\n        {loading && <p>Loading...</p>}\r\n        {!loading && (\r\n           \r\n        <div>\r\n           \r\n            <Row>\r\n                <Col sm=\"8\">\r\n                    <Card>\r\n                    <FullCalendar \r\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                        datesSet={(arg)=>{\r\n                            console.log(arg);\r\n                            console.log(arg.view.currentStart.toISOString()); //starting visible date\r\n                            console.log(arg.view.currentEnd.toISOString()); //ending visible date        \r\n                            setMonth(arg.view.currentEnd.toISOString().substr(5, 2))\r\n                        }}\r\n                        initialView=\"dayGridMonth\"\r\n                        // height =\"100%\"\r\n                        events={upComing}\r\n                        // events={[\r\n                        // { title: \"event 1\", date: \"2020-12-06\" },\r\n                        // { title: \"event 2\", date: \"2020-12-12\" },\r\n                        //  ]}\r\n                    />\r\n                    </Card> \r\n                </Col> \r\n                <Col sm=\"4\">\r\n                     <h3\r\n                        style={{\r\n                        color: \"black\",\r\n                        }}\r\n                        className=\"text-center\"\r\n                    >\r\n                        Up Coming Expense\r\n                    </h3>\r\n                    {checkComingMonth === undefined ||\r\n                    checkComingMonth.length == 0 ? (\r\n                        <h2 className=\"text-center my-5\">\r\n                        There Is No Up Coming Expense This Month\r\n                        </h2>\r\n                    ) : (\r\n                        checkComingMonth.map((x) => (\r\n                        <>\r\n                            <div className=\"upcomingCard row\">\r\n                            <div className=\"upcoming card\">\r\n                                <h2 className=\"text-center\">{x.date.substr(8, 2)}</h2>\r\n                            </div>\r\n                            <div className=\"upcomingDetail card\">\r\n                                <h2 className=\"\">{x.title}</h2>\r\n                            </div>\r\n                            </div>\r\n                        </>\r\n                        ))\r\n                    )}\r\n                </Col>  \r\n\r\n            </Row>\r\n        </div>\r\n      )}\r\n      </>\r\n    )\r\n}\r\nexport default Calendar;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["197","198","199","200","201","202","203"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":8,"column":5,"nodeType":"210","messageId":"211","endLine":8,"endColumn":13},{"ruleId":"208","severity":1,"message":"212","line":23,"column":10,"nodeType":"210","messageId":"211","endLine":23,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":173,"column":41,"nodeType":"215","endLine":177,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":195,"column":41,"nodeType":"215","endLine":199,"endColumn":42},{"ruleId":"216","severity":1,"message":"217","line":211,"column":41,"nodeType":"215","endLine":211,"endColumn":45},{"ruleId":"213","severity":1,"message":"214","line":216,"column":41,"nodeType":"215","endLine":220,"endColumn":42},{"ruleId":"213","severity":1,"message":"214","line":239,"column":41,"nodeType":"215","endLine":243,"endColumn":42},{"ruleId":"208","severity":1,"message":"218","line":19,"column":5,"nodeType":"210","messageId":"211","endLine":19,"endColumn":10},{"ruleId":"208","severity":1,"message":"219","line":21,"column":8,"nodeType":"210","messageId":"211","endLine":21,"endColumn":15},{"ruleId":"208","severity":1,"message":"220","line":22,"column":8,"nodeType":"210","messageId":"211","endLine":22,"endColumn":12},{"ruleId":"208","severity":1,"message":"221","line":23,"column":8,"nodeType":"210","messageId":"211","endLine":23,"endColumn":14},{"ruleId":"208","severity":1,"message":"222","line":24,"column":8,"nodeType":"210","messageId":"211","endLine":24,"endColumn":16},{"ruleId":"208","severity":1,"message":"223","line":25,"column":8,"nodeType":"210","messageId":"211","endLine":25,"endColumn":15},{"ruleId":"208","severity":1,"message":"224","line":26,"column":8,"nodeType":"210","messageId":"211","endLine":26,"endColumn":12},{"ruleId":"208","severity":1,"message":"212","line":27,"column":10,"nodeType":"210","messageId":"211","endLine":27,"endColumn":14},{"ruleId":"208","severity":1,"message":"225","line":27,"column":16,"nodeType":"210","messageId":"211","endLine":27,"endColumn":25},{"ruleId":"208","severity":1,"message":"226","line":30,"column":9,"nodeType":"210","messageId":"211","endLine":30,"endColumn":19},{"ruleId":"208","severity":1,"message":"227","line":85,"column":12,"nodeType":"210","messageId":"211","endLine":85,"endColumn":21},{"ruleId":"208","severity":1,"message":"228","line":85,"column":23,"nodeType":"210","messageId":"211","endLine":85,"endColumn":35},{"ruleId":"208","severity":1,"message":"229","line":91,"column":19,"nodeType":"210","messageId":"211","endLine":91,"endColumn":27},{"ruleId":"208","severity":1,"message":"230","line":92,"column":20,"nodeType":"210","messageId":"211","endLine":92,"endColumn":29},{"ruleId":"208","severity":1,"message":"231","line":95,"column":12,"nodeType":"210","messageId":"211","endLine":95,"endColumn":21},{"ruleId":"208","severity":1,"message":"232","line":95,"column":23,"nodeType":"210","messageId":"211","endLine":95,"endColumn":35},{"ruleId":"208","severity":1,"message":"233","line":96,"column":12,"nodeType":"210","messageId":"211","endLine":96,"endColumn":21},{"ruleId":"208","severity":1,"message":"234","line":96,"column":23,"nodeType":"210","messageId":"211","endLine":96,"endColumn":35},{"ruleId":"235","severity":1,"message":"236","line":116,"column":10,"nodeType":"237","endLine":116,"endColumn":12,"suggestions":"238"},{"ruleId":"208","severity":1,"message":"239","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":16},{"ruleId":"208","severity":1,"message":"240","line":9,"column":3,"nodeType":"210","messageId":"211","endLine":9,"endColumn":6},{"ruleId":"208","severity":1,"message":"241","line":12,"column":8,"nodeType":"210","messageId":"211","endLine":12,"endColumn":13},{"ruleId":"208","severity":1,"message":"242","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":14},{"ruleId":"208","severity":1,"message":"243","line":22,"column":8,"nodeType":"210","messageId":"211","endLine":22,"endColumn":16},{"ruleId":"208","severity":1,"message":"244","line":27,"column":9,"nodeType":"210","messageId":"211","endLine":27,"endColumn":15},{"ruleId":"213","severity":1,"message":"214","line":34,"column":13,"nodeType":"215","endLine":34,"endColumn":32},{"ruleId":"245","severity":1,"message":"246","line":45,"column":19,"nodeType":"215","endLine":45,"endColumn":31},{"ruleId":"245","severity":1,"message":"246","line":48,"column":19,"nodeType":"215","endLine":48,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":61,"column":21,"nodeType":"215","endLine":61,"endColumn":38},{"ruleId":"213","severity":1,"message":"214","line":65,"column":19,"nodeType":"215","endLine":65,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":69,"column":21,"nodeType":"215","endLine":69,"endColumn":39},{"ruleId":"208","severity":1,"message":"247","line":3,"column":22,"nodeType":"210","messageId":"211","endLine":3,"endColumn":30},{"ruleId":"208","severity":1,"message":"248","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":16},{"ruleId":"204","replacedBy":"249"},{"ruleId":"206","replacedBy":"250"},{"ruleId":"213","severity":1,"message":"214","line":23,"column":8,"nodeType":"215","endLine":23,"endColumn":27},{"ruleId":"208","severity":1,"message":"251","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":20,"column":9,"nodeType":"215","endLine":20,"endColumn":70},{"ruleId":"208","severity":1,"message":"251","line":3,"column":3,"nodeType":"210","messageId":"211","endLine":3,"endColumn":9},{"ruleId":"208","severity":1,"message":"252","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":14},{"ruleId":"208","severity":1,"message":"253","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":14},{"ruleId":"208","severity":1,"message":"254","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":16},{"ruleId":"208","severity":1,"message":"255","line":10,"column":18,"nodeType":"210","messageId":"211","endLine":10,"endColumn":23},{"ruleId":"208","severity":1,"message":"256","line":15,"column":11,"nodeType":"210","messageId":"211","endLine":15,"endColumn":20},{"ruleId":"235","severity":1,"message":"257","line":36,"column":6,"nodeType":"237","endLine":36,"endColumn":8,"suggestions":"258"},{"ruleId":"204","replacedBy":"259"},{"ruleId":"206","replacedBy":"260"},{"ruleId":"208","severity":1,"message":"261","line":17,"column":10,"nodeType":"210","messageId":"211","endLine":17,"endColumn":17},{"ruleId":"235","severity":1,"message":"257","line":38,"column":6,"nodeType":"237","endLine":38,"endColumn":8,"suggestions":"262"},{"ruleId":"204","replacedBy":"263"},{"ruleId":"206","replacedBy":"264"},{"ruleId":"235","severity":1,"message":"257","line":41,"column":6,"nodeType":"237","endLine":41,"endColumn":8,"suggestions":"265"},{"ruleId":"208","severity":1,"message":"266","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":7},{"ruleId":"208","severity":1,"message":"209","line":9,"column":3,"nodeType":"210","messageId":"211","endLine":9,"endColumn":11},{"ruleId":"208","severity":1,"message":"267","line":10,"column":3,"nodeType":"210","messageId":"211","endLine":10,"endColumn":11},{"ruleId":"208","severity":1,"message":"268","line":11,"column":3,"nodeType":"210","messageId":"211","endLine":11,"endColumn":12},{"ruleId":"235","severity":1,"message":"257","line":49,"column":8,"nodeType":"237","endLine":49,"endColumn":10,"suggestions":"269"},{"ruleId":"204","replacedBy":"270"},{"ruleId":"206","replacedBy":"271"},{"ruleId":"208","severity":1,"message":"267","line":10,"column":5,"nodeType":"210","messageId":"211","endLine":10,"endColumn":13},{"ruleId":"208","severity":1,"message":"272","line":12,"column":5,"nodeType":"210","messageId":"211","endLine":12,"endColumn":10},{"ruleId":"208","severity":1,"message":"252","line":13,"column":5,"nodeType":"210","messageId":"211","endLine":13,"endColumn":16},{"ruleId":"208","severity":1,"message":"273","line":15,"column":5,"nodeType":"210","messageId":"211","endLine":15,"endColumn":14},{"ruleId":"208","severity":1,"message":"212","line":21,"column":10,"nodeType":"210","messageId":"211","endLine":21,"endColumn":14},{"ruleId":"208","severity":1,"message":"226","line":24,"column":9,"nodeType":"210","messageId":"211","endLine":24,"endColumn":19},{"ruleId":"208","severity":1,"message":"274","line":44,"column":12,"nodeType":"210","messageId":"211","endLine":44,"endColumn":21},{"ruleId":"208","severity":1,"message":"275","line":46,"column":11,"nodeType":"210","messageId":"211","endLine":46,"endColumn":19},{"ruleId":"208","severity":1,"message":"276","line":48,"column":12,"nodeType":"210","messageId":"211","endLine":48,"endColumn":23},{"ruleId":"208","severity":1,"message":"277","line":48,"column":25,"nodeType":"210","messageId":"211","endLine":48,"endColumn":39},{"ruleId":"208","severity":1,"message":"231","line":51,"column":12,"nodeType":"210","messageId":"211","endLine":51,"endColumn":21},{"ruleId":"208","severity":1,"message":"232","line":51,"column":23,"nodeType":"210","messageId":"211","endLine":51,"endColumn":35},{"ruleId":"208","severity":1,"message":"233","line":52,"column":12,"nodeType":"210","messageId":"211","endLine":52,"endColumn":21},{"ruleId":"208","severity":1,"message":"234","line":52,"column":23,"nodeType":"210","messageId":"211","endLine":52,"endColumn":35},{"ruleId":"208","severity":1,"message":"229","line":53,"column":19,"nodeType":"210","messageId":"211","endLine":53,"endColumn":27},{"ruleId":"208","severity":1,"message":"230","line":54,"column":20,"nodeType":"210","messageId":"211","endLine":54,"endColumn":29},{"ruleId":"208","severity":1,"message":"244","line":65,"column":11,"nodeType":"210","messageId":"211","endLine":65,"endColumn":17},{"ruleId":"235","severity":1,"message":"278","line":98,"column":8,"nodeType":"237","endLine":98,"endColumn":10,"suggestions":"279"},{"ruleId":"235","severity":1,"message":"257","line":63,"column":6,"nodeType":"237","endLine":63,"endColumn":8,"suggestions":"280"},{"ruleId":"235","severity":1,"message":"281","line":36,"column":8,"nodeType":"237","endLine":36,"endColumn":10,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":38,"column":68,"nodeType":"285","messageId":"286","endLine":38,"endColumn":70},{"ruleId":"283","severity":1,"message":"284","line":81,"column":45,"nodeType":"285","messageId":"286","endLine":81,"endColumn":47},{"ruleId":"208","severity":1,"message":"241","line":14,"column":8,"nodeType":"210","messageId":"211","endLine":14,"endColumn":13},{"ruleId":"208","severity":1,"message":"287","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":17},{"ruleId":"208","severity":1,"message":"288","line":25,"column":10,"nodeType":"210","messageId":"211","endLine":25,"endColumn":20},{"ruleId":"208","severity":1,"message":"289","line":27,"column":9,"nodeType":"210","messageId":"211","endLine":27,"endColumn":16},{"ruleId":"208","severity":1,"message":"290","line":42,"column":10,"nodeType":"210","messageId":"211","endLine":42,"endColumn":14},{"ruleId":"208","severity":1,"message":"291","line":43,"column":10,"nodeType":"210","messageId":"211","endLine":43,"endColumn":17},{"ruleId":"245","severity":1,"message":"292","line":102,"column":11,"nodeType":"215","endLine":102,"endColumn":37},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.","ArrayExpression",["295"],"'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Login' is defined but never used.","'Modals' is defined but never used.","'Calendar' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Activity' is defined but never used.","'ShowCard' is defined but never used.",["293"],["294"],"'Button' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["296"],["293"],["294"],"'loading' is assigned a value but never used.",["297"],["293"],["294"],["298"],"'Card' is defined but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.",["299"],["293"],["294"],"'Modal' is defined but never used.","'ModalBody' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["300"],["301"],"React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["302"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"305","fix":"307"},{"desc":"305","fix":"308"},{"desc":"305","fix":"309"},{"desc":"310","fix":"311"},{"desc":"305","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"315","text":"316"},"Update the dependencies array to be: [token]",{"range":"317","text":"318"},{"range":"319","text":"318"},{"range":"320","text":"318"},{"range":"321","text":"318"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"322","text":"323"},{"range":"324","text":"318"},"Update the dependencies array to be: [token, upComing]",{"range":"325","text":"326"},[3405,3407],"[dataMonth, dataWeek]",[754,756],"[token]",[818,820],[956,958],[1124,1126],[2957,2959],"[dataMonth, dataWeek, token]",[1397,1399],[1160,1162],"[token, upComing]"]