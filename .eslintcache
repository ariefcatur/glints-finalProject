[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"11"},{"size":567,"mtime":1607074685755,"results":"12","hashOfConfig":"13"},{"size":2451,"mtime":1607263567268,"results":"14","hashOfConfig":"13"},{"size":12376,"mtime":1607609628021,"results":"15","hashOfConfig":"13"},{"size":2342,"mtime":1607535199664,"results":"16","hashOfConfig":"13"},{"size":5458,"mtime":1607577773727,"results":"17","hashOfConfig":"13"},{"size":1340,"mtime":1607397780637,"results":"18","hashOfConfig":"13"},{"size":13326,"mtime":1607574517095,"results":"19","hashOfConfig":"13"},{"size":199,"mtime":1607086232092,"results":"20","hashOfConfig":"13"},{"size":884,"mtime":1607263567302,"results":"21","hashOfConfig":"13"},{"size":6187,"mtime":1607397780677,"results":"22","hashOfConfig":"13"},{"size":6420,"mtime":1607535199658,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1lm62wj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],["54","55"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    Collapse,\r\n    ModalBody\r\n    \r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie'\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n}\r\n\r\nconst History = () =>{ \r\n    const [history, setHistory]=useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const token = Cookies.get('token');\r\n    const fullName = Cookies.get('fullName')\r\n    const [expense, setExpense]=useState([]);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const [totalHistory, setTotalHistory] = useState({})\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    // console.log(token)\r\n\r\n    const urlHistory ='http://3.0.91.163/subscription'\r\n    const urlExpense ='http://3.0.91.163/expense'\r\n    const urlTotalHistory = 'http://3.0.91.163/history'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n    \r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        axios\r\n        .get(urlHistory, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            // console.log(res.data);\r\n            setHistory(res.data);\r\n            setIsLoading(false);    \r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n        axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            // console.log(res.data)\r\n            setExpense(res.data);\r\n            setIsLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        dataMonth();\r\n        dataWeek();\r\n\r\n        axios\r\n        .get(urlTotalHistory, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            setTotalHistory(res.data);\r\n            setIsLoading(false); \r\n        })\r\n        .catch((err)=> console.log(err)); \r\n    }, [])\r\n    \r\n    const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n            //  console.log(res);\r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        // console.log(dates, totals)\r\n        \r\n    }\r\n\r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res);\r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n    \r\n    const handleRemove = (id) => {\r\n        const url = `http://3.0.91.163/subscription/${id}/`;\r\n        axios\r\n        .delete(url, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            return window.location.reload();   \r\n        })\r\n        .catch((err)=>console.log(err))\r\n    } \r\n\r\n    // const expenses = () =>{\r\n    //     setIsLoading(true);\r\n    //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n    //     .then((res)=>{\r\n    //         console.log(res.data)\r\n    //         setExpense(res.data);\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch((err)=> console.log(err));\r\n    // }\r\n\r\n    // const subscribeDetails = (id) => {\r\n    //     setIsLoading(true);\r\n    //     const url =`http://3.0.91.163/service?id=${id}`\r\n    //     axios.get(url).then((res)=>{\r\n    //         console.log(res.data.subscribeId)\r\n    //         setSubscribeId(res.data);\r\n    //         setModal(!modal)\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch((err)=> console.log(err));           \r\n    // }\r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs=\"8\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\"className=\"bg-default\">\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'10px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscribe</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {history.map((history)=>(\r\n                        <Col xs=\"4\" key={history.id}>\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"150px\"\r\n                                src={history.service.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                {history.service.name}\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=>{handleRemove(history.serviceId)}}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id =\"button\"\r\n                            >\r\n                                Unsubcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                {/* <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <h5>\r\n                                    Description: <br/>{subscribe.description}\r\n                                </h5>\r\n                                <h5>\r\n                                    Cost: {subscribe.cost}\r\n                                </h5>   \r\n                            </CardText>\r\n                            <Row>\r\n                            <Button\r\n                                to=\"\"\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Unsubscribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                                </Col>\r\n                            ))}\r\n                            \r\n                    </ModalBody>\r\n                </Modal> */}\r\n            </Container>\r\n            </Col>\r\n            \r\n            <Col xs=\"4\" style={{backgroundColor: 'white'}}> \r\n                {/* <h4>history</h4> */}\r\n                    <Card style={{marginTop: '20px', color:'white', backgroundColor: '#8F48EA'}}>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                            <CardTitle className=\"text-white\"  > Total :\r\n                            </CardTitle>\r\n                            </Col>\r\n                            <Col xs=\"6\">\r\n                            <h6 style={{float:\"right\", }}>IDR {totalHistory.total} </h6>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n               \r\n                {history.map((subscribtion, i)=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                    <Row>\r\n                    <Col xs=\"6\">\r\n                    <CardTitle className=\"text-dark font-weight\"><h6>{subscribtion.service.name}  <br/> {subscribtion.repeat}</h6> \r\n                    </CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                    <h6 style={{float:\"right\"}}>IDR  {subscribtion.service.cost} </h6>\r\n                    </Col>       \r\n                    </Row>\r\n                </Card>\r\n                ))}\r\n                {expense.map((expenses, i )=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                <Row>\r\n                    <Col xs=\"6\">\r\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold\"><h6>{expenses.title} <br/> {expenses.purchaseDate}</h6></CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                    <h6 style={{float:\"right\"}}>IDR  {expenses.total} </h6>\r\n                    </Col>  \r\n                </Row>  \r\n                </Card> \r\n                ))}\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default History;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport avatar from \"../assets/avatar2.png\";\r\nimport \"./Profile.css\";\r\nimport { User, Mail, MapPin } from \"react-feather\";\r\nimport Edit from \"./EditProfile\";\r\nimport TabProfile from \"./TabProfile\";\r\n\r\nconst Profile = (props) => {\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  const fullname = Cookies.get('fullname');\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  const email = Cookies.get('email');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/user/`, {\r\n            headers: {Authorization : `Bearer ${token}`}\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUser(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col xl=\"4\" sm=\"12\">\r\n          <Card>\r\n            {user ? (\r\n              <CardBody className=\"cardBody\">\r\n                <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\r\n                <Row className=\"rowright\">\r\n                  <Container>\r\n                    <Edit />\r\n                  </Container>\r\n                </Row>\r\n                <CardTitle>\r\n                  <Container>\r\n                    <p>\r\n                      <User size={22} /> {fullname}\r\n                    </p>\r\n                  </Container>\r\n                  {/* <Container>\r\n                    <p>\r\n                      <Smile size={22} /> Username\r\n                    </p>\r\n                  </Container> */}\r\n                  <Container>\r\n                    <p>\r\n                      <Mail size={22} /> {email}\r\n                    </p>\r\n                  </Container>\r\n                  {/* <Container>\r\n                    <p>\r\n                      <MapPin size={22} /> Bandung\r\n                    </p>\r\n                  </Container> */}\r\n                </CardTitle>\r\n              </CardBody>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xl=\"8\" sm=\"12\">\r\n          <TabProfile />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js",["76"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n// import { ShoppingCart } from \"react-feather\";\r\nimport './Profile.css'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nconst AddExpenses = (props) => {\r\n\r\n  const urlExpense = \"http://3.0.91.163/expense\";\r\n\r\n  const urlCard = \"http://3.0.91.163/card\";\r\n\r\n  const urlCategories = \"http://3.0.91.163/categories\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  const { className } = props;\r\n\r\n  const [cards, setCards] = useState(\"\");\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [total, setTotal] = useState(\"\");\r\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\r\n  const [cardId, setCardId] = useState(null);\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n\r\n  const [categories, setCategories] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCards(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      axios\r\n      .get(urlCategories)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCategories(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      title: title,\r\n      total: total,\r\n      purchaseDate: purchaseDate,\r\n      cardId: cardId,\r\n      categoryId: categoryId\r\n    };\r\n    // console.log(data);\r\n    axios\r\n      .post(urlExpense, data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div className=\"expense\">\r\n      <Button\r\n        size=\"l\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\r\n        onClick={toggle}\r\n      >\r\n      Add Expense \r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Add New Expenses</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"title\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"total\">Paid amount</Label>\r\n                  <Input\r\n                    type=\"total\"\r\n                    name=\"total\"\r\n                    id=\"total\"\r\n                    placeholder=\"IDR\"\r\n                    onChange={(e) => setTotal(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"categoryId\">Expense Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"categoryId\"\r\n                    id=\"categoryId\"\r\n                    onChange={(e) => setCategoryId(e.target.value)}\r\n                  >\r\n                  {categories.length !== 0\r\n                    ? categories.map((category) => <option value={category.id}>{category.category}</option>)\r\n                    : (\"\")}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"purchaseDate\">Purchase Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"purchaseDate\"\r\n                    id=\"purchaseDate\"\r\n                    placeholder=\"IDR\"\r\n                    onChange={(e) => setPurchaseDate(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"cardId\">Select Card</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"cardId\"\r\n                    id=\"cardId\"\r\n                    onChange={(e) => setCardId(e.target.value)}\r\n                  >\r\n                  {cards.length !== 0\r\n                    ? cards.map((card) => <option value={card.id}>{card.cardBank}</option>)\r\n                    : (\"\")}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <FormGroup>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n              >\r\n                <strong>Add New Expense</strong>\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddExpenses;\r\n",["77","78"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",["79","80"],"import React, {Component} from 'react';\r\nimport './App.css';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Dashboard from './pages/Dashboard'\r\nimport History from './pages/History'\r\nimport Profile from './components/Profile.js'\r\nimport Footer from './components/Footer.js'\r\nimport TopMenu from \"./pages/TopMenu\";\r\nimport Logout from \"./pages/Logout\";\r\n\r\n\r\n\r\nfunction App(){\r\n  return(\r\n    <>\r\n     <TopMenu />\r\n     {/* <TopUser /> */}\r\n          {/* <ul>\r\n            <li>\r\n              <Link to=\"/Dashboard\"> Dashboard </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/History\"> History </Link>\r\n            </li>\r\n            <li> \r\n              <Link to=\"/Profile\"> Profile </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/Home\"> Home </Link>\r\n            </li>\r\n          </ul> */}\r\n    <Switch>\r\n      <Route path =\"/dashboard\">\r\n        <Dashboard />\r\n      </Route>\r\n      <Route path =\"/history\">\r\n        <History />\r\n      </Route>\r\n      <Route path =\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path =\"/logout\">\r\n        <Logout />\r\n      </Route>\r\n      <Route path=\"/\">\r\n            <Home />\r\n      </Route>\r\n    </Switch>\r\n    <Footer/>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withRouter(App);\r\n",["81","82"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Collapse,\r\n    Spinner,\r\n    FormGroup,\r\n    Input,\r\n    Label\r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link, useParams} from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie';\r\nimport AddExpenses from '../components/AddExpenses';\r\n\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n\r\n\r\nconst Dashboard = () =>{ \r\n    const urlSubscribe = 'http://3.0.91.163/service'\r\n    const [subscribes, setSubscribes] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const token = Cookies.get('token');\r\n    const [startDate, setStartDate] = useState(0)\r\n    const [serviceId, setServiceId] = useState([])\r\n    const [card,setCard] = useState([])\r\n    const [cardId, setCardId] = useState(null)\r\n    const urlCard = 'http://3.0.91.163/card'\r\n    const [chartData, setChartData] = useState({});\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(urlSubscribe).then((res) => {\r\n          setSubscribes(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        \r\n        dataMonth();\r\n        dataWeek();\r\n      }, []);\r\n    \r\n    const subscribeDetails = (id) => {\r\n        setLoading(true);\r\n        const url =`http://3.0.91.163/service?id=${id}`\r\n        axios.get(url).then((res)=>{\r\n            console.log(\"subscribe id\", res.data)\r\n            setSubscribeId(res.data);\r\n            setModal(!modal)\r\n            setLoading(false);\r\n            subscribeCard()\r\n            setServiceId(id)\r\n        })\r\n        .catch((err)=> console.log(err));           \r\n    }\r\n\r\n    \r\n    const subscribeCard = () =>{\r\n        setLoading(true);\r\n        axios.get(urlCard, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setCard(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n    }\r\n    \r\n    const subscribtion = (e)=>{\r\n        e.preventDefault();\r\n        const url =`http://3.0.91.163/subscription/${serviceId}/?cardId=${cardId}`\r\n        // console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n        // console.log(token)\r\n        axios\r\n        .post(url, null, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n        })\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Spinner type=\"grow\" color=\"warning\" />\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n              Sedang memuat data...\r\n            </Row>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n            \r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        console.log(dates, totals)\r\n        \r\n    }\r\n    \r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            \r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n    }\r\n    \r\n   \r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Row>\r\n                        <Col xs=\"6\">\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button  id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button  id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'30px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Popular Apps</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {subscribes.map((subscribes, ) =>(\r\n                        <Col xs=\"3\" key={subscribes.id}>\r\n                        <Card style={{marginBottom:'50px'}}>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"170px\"\r\n                                src={subscribes.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                <h5>{subscribes.name}</h5>\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=> subscribeDetails(subscribes.id)}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>  \r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <ul>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Description: <br/>{subscribe.description}\r\n                                        </h5>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Cost: {subscribe.cost}\r\n                                        </h5>\r\n                                    </li>\r\n                                </ul> \r\n                            </CardText>\r\n                            <FormGroup>\r\n                            <Label for=\"cardId\">Select Card</Label>\r\n                            </FormGroup>\r\n                            <Row>\r\n                            <Col md=\"8\">\r\n                            {/* {card.map((cards)=>(\r\n                                <Select\r\n\r\n                                value={cards.cardBank}/>\r\n                            ))} */}\r\n                            <Row>\r\n                            <FormGroup>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"cardId\"\r\n                                id=\"cardId\"\r\n                                onChange={(e) =>{\r\n                                    setCardId(e.target.value)\r\n                                    console.log(e.target.value)\r\n                                } }\r\n                            >\r\n                                <option >Select Card</option>\r\n                            {card.length !== 0\r\n                                ? card.map((cards) => <option value={cards.id}>{cards.cardBank}</option>)\r\n                                : (\"\")}\r\n                            </Input>\r\n                            </FormGroup>\r\n                            </Row>\r\n                            </Col>\r\n                            <Col>\r\n                            <Button\r\n                                onClick={subscribtion}\r\n                                className=\"btn btn-primary\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subscribe\r\n                            </Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                                </Col>\r\n                            ))}   \r\n                    </ModalBody>\r\n                </Modal>\r\n                </Row> \r\n                <Row>\r\n                <AddExpenses/>\r\n                </Row> \r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["101"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["102","103","104","105","106","107","108"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":5,"nodeType":"115","messageId":"116","endLine":10,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":12,"column":5,"nodeType":"115","messageId":"116","endLine":12,"endColumn":10},{"ruleId":"113","severity":1,"message":"118","line":13,"column":5,"nodeType":"115","messageId":"116","endLine":13,"endColumn":16},{"ruleId":"113","severity":1,"message":"119","line":15,"column":5,"nodeType":"115","messageId":"116","endLine":15,"endColumn":14},{"ruleId":"113","severity":1,"message":"120","line":18,"column":10,"nodeType":"115","messageId":"116","endLine":18,"endColumn":14},{"ruleId":"113","severity":1,"message":"121","line":21,"column":9,"nodeType":"115","messageId":"116","endLine":21,"endColumn":19},{"ruleId":"113","severity":1,"message":"122","line":41,"column":12,"nodeType":"115","messageId":"116","endLine":41,"endColumn":21},{"ruleId":"113","severity":1,"message":"123","line":43,"column":11,"nodeType":"115","messageId":"116","endLine":43,"endColumn":19},{"ruleId":"113","severity":1,"message":"124","line":45,"column":12,"nodeType":"115","messageId":"116","endLine":45,"endColumn":23},{"ruleId":"113","severity":1,"message":"125","line":45,"column":25,"nodeType":"115","messageId":"116","endLine":45,"endColumn":39},{"ruleId":"113","severity":1,"message":"126","line":48,"column":12,"nodeType":"115","messageId":"116","endLine":48,"endColumn":21},{"ruleId":"113","severity":1,"message":"127","line":48,"column":23,"nodeType":"115","messageId":"116","endLine":48,"endColumn":35},{"ruleId":"113","severity":1,"message":"128","line":49,"column":12,"nodeType":"115","messageId":"116","endLine":49,"endColumn":21},{"ruleId":"113","severity":1,"message":"129","line":49,"column":23,"nodeType":"115","messageId":"116","endLine":49,"endColumn":35},{"ruleId":"113","severity":1,"message":"130","line":50,"column":19,"nodeType":"115","messageId":"116","endLine":50,"endColumn":27},{"ruleId":"113","severity":1,"message":"131","line":51,"column":20,"nodeType":"115","messageId":"116","endLine":51,"endColumn":29},{"ruleId":"113","severity":1,"message":"132","line":62,"column":11,"nodeType":"115","messageId":"116","endLine":62,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":95,"column":8,"nodeType":"135","endLine":95,"endColumn":10,"suggestions":"136"},{"ruleId":"113","severity":1,"message":"137","line":15,"column":22,"nodeType":"115","messageId":"116","endLine":15,"endColumn":28},{"ruleId":"133","severity":1,"message":"138","line":39,"column":6,"nodeType":"135","endLine":39,"endColumn":8,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"138","line":64,"column":6,"nodeType":"135","endLine":64,"endColumn":8,"suggestions":"140"},{"ruleId":"109","replacedBy":"141"},{"ruleId":"111","replacedBy":"142"},{"ruleId":"113","severity":1,"message":"143","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"120","line":3,"column":37,"nodeType":"115","messageId":"116","endLine":3,"endColumn":41},{"ruleId":"109","replacedBy":"144"},{"ruleId":"111","replacedBy":"145"},{"ruleId":"113","severity":1,"message":"146","line":21,"column":8,"nodeType":"115","messageId":"116","endLine":21,"endColumn":15},{"ruleId":"113","severity":1,"message":"147","line":22,"column":8,"nodeType":"115","messageId":"116","endLine":22,"endColumn":12},{"ruleId":"113","severity":1,"message":"148","line":23,"column":8,"nodeType":"115","messageId":"116","endLine":23,"endColumn":14},{"ruleId":"113","severity":1,"message":"149","line":24,"column":8,"nodeType":"115","messageId":"116","endLine":24,"endColumn":16},{"ruleId":"113","severity":1,"message":"150","line":25,"column":8,"nodeType":"115","messageId":"116","endLine":25,"endColumn":15},{"ruleId":"113","severity":1,"message":"151","line":26,"column":8,"nodeType":"115","messageId":"116","endLine":26,"endColumn":12},{"ruleId":"113","severity":1,"message":"120","line":27,"column":10,"nodeType":"115","messageId":"116","endLine":27,"endColumn":14},{"ruleId":"113","severity":1,"message":"152","line":27,"column":16,"nodeType":"115","messageId":"116","endLine":27,"endColumn":25},{"ruleId":"113","severity":1,"message":"121","line":30,"column":9,"nodeType":"115","messageId":"116","endLine":30,"endColumn":19},{"ruleId":"113","severity":1,"message":"153","line":86,"column":12,"nodeType":"115","messageId":"116","endLine":86,"endColumn":21},{"ruleId":"113","severity":1,"message":"154","line":86,"column":23,"nodeType":"115","messageId":"116","endLine":86,"endColumn":35},{"ruleId":"113","severity":1,"message":"130","line":92,"column":19,"nodeType":"115","messageId":"116","endLine":92,"endColumn":27},{"ruleId":"113","severity":1,"message":"131","line":93,"column":20,"nodeType":"115","messageId":"116","endLine":93,"endColumn":29},{"ruleId":"113","severity":1,"message":"126","line":96,"column":12,"nodeType":"115","messageId":"116","endLine":96,"endColumn":21},{"ruleId":"113","severity":1,"message":"127","line":96,"column":23,"nodeType":"115","messageId":"116","endLine":96,"endColumn":35},{"ruleId":"113","severity":1,"message":"128","line":97,"column":12,"nodeType":"115","messageId":"116","endLine":97,"endColumn":21},{"ruleId":"113","severity":1,"message":"129","line":97,"column":23,"nodeType":"115","messageId":"116","endLine":97,"endColumn":35},{"ruleId":"133","severity":1,"message":"155","line":114,"column":10,"nodeType":"135","endLine":114,"endColumn":12,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":27},{"ruleId":"113","severity":1,"message":"160","line":3,"column":49,"nodeType":"115","messageId":"116","endLine":3,"endColumn":54},{"ruleId":"113","severity":1,"message":"161","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"162","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":17},{"ruleId":"113","severity":1,"message":"163","line":18,"column":10,"nodeType":"115","messageId":"116","endLine":18,"endColumn":20},{"ruleId":"113","severity":1,"message":"164","line":20,"column":9,"nodeType":"115","messageId":"116","endLine":20,"endColumn":16},{"ruleId":"113","severity":1,"message":"165","line":35,"column":10,"nodeType":"115","messageId":"116","endLine":35,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":83,"column":11,"nodeType":"159","endLine":83,"endColumn":38},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["170"],"'MapPin' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["171"],["172"],["168"],["169"],"'Component' is defined but never used.",["168"],["169"],"'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.",["173"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Alert' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"181","text":"182"},"Update the dependencies array to be: [token]",{"range":"183","text":"184"},{"range":"185","text":"184"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"186","text":"187"},[2910,2912],"[dataMonth, dataWeek, token]",[924,926],"[token]",[1447,1449],[3398,3400],"[dataMonth, dataWeek]"]