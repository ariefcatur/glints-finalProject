[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"8"},{"size":567,"mtime":1607074685755,"results":"9","hashOfConfig":"10"},{"size":2755,"mtime":1607076458251,"results":"11","hashOfConfig":"10"},{"size":9806,"mtime":1607077214488,"results":"12","hashOfConfig":"10"},{"size":2400,"mtime":1607074685700,"results":"13","hashOfConfig":"10"},{"size":1202,"mtime":1607074685678,"results":"14","hashOfConfig":"10"},{"size":1387,"mtime":1607074705135,"results":"15","hashOfConfig":"10"},{"size":6003,"mtime":1607086490971,"results":"16","hashOfConfig":"10"},{"size":199,"mtime":1607086232092,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lm62wj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["38","39","40","41","42","43","44","45","46","47"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    Collapse,\r\n    Spinner,\r\n    \r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\n\r\n\r\nconst dataMonth= {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'Juny', 'July', 'August', 'September', 'October', 'November'],\r\n    datasets:[\r\n        {\r\n            label: '# Month',\r\n            data: [12, 19, 3, 5, 2, 3],\r\n            fill: false,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n    ],\r\n}\r\n\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n}\r\n\r\nconst dataWeek= {\r\n    labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n    datasets:[\r\n        {\r\n            label: '# Week',\r\n            data: [12, 19, 3, 5],\r\n            fill: false,\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n    ],\r\n}\r\n\r\n\r\n\r\n\r\nconst Dashboard = () =>{ \r\n    const urlSubscribe = 'http://3.0.91.163/subscription'\r\n    const [subscribe, setSubscribe] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n\r\n    // useEffect(() => {\r\n    //     setLoading(true);\r\n    \r\n    //     axios.get(urlSubscribe).then((res) => {\r\n    //       setSubscribe(res.data);\r\n    //       setLoading(false);\r\n    //     });\r\n    //   }, []);\r\n\r\n    // if (loading) {\r\n    //     return (\r\n    //       <div>\r\n    //         <Row className=\"justify-content-center mt-5\">\r\n    //           <Spinner type=\"grow\" color=\"warning\" />\r\n    //         </Row>\r\n    //         <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n    //           Sedang memuat data...\r\n    //         </Row>\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n\r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Row>\r\n                        <Col xs=\"6\">\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button  id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button  id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'30px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={dataMonth}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={dataWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Popular Apps</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"3\">\r\n                    <Card>\r\n                        <CardImg\r\n                            top\r\n                            width=\"100%\"\r\n                            height=\"170px\"\r\n                            src={disney}\r\n                            alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                            <h4>Disney</h4>\r\n                        </CardTitle>\r\n                        <Row>\r\n                        <Button\r\n                            onClick={toggle}\r\n                            className=\"btn btn-primary btn-block\"\r\n                            id=\"button\"\r\n                        >\r\n                            Subcribe\r\n                        </Button>\r\n                        </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </Col>   \r\n                    <Col xs=\"3\">\r\n                        <Card>\r\n                        <CardImg\r\n                            top\r\n                            width=\"100%\"\r\n                            height=\"170px\"\r\n                            src={youtube}\r\n                            alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                            <h4>Youtube Premium</h4>\r\n                        </CardTitle>\r\n                        \r\n                        <Row>\r\n                        <Button\r\n                            to=\"\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                            id=\"button\"\r\n                        >\r\n                            Subscribe\r\n                        </Button>\r\n                        </Row>\r\n                        </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                        <Card>\r\n                        <CardImg\r\n                            top\r\n                            width=\"100%\"\r\n                            height=\"170px\"\r\n                            src={netflix}\r\n                            alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                            <h4>Netflix</h4>\r\n                        </CardTitle>\r\n                        <Row>\r\n                        <Button\r\n                            to=\"\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                            id=\"button\"\r\n                        >\r\n                            Subscribe\r\n                        </Button>\r\n                        </Row>\r\n                        </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                        <Card>\r\n                        <CardImg\r\n                            top\r\n                            width=\"100%\"\r\n                            height=\"170px\"\r\n                            src={sportify}\r\n                            alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                            <h4>Spotify</h4>\r\n                        </CardTitle>\r\n                        <Row>\r\n                        <Link\r\n                            to=\"\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                            id=\"button\"\r\n                        >\r\n                            Subscribe\r\n                        </Link>\r\n                        </Row>\r\n                        </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Modal isOpen={modal} toggle={toggle}>\r\n                    <ModalHeader toggle={toggle}> Disney\r\n                    </ModalHeader>\r\n                    <CardImg\r\n                            top\r\n                            height=\"300px\"\r\n                            src={disney}\r\n                            alt=\"subscribtion\"\r\n                        /> \r\n                    <CardBody>\r\n                        <CardText>\r\n                            <h5>\r\n                                Next Payment:\r\n                            </h5>\r\n                            <h5>\r\n                                Duration:\r\n                            </h5>\r\n                            <h5>\r\n                                Cost:\r\n                            </h5>\r\n                        </CardText>\r\n                        <Row>\r\n                        <Button\r\n                            to=\"\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                            id=\"button\"\r\n                        >\r\n                            Subscribe\r\n                        </Button>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Modal>\r\n                <div id=\"mybutton\">\r\n                    <Button className=\"expense\">Add Expense</Button>\r\n                </div>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;",["48","49"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["50","51","52","53","54","55"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\n\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\">\r\n      <Navbar  expand=\"md\">\r\n      <NavbarBrand className=\"lognav\" href=\"/\">\r\n          <img src={subsit}></img>\r\n        </NavbarBrand>\r\n\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {/* <NavbarBrand href=\"/\">About</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <NavbarBrand href=\"/\">Product</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <NavbarBrand><Signup /></NavbarBrand>\r\n           <NavbarToggler onClick={toggle} /> */}\r\n           <div className='body'>\r\n             <ul id='Menu'>\r\n               <li className='liquid1'></li>\r\n               <li><a href='#'>About</a></li>\r\n               <li><a href='#'>Product</a></li>\r\n               <li><Signup /></li>\r\n             </ul>\r\n           </div>\r\n         \r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["56","57","58","59","60","61","62"],"import React, { useState } from \"react\";\r\nimport \"./Signup.css\";\r\nimport { Modal, ModalHeader, ModalBody, Button, Alert } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {checkLogin} from \"../Helper\";\r\n\r\n\r\nconst SignUp = (props) => {\r\n  let history = useHistory();\r\n  const { buttonLabel, className } = props;\r\n\r\n  const [modalSignUp, setModalSignUp] = useState(false);\r\n  const [modalSignIn, setModalSignIn] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const checker = () => {\r\n    localStorage.getItem(\"token\") === null\r\n      ? setIsLoggedIn(false)\r\n      : setIsLoggedIn(true);\r\n  };\r\n\r\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\r\n  const toggleSignIn = () => {\r\n    setModalSignIn(!modalSignIn);\r\n    setModalSignUp(false);\r\n  };\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmitSignUp = (e) => {\r\n    e.preventDefault();\r\n\r\n    const urlSignUp = \" http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/register\";\r\n    const bodyData = {\r\n      fullName: fullName,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(urlSignUp, bodyData).then((ress)=>{\r\n      console.log(ress.bodyData);\r\n      history.push('/');\r\n    })\r\n  };\r\n\r\n  const handleSubmitSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    const urlSignIn = \"http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/login\";\r\n    const bodyData = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(urlSignIn, bodyData).then((res)=>{\r\n      console.log(res);\r\n      const email = res.data.email;\r\n      const token = res.data.token;\r\n      Cookies.set('email', email,{expires:1});\r\n      Cookies.set('token', token,{expires:1});\r\n      history.push(\"/Dashboard\")\r\n    })\r\n      \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"SignUpModal\">\r\n        <div className=\"navigation\">\r\n        \r\n          <a  onClick={toggleSignUp}>\r\n            {buttonLabel}Sign Up\r\n          </a>\r\n        </div>\r\n\r\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\r\n          <ModalHeader toggle={toggleSignUp}>\r\n            <div className=\"ModalHeader\">\r\n              <h4 className=\"SignTitle\">Sign Up For a New Account</h4>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={handleSubmitSignUp}>\r\n              <div className=\"form-group\">\r\n                <label id=\"SignUp\">Full Name</label>\r\n                <br />\r\n                <input\r\n                  id=\"InputSignUp\"\r\n                  type=\"text\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter full name\"\r\n                  onChange={(e) => setFullName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label id=\"SignUp\">Email</label>\r\n                <br />\r\n                <input\r\n                  id=\"InputSignUp\"\r\n                  type=\"email\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label id=\"SignUp\">Password</label>\r\n                <br />\r\n                <input\r\n                  id=\"InputSignUp\"\r\n                  type=\"password\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <button\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                Sign Up\r\n              </button>\r\n              <p className=\"Login\">\r\n                Already have an account?{\" \"}\r\n                <Button color=\"primary\" onClick={toggleSignIn}>\r\n                  {buttonLabel}Sign In\r\n                </Button>\r\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\r\n              </p>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div className=\"SignInModal\">\r\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\r\n          <ModalHeader toggle={toggleSignIn}>\r\n            <div className=\"ModalHeader\"></div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={handleSubmitSignIn}>\r\n              <div className=\"form-group\">\r\n                <label id=\"SignUp\">Email</label>\r\n                <br />\r\n                <input\r\n                  id=\"InputSignUp\"\r\n                  type=\"email\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label id=\"SignUp\">Password</label>\r\n                <br />\r\n                <input\r\n                  id=\"InputSignUp\"\r\n                  type=\"password\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <button\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={toggleSignIn}\r\n              >\r\n                Sign In\r\n              </button>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":15,"column":5,"nodeType":"65","messageId":"66","endLine":15,"endColumn":12},{"ruleId":"63","severity":1,"message":"68","line":19,"column":8,"nodeType":"65","messageId":"66","endLine":19,"endColumn":12},{"ruleId":"63","severity":1,"message":"69","line":23,"column":8,"nodeType":"65","messageId":"66","endLine":23,"endColumn":12},{"ruleId":"63","severity":1,"message":"70","line":26,"column":8,"nodeType":"65","messageId":"66","endLine":26,"endColumn":13},{"ruleId":"63","severity":1,"message":"71","line":72,"column":11,"nodeType":"65","messageId":"66","endLine":72,"endColumn":23},{"ruleId":"63","severity":1,"message":"72","line":73,"column":12,"nodeType":"65","messageId":"66","endLine":73,"endColumn":21},{"ruleId":"63","severity":1,"message":"73","line":73,"column":23,"nodeType":"65","messageId":"66","endLine":73,"endColumn":35},{"ruleId":"63","severity":1,"message":"74","line":77,"column":12,"nodeType":"65","messageId":"66","endLine":77,"endColumn":19},{"ruleId":"63","severity":1,"message":"75","line":77,"column":21,"nodeType":"65","messageId":"66","endLine":77,"endColumn":31},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"63","severity":1,"message":"80","line":6,"column":3,"nodeType":"65","messageId":"66","endLine":6,"endColumn":16},{"ruleId":"63","severity":1,"message":"81","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":13},{"ruleId":"63","severity":1,"message":"82","line":19,"column":9,"nodeType":"65","messageId":"66","endLine":19,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":25,"column":11,"nodeType":"85","endLine":25,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":39,"column":20,"nodeType":"85","endLine":39,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":40,"column":20,"nodeType":"85","endLine":40,"endColumn":32},{"ruleId":"63","severity":1,"message":"88","line":3,"column":49,"nodeType":"65","messageId":"66","endLine":3,"endColumn":54},{"ruleId":"63","severity":1,"message":"81","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":13},{"ruleId":"63","severity":1,"message":"89","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":17},{"ruleId":"63","severity":1,"message":"90","line":9,"column":9,"nodeType":"65","messageId":"66","endLine":9,"endColumn":19},{"ruleId":"63","severity":1,"message":"91","line":18,"column":10,"nodeType":"65","messageId":"66","endLine":18,"endColumn":20},{"ruleId":"63","severity":1,"message":"92","line":20,"column":9,"nodeType":"65","messageId":"66","endLine":20,"endColumn":16},{"ruleId":"86","severity":1,"message":"93","line":77,"column":11,"nodeType":"85","endLine":77,"endColumn":38},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'hulu' is defined but never used.","'logo' is defined but never used.","'axios' is defined but never used.","'urlSubscribe' is assigned a value but never used.","'subscribe' is assigned a value but never used.","'setSubscribe' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'NavbarToggler' is defined but never used.","'Login' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Alert' is defined but never used.","'Dashboard' is defined but never used.","'checkLogin' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]