[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Debt.js":"8"},{"size":1321,"mtime":1607762145025,"results":"9","hashOfConfig":"10"},{"size":2451,"mtime":1607762145101,"results":"11","hashOfConfig":"10"},{"size":3567,"mtime":1607785772203,"results":"12","hashOfConfig":"10"},{"size":567,"mtime":1607762145127,"results":"13","hashOfConfig":"10"},{"size":12861,"mtime":1607763554342,"results":"14","hashOfConfig":"10"},{"size":2065,"mtime":1607782667860,"results":"15","hashOfConfig":"10"},{"size":4005,"mtime":1607782667879,"results":"16","hashOfConfig":"10"},{"size":5530,"mtime":1607873593482,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lm62wj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],["37","38"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["39","40","41","42","43","44","45"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport avatar from \"../assets/avatar2.png\";\r\nimport \"./Profile.css\";\r\nimport { User, Mail } from \"react-feather\";\r\nimport Edit from \"./EditProfile\";\r\nimport TabProfile from \"./TabProfile\";\r\n\r\nconst Profile = () => {\r\n  const [users, setUsers] = useState(\"\");\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  useEffect(() => {\r\n\r\n    axios\r\n      .get(\r\n        `http://ec2-3-0-91-163.ap-southeast-1.compute.amazonaws.com/auth/user/`, {\r\n            headers: {Authorization : `Bearer ${token}`}\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUsers(res.data);\r\n      })\r\n      .catch((error) => {\r\n      console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col xl=\"4\" sm=\"12\">\r\n          <Card>\r\n            {users.length !== 0 ? (\r\n              users.map((user)=> (\r\n                <CardBody key={user.id} className=\"cardBody\">\r\n                <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\r\n                <Row className=\"rowright\">\r\n                  <Container>\r\n                    <Edit />\r\n                  </Container>\r\n                </Row>\r\n                <CardTitle>\r\n                  <Container>\r\n                    <p>\r\n                      <User size={22} /> {user.fullName}\r\n                    </p>\r\n                  </Container>\r\n                  <Container>\r\n                    <p>\r\n                      <Mail size={22} /> {user.email}\r\n                    </p>\r\n                  </Container>\r\n                </CardTitle>\r\n              </CardBody>\r\n              ))\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xl=\"8\" sm=\"12\">\r\n          <TabProfile />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["47"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Debt.js",["48","49","50","51","52"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nconst Debt = () =>{\r\n    const [debt, setDebt] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [type, setType] = useState(null);\r\n    const [dueDate, setDueDate] = useState(\"\");\r\n\r\n    const url =\"http://3.0.91.163/debts/notes\"\r\n    const token = Cookies.get(\"token\")\r\n    const urlDebt =\"http://3.0.91.163/debts/add\"\r\n\r\n  \r\n    useEffect(()=>{\r\n        axios\r\n        .get(url, {headers: {Authorization: `Bearer ${token}`}\r\n    })\r\n    .then((res)=>{\r\n        console.log(\"get debt\", (res.data))\r\n        setDebt(res.data);\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n    }, []);\r\n    \r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n    \r\n    const handleSubmit = (e) =>{\r\n      e.preventDefault();\r\n\r\n      const data={\r\n        name: name,\r\n        description:description,\r\n        amount: amount,\r\n        type : type,\r\n        dueDate : dueDate,\r\n      };\r\n\r\n      axios\r\n      .post(urlDebt, data, {headers: { Authorization: `Bearer ${token}`}})\r\n      .then((res)=>{\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error)\r\n      })\r\n\r\n    }\r\n    return (\r\n    <Container>\r\n        <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{color: \"white\", backgroundColor: \"#8F48EA\"}}\r\n        onClick={toggle}>\r\n        {/* <Plus size={15}/>  */}\r\n        <strong>Add Debt</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Add new Dept here</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n              <Row form>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Name</Label>\r\n                        <Input\r\n                        type=\"text\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Description</Label>\r\n                        <Input\r\n                        type=\"textarea\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Amount</Label>\r\n                        <Input\r\n                        type=\"number\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Type</Label>\r\n                        <Input\r\n                        type=\"select\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        >\r\n                          <option>Select Type</option>\r\n                          <option>Account Payable</option>\r\n                          <option>Account Receivable</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Due Date</Label>\r\n                        <Input\r\n                        type=\"date\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setDueDate(e.target.value)}\r\n                        >\r\n                        </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n              </Row>\r\n            <FormGroup>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n              >\r\n                <strong>Add New Card</strong>\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n        <Row>\r\n        {debt.map((debts)=>(\r\n        <Col xs=\"12\" key={debts.id}>\r\n        <Table hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Dept Type</th>\r\n                    <th>Cost</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>{debts.dueDate}</td>\r\n                    <td>{debts.name},{debts.description}</td>\r\n                    <td>{debts.amount}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n        </Col>\r\n        ))}   \r\n        </Row>\r\n    </Container>\r\n\r\n    )\r\n    }   \r\nexport default Debt;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":5,"nodeType":"59","messageId":"60","endLine":8,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":23,"column":10,"nodeType":"59","messageId":"60","endLine":23,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":173,"column":41,"nodeType":"64","endLine":177,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":195,"column":41,"nodeType":"64","endLine":199,"endColumn":42},{"ruleId":"65","severity":1,"message":"66","line":211,"column":41,"nodeType":"64","endLine":211,"endColumn":45},{"ruleId":"62","severity":1,"message":"63","line":216,"column":41,"nodeType":"64","endLine":220,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":239,"column":41,"nodeType":"64","endLine":243,"endColumn":42},{"ruleId":"67","severity":1,"message":"68","line":39,"column":6,"nodeType":"69","endLine":39,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"68","line":35,"column":6,"nodeType":"69","endLine":35,"endColumn":8,"suggestions":"71"},{"ruleId":"57","severity":1,"message":"72","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":7},{"ruleId":"57","severity":1,"message":"58","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":11},{"ruleId":"57","severity":1,"message":"73","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":11},{"ruleId":"57","severity":1,"message":"74","line":11,"column":3,"nodeType":"59","messageId":"60","endLine":11,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":47,"column":8,"nodeType":"69","endLine":47,"endColumn":10,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["78"],["79"],"'Card' is defined but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},{"desc":"81","fix":"84"},"Update the dependencies array to be: [token]",{"range":"85","text":"86"},{"range":"87","text":"86"},{"range":"88","text":"86"},[901,903],"[token]",[708,710],[1057,1059]]