[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditDebt.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"15","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"16","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"17","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js":"18","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Loading.js":"19","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"20","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"21","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"22","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"23","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js":"24"},{"size":1019,"mtime":1608026248734,"results":"25","hashOfConfig":"26"},{"size":5036,"mtime":1608830741032,"results":"27","hashOfConfig":"26"},{"size":15582,"mtime":1608970271125,"results":"28","hashOfConfig":"26"},{"size":12986,"mtime":1608830754638,"results":"29","hashOfConfig":"26"},{"size":3883,"mtime":1608627575489,"results":"30","hashOfConfig":"26"},{"size":199,"mtime":1607762145026,"results":"31","hashOfConfig":"26"},{"size":2063,"mtime":1607762145156,"results":"32","hashOfConfig":"26"},{"size":8789,"mtime":1608830741399,"results":"33","hashOfConfig":"26"},{"size":6524,"mtime":1608627576003,"results":"34","hashOfConfig":"26"},{"size":5182,"mtime":1608627575864,"results":"35","hashOfConfig":"26"},{"size":4663,"mtime":1608975788872,"results":"36","hashOfConfig":"26"},{"size":3980,"mtime":1608830741083,"results":"37","hashOfConfig":"26"},{"size":2444,"mtime":1608831613661,"results":"38","hashOfConfig":"26"},{"size":2204,"mtime":1608624912385,"results":"39","hashOfConfig":"26"},{"size":567,"mtime":1607762145127,"results":"40","hashOfConfig":"26"},{"size":2596,"mtime":1608830741344,"results":"41","hashOfConfig":"26"},{"size":344,"mtime":1608830741097,"results":"42","hashOfConfig":"26"},{"size":3131,"mtime":1608624936891,"results":"43","hashOfConfig":"26"},{"size":350,"mtime":1608294444054,"results":"44","hashOfConfig":"26"},{"size":1293,"mtime":1607762145160,"results":"45","hashOfConfig":"26"},{"size":871,"mtime":1608282592527,"results":"46","hashOfConfig":"26"},{"size":4396,"mtime":1608970992732,"results":"47","hashOfConfig":"26"},{"size":13667,"mtime":1608970938306,"results":"48","hashOfConfig":"26"},{"size":6614,"mtime":1608971344535,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1lm62wj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["106","107"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Card, Row, Col } from \"reactstrap\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport Loading from \"./Loading\";\r\nimport sleep from \"../assets/sleep.png\";\r\n\r\nconst CalendarEvent = () => {\r\n  const [upComing, setUpComing] = useState([]);\r\n  const [month, setMonth] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [checkSubs, setCheckSubs] = useState(\"\");\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setLoading(true);\r\n    axios\r\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.map((e) => e.dueDate));\r\n        setUpComing(\r\n          ...upComing,\r\n          res.data.map((e) => ({\r\n            title: e.service.name,\r\n            date: e.dueDate.substr(0, 10),\r\n          }))\r\n        );\r\n        setLoading(false);\r\n      });\r\n\r\n    axios\r\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCheckSubs(res.data);\r\n      });\r\n  }, []);\r\n\r\n  let checkComingMonth = upComing.filter((e) => e.date.substr(5, 2) == month);\r\n  // console.log(\"cek coming month\" , checkComingMonth)\r\n  checkComingMonth.sort((a, b) => {\r\n    if (a.date < b.date) return -1;\r\n    return a.date > b.date ? 1 : 0;\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      {checkSubs.length !== 0 ? (\r\n        // <Container className=\"mb-5 mt-5\">\r\n        // {/* {loading && <Loading/>} */}\r\n        // </Container>\r\n        // {!loading && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm=\"8\">\r\n              <Card style={{ padding: \"20px\" }}>\r\n                <FullCalendar\r\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                  datesSet={(arg) => {\r\n                    console.log(arg);\r\n                    console.log(arg.view.currentStart.toISOString()); //starting visible date\r\n                    console.log(arg.view.currentEnd.toISOString()); //ending visible date\r\n                    setMonth(arg.view.currentEnd.toISOString().substr(5, 2));\r\n                  }}\r\n                  initialView=\"dayGridMonth\"\r\n                  // height =\"100%\"\r\n                  events={upComing}\r\n                  // events={[\r\n                  // { title: \"event 1\", date: \"2020-12-06\" },\r\n                  // { title: \"event 2\", date: \"2020-12-12\" },\r\n                  //  ]}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col sm=\"4\">\r\n              <Card\r\n                style={{\r\n                  padding: \"20px\",\r\n                  minHeight: \"605px\",\r\n                  marginBottom: \"50px\",\r\n                }}\r\n              >\r\n                <h4\r\n                  style={{\r\n                    color: \"#222222\",\r\n                  }}\r\n                  className=\"text-center\"\r\n                >\r\n                  <strong>Events</strong>\r\n                </h4>\r\n                <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                {checkComingMonth === undefined ||\r\n                checkComingMonth.length == 0 ? (\r\n                  <h5 className=\"text-center my-5\">\r\n                    <strong>\r\n                      <i>No event found in this month.</i>\r\n                    </strong>\r\n                  </h5>\r\n                ) : (\r\n                  checkComingMonth.map((x) => (\r\n                    <p className=\"text-left\" style={{ marginBottom: \"20px\" }}>\r\n                      <b>{x.title}</b> service will be due on the{\" \"}\r\n                      <b>{x.date.substr(8, 2)}</b>th of this month.\r\n                    </p>\r\n                  ))\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"text-align-center\">\r\n          <Container style={{ minHeight: \"300px\", opacity:\"60%\", paddingTop:\"30px\" }}>\r\n            <p>\r\n              <b>\r\n                <i>\r\n                  You haven't subscribed anything, have you?\r\n                </i>\r\n              </b>\r\n            </p>\r\n            <Col className=\"subs6\">\r\n              <img\r\n                src={sleep}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CalendarEvent;\r\n",["113","114"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  Collapse,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { Element } from \"react-scroll\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Line } from \"@reactchartjs/react-chart.js\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport empty from \"../assets/empty.png\";\r\nimport glass from \"../assets/glass.png\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"../components/Profile.css\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst History = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const token = Cookies.get(\"token\");\r\n  const fullName = Cookies.get(\"fullName\");\r\n  const [expense, setExpense] = useState([]);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const [totalHistory, setTotalHistory] = useState([]);\r\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\r\n  const urlWeek = \"https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\r\n\r\n  // console.log(token)\r\n\r\n  const urlHistory = \"https://binar8-jul-hendri.nandaworks.com/subscription\";\r\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\r\n  const urlTotalHistory = \"https://binar8-jul-hendri.nandaworks.com/history\";\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setIsLoading(true);\r\n    axios\r\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        setExpense(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    dataMonth();\r\n    dataWeek();\r\n\r\n    axios\r\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(\"totalhistory\" ,res.data);\r\n        setTotalHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        //  console.log(res);\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    const url = ` https://binar8-jul-hendri.nandaworks.com/subscription/${id}/`;\r\n    axios\r\n      .delete(url, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // const expenses = () =>{\r\n  //     setIsLoading(true);\r\n  //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n  //     .then((res)=>{\r\n  //         console.log(res.data)\r\n  //         setExpense(res.data);\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n\r\n  // const subscribeDetails = (id) => {\r\n  //     setIsLoading(true);\r\n  //     const url =`http://3.0.91.163/service?id=${id}`\r\n  //     axios.get(url).then((res)=>{\r\n  //         console.log(res.data.subscribeId)\r\n  //         setSubscribeId(res.data);\r\n  //         setModal(!modal)\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"8\">\r\n            <Container>\r\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                <Col xs=\"12\" className=\"bg-default\">\r\n                  <Row>\r\n                    <Col xs=\"6\">\r\n                      <h4>Spending Value</h4>\r\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                      <div style={{ float: \"right\", position: \"relative\" }}>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapse}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                        >\r\n                          Month\r\n                        </Button>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapseWeek}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\r\n                        >\r\n                          Week\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                  <Collapse isOpen={isOpen}>\r\n                    <Line data={chartData} options={options} />\r\n                  </Collapse>\r\n                  <Collapse isOpen={isOpenWeek}>\r\n                    <Line data={chartWeek} options={options} />\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <Container>\r\n              <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscriptions</h3>\r\n              </Row>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n              <Row>\r\n                {history.length !== 0 ? (\r\n                  history.map((history) => (\r\n                    <Col xs=\"4\" key={history.id}>\r\n                      <Card className=\"mb-4\">\r\n                        <CardImg\r\n                          top\r\n                          width=\"100%\"\r\n                          height=\"150px\"\r\n                          src={history.service.picture}\r\n                          alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold text-center\"\r\n                          >\r\n                            <p><b>{history.service.name}</b></p>\r\n                          </CardTitle>\r\n                            <Button\r\n                              onClick={() => {\r\n                                if (\r\n                                  window.confirm(\r\n                                    `Your \"${history.service.name}\" service is about to be terminated. Please click OK to confirm.`\r\n                                  )\r\n                                )\r\n                                  handleRemove(history.serviceId);\r\n                              }}\r\n                              className=\"btn btn-primary btn-block\"\r\n                              id=\"button\"\r\n                            >\r\n                              <b>Unsubscribe</b>\r\n                            </Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))\r\n                ) : (\r\n                  <Container>\r\n                    <p style={{ opacity: \"60%\" }}>\r\n                      <i>\r\n                        <strong>You don't have any subscription.</strong>\r\n                      </i>\r\n                    </p>\r\n                    <Col className=\"subs\">\r\n                      <img\r\n                        src={glass}\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"50%\",\r\n                          opacity: \"0%\",\r\n                          position: \"center\",\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Container>\r\n                )}\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n\r\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"7px\" }}>\r\n            <h4>History</h4>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            <Card\r\n              style={{\r\n                marginTop: \"20px\",\r\n                color: \"white\",\r\n                backgroundColor: \"#8F48EA\",\r\n                marginBottom: \"25px\",\r\n              }}\r\n            >\r\n              <Row style={{ marginBottom: \"20px\" }}>\r\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\r\n                  <CardTitle className=\"text-white\">\r\n                    <strong>Total :</strong>\r\n                  </CardTitle>\r\n                </Col>\r\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\r\n                  <h6 style={{ float: \"right\" }}>\r\n                    <strong><NumberFormat value={totalHistory.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/> </strong>\r\n                  </h6>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"1000px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <h4>Subscriptions</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {history.length !== 0 ? (\r\n                history.map((subscribtion, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{\r\n                      padding: \"5px\",\r\n                      marginTop: \"20px\",\r\n                      backgroundColor: \"#f6f9fc\",\r\n                      marginBottom: \"20px\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"7\">\r\n                        <CardTitle className=\"text-dark font-weight\">\r\n                          <h6 style={{ paddingTop: \"15px\" }}>\r\n                            {subscribtion.repeat} : {subscribtion.service.name}{\" \"}\r\n                          </h6>\r\n                          <Moment format=\"D MMM YYYY\" >{subscribtion.startDate}</Moment>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"5\">\r\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\r\n                        <NumberFormat value={subscribtion.service.cost} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/>\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container style={{ marginBottom: \"20px\" }}>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No subscription found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs2\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n              <h4>Expenses</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {expense.length !== 0 ? (\r\n                expense.map((expenses, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{\r\n                      marginTop: \"20px\",\r\n                      padding: \"5px\",\r\n                      backgroundColor: \"#f6f9fc\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"6\" style={{ paddingTop: \"15px\" }}>\r\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight\">\r\n                          <h6>{expenses.title} </h6>\r\n                          <Moment format=\"D MMM YYYY\" >{expenses.purchaseDate}</Moment>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"6\">\r\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\r\n                        <NumberFormat value={expenses.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/>  \r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No expense found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs3\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n            </Element>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["134","135","136","137","138","139","140","141","142"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js",["143","144","145","146","147","148"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["149","150","151","152","153","154","155","156","157","158"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditDebt.js",["159"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js",["160"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport \"./Profile.css\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst Debt = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [type, setType] = useState(null);\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n\r\n  const token = Cookies.get(\"token\");\r\n  const urlDebt = \"https://binar8-jul-hendri.nandaworks.com/debts/add\";\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: name,\r\n      description: description,\r\n      amount: amount,\r\n      type: type,\r\n      dueDate: dueDate,\r\n    };\r\n\r\n    axios\r\n      .post(urlDebt, data, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  // $(\"input[data-type='currency']\").on({\r\n  //   keyup: function() {\r\n  //     formatCurrency($(this));\r\n  //   },\r\n  //   blur: function() { \r\n  //     formatCurrency($(this), \"blur\");\r\n  //   }\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"mr-2 mb-sm-0\"\r\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\r\n        onClick={toggle}\r\n      >\r\n        {/* <Plus size={15}/>  */}\r\n        <strong>New Note</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Add debt's information here.</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <Label for=\"cardType\">Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"cardType\"\r\n                    id=\"cardType\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"cardType\">Description</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"cardType\"\r\n                    id=\"cardType\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"cardType\">Amount</Label><br/>\r\n                  <Input\r\n                    type=\"text\"\r\n                    pattern=\"^\\$\\d{1,3}(,\\d{3})*(\\.\\d+)?IDR\" \r\n                    data-type=\"currency\"\r\n                    name=\"cardType\"\r\n                    id=\"cardType\"\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                  ></Input>\r\n                  \r\n                  {/* <NumberFormat thousandSeparator={true} prefix={'IDR '} \r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                  />  */}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"cardType\">Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"cardType\"\r\n                    id=\"cardType\"\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option>Select Type</option>\r\n                    <option>Payables</option>\r\n                    <option>Receivables</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"cardType\">Due Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"cardType\"\r\n                    id=\"cardType\"\r\n                    onChange={(e) => setDueDate(e.target.value)}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <FormGroup>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n              >\r\n                <strong>Add Debt</strong>\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default Debt;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js",["161"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js",["162","163","164","165","166","167"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["168"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["169","170","171","172","173","174","175","176","177","178"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",["179"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Loading.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["180","181"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["182"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["183"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { X } from \"react-feather\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"./Profile.css\";\r\nimport {Element} from \"react-scroll\"\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n          <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"500px\",\r\n                overflow: \"scroll\",\r\n                \r\n              }}\r\n            >\r\n            <thead\r\n              className=\"text-center\"\r\n              style={{ backgroundColor: \"#BA8FF2\" }}\r\n            >\r\n              <tr>\r\n                <th style={{ width: \"30%\" }}>Date</th>\r\n                <th>Transaction</th>\r\n                \r\n                <th>Costs</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            {results.length !== 0 ? (\r\n              results.map((result) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"text-center\"><Moment format=\"D MMM YYYY\" >{result.purchaseDate}</Moment></td>\r\n                    <td className=\"text-center\" style={{ width: \"50%\" }}>{result.title}</td>\r\n                    \r\n                    <td className=\"text-center\"><NumberFormat value={result.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></td>\r\n                    <td style={{ width: \"100%\" }} className=\"text-center\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          if (\r\n                            window.confirm(\r\n                              `Expense record of \"${result.title}\" is going to be deleted. Please click OK to confirm.`\r\n                            )\r\n                          )\r\n                            handleDelete(result.id);\r\n                        }}\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        <X size={15} />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                \r\n              ))\r\n            \r\n              )  : (\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan=\"6\">\r\n                    <Container>\r\n                      <p style={{ opacity: \"60%\" }}>\r\n                        <i>\r\n                          <strong>No expense found.</strong>\r\n                        </i>\r\n                      </p>\r\n                      <Col className=\"subs3\">\r\n                        <img\r\n                          src={expense}\r\n                          alt=\"\"\r\n                          style={{\r\n                            width: \"40%\",\r\n                            opacity: \"0%\",\r\n                            position: \"center\",\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Container>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n            </Element>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["184"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n// import Loading from './Loading'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport visa from \"../assets/visa.png\";\r\nimport master from \"../assets/mastercard.png\";\r\nimport \"./Profile.css\";\r\nimport expense from \"../assets/expense.png\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`${urlCard}?cardNumber=${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n        // setLoading(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong><NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Master\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Visa\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom:\"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Container>\r\n            <p style={{ opacity: \"60%\" }}>\r\n              <i>\r\n                <strong>No card found. Please add card first.</strong>\r\n              </i>\r\n            </p>\r\n            <Col className=\"subs4\">\r\n              <img\r\n                src={expense}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n          // <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js",["185","186","187","188","189","190","191","192","193"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { X } from \"react-feather\";\r\nimport \"./Profile.css\";\r\nimport debtPic from \"../assets/debt2.png\";\r\nimport { Element } from \"react-scroll\";\r\nimport Moment from \"react-moment\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst ShowDebt = () => {\r\n  const [debt, setDebt] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n\r\n  const url = \"https://binar8-jul-hendri.nandaworks.com/debts/notes\";\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(url, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setDebt(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(` https://binar8-jul-hendri.nandaworks.com/debts/delete?id=${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (id) => {\r\n    const data = {\r\n      name: name,\r\n      description: description,\r\n      amount: amount,\r\n      type: type,\r\n      dueDate: dueDate,\r\n    };\r\n\r\n    axios\r\n      .patch(`https://binar8-jul-hendri.nandaworks.com/debts/update?id=${id}`, data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          <Row className=\"mb-0\" style={{paddingLeft:\"15px\"}}>\r\n          <p style={{ fontSize: \"10px\", marginRight:\"20px\" }}>\r\n            <i>* <b>Payables</b> : what you owed.</i>\r\n          </p>\r\n          <p style={{ fontSize: \"10px\" }}>\r\n            <i>* <b>Receivables</b> : what others owed you.</i>\r\n          </p>\r\n          </Row>\r\n          <Table hover style={{ backgroundColor: \"whitesmoke\", width: \"100%\" }} className=\"mt-0\">\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"500px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <thead\r\n                className=\"text-center\"\r\n                style={{ backgroundColor: \"#BA8FF2\", width: \"100%\" }}\r\n              >\r\n                <tr>\r\n                  <th>Due Date</th>\r\n                  <th>Name</th>\r\n                  <th style={{ width: \"25%\" }}>Descriptions</th>\r\n                  <th>Type</th>\r\n                  <th>Cost</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              {debt.length !== 0 ? (\r\n                debt.map((debts) => (\r\n                  <tbody style={{ justifyContent: \"center\" }}>\r\n                    <tr className=\"text-center\">\r\n                      <td style={{ paddingTop: \"16px\" }}>\r\n                        {\" \"}\r\n                        <Moment format=\"D MMM YYYY\">{debts.dueDate}</Moment>\r\n                      </td>\r\n                      <td style={{ paddingTop: \"16px\" }}>{debts.name}</td>\r\n                      <td style={{ paddingTop: \"16px\" }}>\r\n                        {debts.description}\r\n                      </td>\r\n                      <td style={{ paddingTop: \"16px\" }}>{debts.type}</td>\r\n                      <td style={{ paddingTop: \"16px\" }}><NumberFormat value={debts.amount} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></td>\r\n                      <td>\r\n                        <Row style={{ justifyContent: \"center\" }}>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              if (\r\n                                window.confirm(\r\n                                  `Debt record of \"${debts.name} - ${debts.description}\" is about to be deleted. Please click OK to confirm.`\r\n                                )\r\n                              )\r\n                                handleDelete(debts.id);\r\n                            }}\r\n                            color=\"danger\"\r\n                            outline\r\n                          >\r\n                            <X size={15} />\r\n                          </Button>\r\n                        </Row>\r\n                      </td>\r\n                    </tr>\r\n                    {/* <tr>\r\n                      <td colSpan=\"7\">\r\n                        <p style={{ fontSize: \"10px\" }}>\r\n                          <i>* Payables : what you owed.</i>\r\n                        </p>\r\n                        <p style={{ fontSize: \"10px\" }}>\r\n                          <i>* Receivables : what others owed you.</i>\r\n                        </p>\r\n                      </td>\r\n                    </tr> */}\r\n                  </tbody>\r\n                ))\r\n              ) : (\r\n                <tbody>\r\n                  <tr>\r\n                    <td colSpan=\"7\">\r\n                      <Container>\r\n                        <p style={{ opacity: \"60%\" }}>\r\n                          <i>\r\n                            <strong>No record found.</strong>\r\n                          </i>\r\n                        </p>\r\n                        <Col className=\"subs5\">\r\n                          <img\r\n                            src={debtPic}\r\n                            alt=\"\"\r\n                            style={{\r\n                              width: \"70%\",\r\n                              opacity: \"0%\",\r\n                              position: \"center\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                      </Container>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </Element>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default ShowDebt;\r\n",{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":15},{"ruleId":"198","severity":1,"message":"202","line":15,"column":10,"nodeType":"200","messageId":"201","endLine":15,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":8,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":54,"column":69,"nodeType":"209","messageId":"210","endLine":54,"endColumn":71},{"ruleId":"207","severity":1,"message":"208","line":108,"column":41,"nodeType":"209","messageId":"210","endLine":108,"endColumn":43},{"ruleId":"194","replacedBy":"211"},{"ruleId":"196","replacedBy":"212"},{"ruleId":"198","severity":1,"message":"213","line":10,"column":3,"nodeType":"200","messageId":"201","endLine":10,"endColumn":11},{"ruleId":"198","severity":1,"message":"214","line":12,"column":3,"nodeType":"200","messageId":"201","endLine":12,"endColumn":8},{"ruleId":"198","severity":1,"message":"215","line":13,"column":3,"nodeType":"200","messageId":"201","endLine":13,"endColumn":14},{"ruleId":"198","severity":1,"message":"216","line":15,"column":3,"nodeType":"200","messageId":"201","endLine":15,"endColumn":12},{"ruleId":"198","severity":1,"message":"217","line":18,"column":10,"nodeType":"200","messageId":"201","endLine":18,"endColumn":14},{"ruleId":"198","severity":1,"message":"218","line":21,"column":10,"nodeType":"200","messageId":"201","endLine":21,"endColumn":20},{"ruleId":"198","severity":1,"message":"219","line":25,"column":8,"nodeType":"200","messageId":"201","endLine":25,"endColumn":15},{"ruleId":"198","severity":1,"message":"220","line":47,"column":10,"nodeType":"200","messageId":"201","endLine":47,"endColumn":19},{"ruleId":"198","severity":1,"message":"221","line":49,"column":9,"nodeType":"200","messageId":"201","endLine":49,"endColumn":17},{"ruleId":"198","severity":1,"message":"222","line":51,"column":10,"nodeType":"200","messageId":"201","endLine":51,"endColumn":21},{"ruleId":"198","severity":1,"message":"223","line":51,"column":23,"nodeType":"200","messageId":"201","endLine":51,"endColumn":37},{"ruleId":"198","severity":1,"message":"224","line":54,"column":10,"nodeType":"200","messageId":"201","endLine":54,"endColumn":19},{"ruleId":"198","severity":1,"message":"225","line":54,"column":21,"nodeType":"200","messageId":"201","endLine":54,"endColumn":33},{"ruleId":"198","severity":1,"message":"226","line":55,"column":10,"nodeType":"200","messageId":"201","endLine":55,"endColumn":19},{"ruleId":"198","severity":1,"message":"227","line":55,"column":21,"nodeType":"200","messageId":"201","endLine":55,"endColumn":33},{"ruleId":"198","severity":1,"message":"228","line":56,"column":17,"nodeType":"200","messageId":"201","endLine":56,"endColumn":25},{"ruleId":"198","severity":1,"message":"229","line":57,"column":18,"nodeType":"200","messageId":"201","endLine":57,"endColumn":27},{"ruleId":"198","severity":1,"message":"230","line":68,"column":9,"nodeType":"200","messageId":"201","endLine":68,"endColumn":15},{"ruleId":"203","severity":1,"message":"231","line":110,"column":6,"nodeType":"205","endLine":110,"endColumn":8,"suggestions":"232"},{"ruleId":"198","severity":1,"message":"233","line":8,"column":3,"nodeType":"200","messageId":"201","endLine":8,"endColumn":11},{"ruleId":"198","severity":1,"message":"234","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":12},{"ruleId":"198","severity":1,"message":"235","line":10,"column":3,"nodeType":"200","messageId":"201","endLine":10,"endColumn":9},{"ruleId":"198","severity":1,"message":"217","line":23,"column":10,"nodeType":"200","messageId":"201","endLine":23,"endColumn":14},{"ruleId":"198","severity":1,"message":"236","line":33,"column":8,"nodeType":"200","messageId":"201","endLine":33,"endColumn":11},{"ruleId":"237","severity":1,"message":"238","line":243,"column":25,"nodeType":"239","endLine":243,"endColumn":74},{"ruleId":"237","severity":1,"message":"238","line":271,"column":25,"nodeType":"239","endLine":271,"endColumn":72},{"ruleId":"237","severity":1,"message":"238","line":300,"column":25,"nodeType":"239","endLine":300,"endColumn":75},{"ruleId":"237","severity":1,"message":"238","line":329,"column":25,"nodeType":"239","endLine":329,"endColumn":72},{"ruleId":"198","severity":1,"message":"235","line":3,"column":3,"nodeType":"200","messageId":"201","endLine":3,"endColumn":9},{"ruleId":"198","severity":1,"message":"215","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"240","line":8,"column":3,"nodeType":"200","messageId":"201","endLine":8,"endColumn":14},{"ruleId":"198","severity":1,"message":"241","line":10,"column":10,"nodeType":"200","messageId":"201","endLine":10,"endColumn":16},{"ruleId":"198","severity":1,"message":"242","line":10,"column":18,"nodeType":"200","messageId":"201","endLine":10,"endColumn":23},{"ruleId":"198","severity":1,"message":"243","line":15,"column":11,"nodeType":"200","messageId":"201","endLine":15,"endColumn":20},{"ruleId":"198","severity":1,"message":"244","line":12,"column":3,"nodeType":"200","messageId":"201","endLine":12,"endColumn":8},{"ruleId":"198","severity":1,"message":"245","line":15,"column":8,"nodeType":"200","messageId":"201","endLine":15,"endColumn":13},{"ruleId":"198","severity":1,"message":"246","line":16,"column":8,"nodeType":"200","messageId":"201","endLine":16,"endColumn":17},{"ruleId":"198","severity":1,"message":"247","line":27,"column":10,"nodeType":"200","messageId":"201","endLine":27,"endColumn":20},{"ruleId":"198","severity":1,"message":"248","line":29,"column":9,"nodeType":"200","messageId":"201","endLine":29,"endColumn":16},{"ruleId":"198","severity":1,"message":"249","line":45,"column":10,"nodeType":"200","messageId":"201","endLine":45,"endColumn":14},{"ruleId":"198","severity":1,"message":"250","line":46,"column":10,"nodeType":"200","messageId":"201","endLine":46,"endColumn":17},{"ruleId":"198","severity":1,"message":"251","line":47,"column":10,"nodeType":"200","messageId":"201","endLine":47,"endColumn":22},{"ruleId":"198","severity":1,"message":"252","line":85,"column":9,"nodeType":"200","messageId":"201","endLine":85,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":90,"column":28,"nodeType":"255","messageId":"256","endLine":90,"endColumn":29,"suggestions":"257"},{"ruleId":"203","severity":1,"message":"258","line":43,"column":6,"nodeType":"205","endLine":43,"endColumn":8,"suggestions":"259"},{"ruleId":"198","severity":1,"message":"260","line":17,"column":8,"nodeType":"200","messageId":"201","endLine":17,"endColumn":20},{"ruleId":"203","severity":1,"message":"258","line":39,"column":6,"nodeType":"205","endLine":39,"endColumn":8,"suggestions":"261"},{"ruleId":"198","severity":1,"message":"235","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":9},{"ruleId":"198","severity":1,"message":"262","line":11,"column":3,"nodeType":"200","messageId":"201","endLine":11,"endColumn":6},{"ruleId":"198","severity":1,"message":"263","line":18,"column":10,"nodeType":"200","messageId":"201","endLine":18,"endColumn":14},{"ruleId":"198","severity":1,"message":"264","line":18,"column":16,"nodeType":"200","messageId":"201","endLine":18,"endColumn":23},{"ruleId":"198","severity":1,"message":"202","line":19,"column":10,"nodeType":"200","messageId":"201","endLine":19,"endColumn":17},{"ruleId":"203","severity":1,"message":"258","line":36,"column":6,"nodeType":"205","endLine":36,"endColumn":8,"suggestions":"265"},{"ruleId":"203","severity":1,"message":"258","line":41,"column":6,"nodeType":"205","endLine":41,"endColumn":8,"suggestions":"266"},{"ruleId":"198","severity":1,"message":"267","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":16},{"ruleId":"198","severity":1,"message":"262","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":6},{"ruleId":"198","severity":1,"message":"245","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":13},{"ruleId":"198","severity":1,"message":"268","line":16,"column":8,"nodeType":"200","messageId":"201","endLine":16,"endColumn":14},{"ruleId":"198","severity":1,"message":"269","line":18,"column":8,"nodeType":"200","messageId":"201","endLine":18,"endColumn":11},{"ruleId":"198","severity":1,"message":"270","line":19,"column":8,"nodeType":"200","messageId":"201","endLine":19,"endColumn":13},{"ruleId":"198","severity":1,"message":"271","line":23,"column":8,"nodeType":"200","messageId":"201","endLine":23,"endColumn":21},{"ruleId":"198","severity":1,"message":"236","line":26,"column":8,"nodeType":"200","messageId":"201","endLine":26,"endColumn":11},{"ruleId":"198","severity":1,"message":"230","line":31,"column":9,"nodeType":"200","messageId":"201","endLine":31,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":41,"column":15,"nodeType":"239","endLine":41,"endColumn":34},{"ruleId":"272","severity":1,"message":"273","line":11,"column":5,"nodeType":"274","messageId":"275","endLine":11,"endColumn":17},{"ruleId":"198","severity":1,"message":"235","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":20,"column":9,"nodeType":"239","endLine":20,"endColumn":70},{"ruleId":"237","severity":1,"message":"238","line":18,"column":8,"nodeType":"239","endLine":18,"endColumn":27},{"ruleId":"203","severity":1,"message":"258","line":32,"column":6,"nodeType":"205","endLine":32,"endColumn":8,"suggestions":"276"},{"ruleId":"203","severity":1,"message":"258","line":55,"column":6,"nodeType":"205","endLine":55,"endColumn":8,"suggestions":"277"},{"ruleId":"198","severity":1,"message":"278","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":20},{"ruleId":"198","severity":1,"message":"279","line":21,"column":16,"nodeType":"200","messageId":"201","endLine":21,"endColumn":23},{"ruleId":"198","severity":1,"message":"280","line":22,"column":23,"nodeType":"200","messageId":"201","endLine":22,"endColumn":37},{"ruleId":"198","severity":1,"message":"281","line":23,"column":18,"nodeType":"200","messageId":"201","endLine":23,"endColumn":27},{"ruleId":"198","severity":1,"message":"282","line":24,"column":16,"nodeType":"200","messageId":"201","endLine":24,"endColumn":23},{"ruleId":"198","severity":1,"message":"283","line":25,"column":19,"nodeType":"200","messageId":"201","endLine":25,"endColumn":29},{"ruleId":"203","severity":1,"message":"258","line":40,"column":6,"nodeType":"205","endLine":40,"endColumn":8,"suggestions":"284"},{"ruleId":"198","severity":1,"message":"285","line":53,"column":9,"nodeType":"200","messageId":"201","endLine":53,"endColumn":21},{"ruleId":"198","severity":1,"message":"230","line":78,"column":9,"nodeType":"200","messageId":"201","endLine":78,"endColumn":15},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.","ArrayExpression",["288"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["286"],["287"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["289"],"'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Button' is defined but never used.","'AOS' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'Alert' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'btnTitle1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["290","291"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["292"],"'NumberFormat' is defined but never used.",["293"],"'Row' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.",["294"],["295"],"'NavbarToggler' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["296"],["297"],"'useHistory' is defined but never used.","'setName' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setType' is assigned a value but never used.","'setDueDate' is assigned a value but never used.",["298"],"'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"messageId":"303","fix":"304","desc":"305"},{"messageId":"306","fix":"307","desc":"308"},{"desc":"309","fix":"310"},{"desc":"309","fix":"311"},{"desc":"309","fix":"312"},{"desc":"309","fix":"313"},{"desc":"309","fix":"314"},{"desc":"309","fix":"315"},{"desc":"309","fix":"316"},"Update the dependencies array to be: [token, upComing]",{"range":"317","text":"318"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"319","text":"320"},"removeEscape",{"range":"321","text":"322"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"323","text":"324"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [token]",{"range":"325","text":"326"},{"range":"327","text":"326"},{"range":"328","text":"326"},{"range":"329","text":"326"},{"range":"330","text":"326"},{"range":"331","text":"326"},{"range":"332","text":"326"},[1581,1583],"[token, upComing]",[3262,3264],"[dataMonth, dataWeek, token]",[2541,2542],"",[2541,2541],"\\",[1047,1049],"[token]",[868,870],[906,908],[942,944],[905,907],[1320,1322],[1154,1156]]