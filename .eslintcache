[{"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js":"1","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js":"2","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js":"3","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js":"4","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js":"5","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js":"6","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js":"7","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js":"8","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js":"9","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js":"10","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/UploadImg.js":"11","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js":"12","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js":"13","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js":"14","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js":"15","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js":"16","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js":"17","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js":"18","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js":"19","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js":"20","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditDebt.js":"21","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js":"22","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js":"23","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js":"24","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js":"25","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js":"26","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js":"27","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js":"28"},{"size":546,"mtime":1606980992273,"results":"29","hashOfConfig":"30"},{"size":973,"mtime":1608043004511,"results":"31","hashOfConfig":"30"},{"size":2479,"mtime":1608993729317,"results":"32","hashOfConfig":"30"},{"size":2283,"mtime":1608814552066,"results":"33","hashOfConfig":"30"},{"size":6352,"mtime":1608995700533,"results":"34","hashOfConfig":"30"},{"size":330,"mtime":1608800505957,"results":"35","hashOfConfig":"30"},{"size":2489,"mtime":1608996199937,"results":"36","hashOfConfig":"30"},{"size":13839,"mtime":1609025050351,"results":"37","hashOfConfig":"30"},{"size":14598,"mtime":1608996199937,"results":"38","hashOfConfig":"30"},{"size":12660,"mtime":1608881644771,"results":"39","hashOfConfig":"30"},{"size":1487,"mtime":1608992766379,"results":"40","hashOfConfig":"30"},{"size":3013,"mtime":1608627919484,"results":"41","hashOfConfig":"30"},{"size":3740,"mtime":1608368708068,"results":"42","hashOfConfig":"30"},{"size":337,"mtime":1608292718087,"results":"43","hashOfConfig":"30"},{"size":1255,"mtime":1607076230330,"results":"44","hashOfConfig":"30"},{"size":189,"mtime":1607226668760,"results":"45","hashOfConfig":"30"},{"size":1518,"mtime":1608994812597,"results":"46","hashOfConfig":"30"},{"size":1992,"mtime":1607230205571,"results":"47","hashOfConfig":"30"},{"size":2355,"mtime":1609025117555,"results":"48","hashOfConfig":"30"},{"size":8738,"mtime":1608920394389,"results":"49","hashOfConfig":"30"},{"size":5008,"mtime":1608973618205,"results":"50","hashOfConfig":"30"},{"size":5462,"mtime":1608996199933,"results":"51","hashOfConfig":"30"},{"size":4831,"mtime":1609026021990,"results":"52","hashOfConfig":"30"},{"size":4703,"mtime":1608996199933,"results":"53","hashOfConfig":"30"},{"size":13733,"mtime":1608996199937,"results":"54","hashOfConfig":"30"},{"size":3839,"mtime":1608960084286,"results":"55","hashOfConfig":"30"},{"size":5388,"mtime":1608627919480,"results":"56","hashOfConfig":"30"},{"size":6327,"mtime":1608627919476,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1h8k743",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js",[],["132","133"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js",["134","135","136"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport \"./Profile.css\";\nimport { User, Mail } from \"react-feather\";\nimport Edit from \"./EditProfile\";\nimport TabProfile from \"./TabProfile\";\nimport FileUpload from \"./UploadImg\";\n\nconst Profile = () => {\n  const [users, setUsers] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    axios\n      .get(` https://binar8-jul-hendri.nandaworks.com/auth/user/`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setUsers(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Container className=\"profile\">\n      <Row>\n        <Col xl=\"4\" sm=\"12\">\n          <Card id=\"profilecard\">\n            {users.length !== 0\n              ? users.map((user) => (\n                  <CardBody key={user.id} className=\"cardBody\">\n                    <Row>\n                      <Container>\n                        <CardImg\n                          top\n                          src={user.photo}\n                          at=\"\"\n                          className=\"imgProfile\"\n                        />\n                        <FileUpload />\n                        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n                      </Container>\n                    </Row>\n                    <CardTitle>\n                      <Container style={{textAlign:\"center\"}}>\n                        <h5>\n                          <b>{user.fullName}</b>\n                        </h5>\n                        <p>\n                          <strong>{user.email}</strong>\n                        </p>\n                      </Container>\n                      <Container style={{textAlign:\"center\"}}>\n                      </Container>\n                    </CardTitle>\n                    <Row className=\"rowright\">\n                      <Container>\n                        <Edit />\n                      </Container>\n                    </Row>\n                  </CardBody>\n                ))\n              : \"\"}\n          </Card>\n        </Col>\n        <Col xl=\"8\" sm=\"12\">\n          <TabProfile />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js",["137","138","139","140"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { Container, Col, Row, Table } from \"reactstrap\";\nimport { Facebook, Twitter, Instagram, Linkedin } from \"react-feather\";\nimport gplay from \"../pages/img/googleplay.png\";\nimport appstore from \"../pages/img/appstore1.png\";\nimport crest from \"../assets/logo-subsit.png\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container >\n        <Container fluid style={{paddingTop:\"30px\"}}>\n          {/* <Row md=\"6\" sm=\"12\" style={{ padding: \"1%\", marginTop: \"1%\" }}>\n            <img src={crest} alt=\"\" style={{ width: \"10%\" }} />\n          </Row> */}\n          <Row>\n              <Container className=\"icons\" style={{ textAlign: \"center\" }}>\n                <Facebook\n                  size={45}\n                  style={{\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n                <Twitter\n                  size={45}\n                  style={{\n                    marginRight: \"2%\",\n                    marginLeft: \"2%\",\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n                <Instagram\n                  size={45}\n                  style={{\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n              </Container>\n          </Row>\n          <Row>\n              <Container style={{ textAlign: \"center\" }}>\n              <Container>\n                  <p><b>Terms of use | Privacy Policy</b></p>\n              </Container>\n              <img className=\"store\" src={gplay} alt=\"\"/>\n              <img className=\"store\" src={appstore} alt=\"\"/>\n              </Container>\n          </Row>\n          <b>\n            <p className=\"footerTable\">\n              Copyright &copy; 2020 SubsItId.herokuapp.com\n            </p>\n          </b>\n        </Container>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js",["141","142","143","144","145","146","147"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Card, Row, Col } from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Loading from \"./Loading\";\nimport sleep from \"../assets/sleep.png\";\n\nconst CalendarEvent = () => {\n  const [upComing, setUpComing] = useState([]);\n  const [month, setMonth] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [checkSubs, setCheckSubs] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setLoading(true);\n    axios\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res.data.map((e) => e.dueDate));\n        setUpComing(\n          ...upComing,\n          res.data.map((e) => ({\n            title: e.service.name,\n            date: e.dueDate.substr(0, 10),\n          }))\n        );\n        setLoading(false);\n      });\n\n    axios\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCheckSubs(res.data);\n      });\n  }, []);\n\n  let checkComingMonth = upComing.filter((e) => e.date.substr(5, 2) == month);\n  // console.log(\"cek coming month\" , checkComingMonth)\n  checkComingMonth.sort((a, b) => {\n    if (a.date < b.date) return -1;\n    return a.date > b.date ? 1 : 0;\n  });\n\n  return (\n    <Container>\n      {checkSubs.length !== 0 ? (\n        // <Container className=\"mb-5 mt-5\">\n        // {/* {loading && <Loading/>} */}\n        // </Container>\n        // {!loading && (\n        <Container>\n          <Row>\n            <Col sm=\"8\">\n              <Card style={{ padding: \"20px\" }}>\n                <FullCalendar\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                  datesSet={(arg) => {\n                    console.log(arg);\n                    console.log(arg.view.currentStart.toISOString()); //starting visible date\n                    console.log(arg.view.currentEnd.toISOString()); //ending visible date\n                    setMonth(arg.view.currentEnd.toISOString().substr(5, 2));\n                  }}\n                  initialView=\"dayGridMonth\"\n                  // height =\"100%\"\n                  events={upComing}\n                  // events={[\n                  // { title: \"event 1\", date: \"2020-12-06\" },\n                  // { title: \"event 2\", date: \"2020-12-12\" },\n                  //  ]}\n                />\n              </Card>\n            </Col>\n            <Col sm=\"4\">\n              <Card\n                style={{\n                  padding: \"20px\",\n                  minHeight: \"605px\",\n                  marginBottom: \"50px\",\n                }}\n              >\n                <h4\n                  style={{\n                    color: \"#222222\",\n                  }}\n                  className=\"text-center\"\n                >\n                  <strong>Events</strong>\n                </h4>\n                <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n                {checkComingMonth === undefined ||\n                checkComingMonth.length == 0 ? (\n                  <h5 className=\"text-center my-5\">\n                    <strong>\n                      <i>No event found in this month.</i>\n                    </strong>\n                  </h5>\n                ) : (\n                  checkComingMonth.map((x) => (\n                    <p className=\"text-left\" style={{ marginBottom: \"20px\" }}>\n                      <b>{x.title}</b> service will be due on the{\" \"}\n                      <b>{x.date.substr(8, 2)}</b>th of this month.\n                    </p>\n                  ))\n                )}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{marginTop:\"15px\"}}>\n        <Row>\n          <Col sm=\"8\">\n            <Card style={{ padding: \"20px\" }}>\n              <FullCalendar\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                // datesSet={(arg) => {\n                //   console.log(arg);\n                //   console.log(arg.view.currentStart.toISOString()); //starting visible date\n                //   console.log(arg.view.currentEnd.toISOString()); //ending visible date\n                //   setMonth(arg.view.currentEnd.toISOString().substr(5, 2));\n                // }}\n                initialView=\"dayGridMonth\"\n                // height =\"100%\"\n                // events={upComing}\n                // events={[\n                // { title: \"event 1\", date: \"2020-12-06\" },\n                // { title: \"event 2\", date: \"2020-12-12\" },\n                //  ]}\n              />\n            </Card>\n          </Col>\n          <Col sm=\"4\">\n            <Card\n              style={{\n                padding: \"20px\",\n                minHeight: \"590px\",\n                marginBottom: \"50px\",\n              }}\n            >\n              <h4\n                style={{\n                  color: \"#222222\",\n                }}\n                className=\"text-center\"\n              >\n                <strong>Events</strong>\n              </h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n              {checkComingMonth === undefined ||\n              checkComingMonth.length == 0 ? (\n                <h5 className=\"text-center my-5\">\n                  <strong>\n                    <i>No event found in this month.</i>\n                  </strong>\n                </h5>\n              ) : (\n                checkComingMonth.map((x) => (\n                  <p className=\"text-left\" style={{ marginBottom: \"20px\" }}>\n                    <b>{x.title}</b> service will be due on the{\" \"}\n                    <b>{x.date.substr(8, 2)}</b>th of this month.\n                  </p>\n                ))\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default CalendarEvent;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js",["148"],"import Cookies from \"js-cookie\";\nimport { useHistory } from 'react-router-dom';\n\nconst Logout = () => {\n    let history = useHistory();\n    Cookies.remove('token');\n    Cookies.remove('username');\n    Cookies.remove('status');\n    history.push('/');\n    return window.location.reload();\n    return null;\n\n}\n\nexport default Logout;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js",["149","150","151","152","153","154","155","156","157","158"],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Row,\n  Button\n} from \"reactstrap\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport subsit from \"./img/SubsIt..svg\";\nimport \"./TopMenu.css\";\nimport Modals from \"./Modalender\";\nimport { Link} from \"react-router-dom\";\nimport app from \"./img/app.svg\";\nimport chart from \"./img/Group 11.svg\";\nimport { checkLogin } from \"../Helper\";\nimport ProfMenu from \"./ProfMenu\";\nimport { Calendar, PieChart } from 'react-feather';\nimport CalendarEvent from \"../components/Calendar\";\nimport Bells from \"./Bells\";\nimport AOS from 'aos';\n\nconst TopMenu = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const featureBox1 = [\n    \"Sign Up\"\n  ];\n\n  return (\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\n      <Navbar expand=\"sm\" style={{backgroundColor:\"#fefefe\", height:\"100px\"}}>\n      <NavbarBrand className=\"lognav\">\n            <Link to=\"/dashboard\">\n              <img src={subsit} ></img>\n            </Link>\n            </NavbarBrand>\n        \n        <Nav className=\"ml-auto\" navbar>\n          <Collapse isOpen={isOpen} navbar></Collapse>\n          {!checkLogin() && (\n            <div className=\"body\">\n              <ul id=\"Menu\">\n                <li>\n                <a href=\"#about\"><Button id=\"transparant\" >About</Button></a>\n                </li>\n                <li>\n                <a href=\"#service\"><Button id=\"transparant\"> Service </Button></a>\n                </li>\n                <li>\n                <Signup \n                  btnTitle={featureBox1}\n                />\n                </li>\n              </ul>\n            </div>\n          )}\n          {checkLogin() && (\n            <div>\n              <ul id=\"Menu\" className=\"liquid1\">\n                <li>\n                  <Link to=\"/history\">\n                    <PieChart style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/Calendar\">\n                    <Calendar style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Bells />\n                </li>\n                <li>\n                  <ProfMenu/>\n                </li>\n              </ul>\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default TopMenu;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button,\n  Modal,\n  ModalHeader,\n  Collapse,\n  ModalBody,\n} from \"reactstrap\";\nimport { Element } from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from \"@reactchartjs/react-chart.js\";\nimport axios from \"axios\";\nimport { checkLogin } from \"../Helper\";\nimport Cookies from \"js-cookie\";\nimport empty from \"../assets/empty.png\";\nimport glass from \"../assets/glass.png\";\nimport expense from \"../assets/expense.png\";\nimport \"../components/Profile.css\";\nimport Moment from \"react-moment\";\nimport NumberFormat from 'react-number-format';\nimport Swal from \"sweetalert2\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst History = () => {\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = Cookies.get(\"token\");\n  const fullName = Cookies.get(\"fullName\");\n  const [expense, setExpense] = useState([]);\n  const [subscribeId, setSubscribeId] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [chartWeek, setChartWeek] = useState({});\n  const [weekMonth, setWeekMonth] = useState([]);\n  const [totalWeek, setTotalWeek] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [totals, setTotals] = useState([]);\n  const [totalHistory, setTotalHistory] = useState([]);\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\n  const urlWeek = \"https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\n\n  const urlHistory = \"https://binar8-jul-hendri.nandaworks.com/subscription\";\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\n  const urlTotalHistory = \"https://binar8-jul-hendri.nandaworks.com/history\";\n\n  const toggle = () => setModal(!modal);\n  const collapse = () => {\n    setIsOpen(true);\n    setIsOpenWeek(false);\n  };\n  const collapseWeek = () => {\n    setIsOpenWeek(true);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setIsLoading(true);\n    axios\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        setHistory(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        setExpense(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n    dataMonth();\n    dataWeek();\n\n    axios\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(\"totalhistory\" ,res.data);\n        setTotalHistory(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const dataMonth = () => {\n    let month = [];\n    let pay = [];\n    axios\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          month.push(dataObj.dates);\n          pay.push(dataObj.totals);\n        }\n        setChartData({\n          labels: month,\n          datasets: [\n            {\n              label: \"# Month\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const dataWeek = () => {\n    let week = [];\n    let pay = [];\n    axios\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res);\n        for (const dataObj of res.data) {\n          week.push(dataObj.weekMonth);\n          pay.push(dataObj.totals);\n        }\n        setChartWeek({\n          labels: week,\n          datasets: [\n            {\n              label: \"# Week\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(dates, totals);\n  };\n\n  const handleRemove = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You are about to unsubscribe this service.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, I'm sure.\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const url = ` https://binar8-jul-hendri.nandaworks.com/subscription/${id}/`;\n        axios\n          .delete(url, { headers: { Authorization: `Bearer ${token}` } })\n          .then((res) => {\n            console.log(res.data);\n            return window.location.reload();\n          })\n          .catch((err) => console.log(err));    \n        Swal.fire(\"Done!\", \"You've been unsubscribed from this service.\", \"success\");\n      }\n    });\n\n  };\n\n  return (\n    <Container fluid className=\"content\">\n      <Container>\n        <Row>\n          <Col xs=\"8\">\n            <Container>\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n                <Col xs=\"12\" className=\"bg-default\">\n                  <Row>\n                    <Col xs=\"6\">\n                      <h4>Spending Value</h4>\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n                    </Col>\n                    <Col xs=\"6\">\n                      <div style={{ float: \"right\", position: \"relative\" }}>\n                        <Button\n                          id=\"button\"\n                          onClick={collapse}\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\n                        >\n                          Month\n                        </Button>\n                        <Button\n                          id=\"button\"\n                          onClick={collapseWeek}\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\n                        >\n                          Week\n                        </Button>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs=\"12\">\n                  <Collapse isOpen={isOpen}>\n                    <Line data={chartData} options={options} />\n                  </Collapse>\n                  <Collapse isOpen={isOpenWeek}>\n                    <Line data={chartWeek} options={options} />\n                  </Collapse>\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row className=\"ml-0 mt-3 mb-2\">\n                <h3>Your Subscriptions</h3>\n              </Row>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n            </Container>\n            <Container>\n              <Row>\n                {history.length !== 0 ? (\n                  history.map((history) => (\n                    <Col xs=\"4\" key={history.id}>\n                      <Card className=\"mb-4\">\n                        <CardImg\n                          top\n                          width=\"100%\"\n                          height=\"150px\"\n                          src={history.service.picture}\n                          alt=\"subscribtion\"\n                        />\n                        <CardBody className=\"bg-dangers\">\n                          <CardTitle\n                            tag=\"h6\"\n                            className=\"text-dark font-weight-bold text-center\"\n                          >\n                            <p><b>{history.service.name}</b></p>\n                          </CardTitle>\n                            <Button\n                              onClick={() => {\n                                handleRemove(history.serviceId);\n                              }}\n                              className=\"btn btn-primary btn-block\"\n                              id=\"button\"\n                            >\n                              <b>Unsubscribe</b>\n                            </Button>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  ))\n                ) : (\n                  <Container>\n                    <p style={{ opacity: \"60%\" }}>\n                      <i>\n                        <strong>You don't have any subscription.</strong>\n                      </i>\n                    </p>\n                    <Col className=\"subs\">\n                      <img\n                        src={glass}\n                        alt=\"\"\n                        style={{\n                          width: \"50%\",\n                          opacity: \"0%\",\n                          position: \"center\",\n                        }}\n                      />\n                    </Col>\n                  </Container>\n                )}\n              </Row>\n            </Container>\n          </Col>\n\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"10px\" }}>\n            <h4>History</h4>\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n            <Card\n              style={{\n                marginTop: \"20px\",\n                color: \"white\",\n                backgroundColor: \"#8F48EA\",\n                marginBottom: \"15px\",\n              }}\n            >\n              <Row style={{ marginBottom: \"20px\" }}>\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\n                  <CardTitle className=\"text-white\">\n                    <strong>Total :</strong>\n                  </CardTitle>\n                </Col>\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\n                  <h6 style={{ float: \"right\" }}>\n                    <strong><NumberFormat value={totalHistory.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/> </strong>\n                  </h6>\n                </Col>\n              </Row>\n            </Card>\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"1000px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <h4>Subscriptions</h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\", marginRight:\"5px\" }} />\n              {history.length !== 0 ? (\n                history.map((subscribtion, i) => (\n                  <Card\n                    key={i}\n                    style={{\n                      padding:\"3px\",\n                      marginTop: \"20px\",\n                      backgroundColor: \"#f6f9fc\",\n                      marginBottom: \"20px\",\n                      marginRight:\"5px\",\n                    }}\n                  >\n                    <Row>\n                      <Col xs=\"7\">\n                        <CardTitle className=\"text-dark font-weight\">\n                          <h6 style={{ paddingTop: \"15px\" }}>\n                            {subscribtion.repeat} : {subscribtion.service.name}{\" \"}\n                          </h6>\n                          <Moment format=\"D MMM YYYY\" >{subscribtion.startDate}</Moment>\n                        </CardTitle>\n                      </Col>\n                      <Col xs=\"5\">\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\n                        <NumberFormat value={subscribtion.service.cost} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/>\n                        </h6>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))\n              ) : (\n                <Container style={{ marginBottom: \"20px\" }}>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No subscription found.</strong>\n                    </i>\n                  </p>\n                  <Col className=\"subs2\">\n                    <img\n                      src={empty}\n                      alt=\"\"\n                      style={{\n                        width: \"50%\",\n                        opacity: \"0%\",\n                        position: \"center\",\n                      }}\n                    />\n                  </Col>\n                </Container>\n              )}\n              <h4>Expenses</h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\", marginRight:\"5px\" }} />\n              {expense.length !== 0 ? (\n                expense.map((expenses, i) => (\n                  <Card\n                    key={i}\n                    style={{\n                      marginTop: \"15px\",\n                      padding: \"5px\",\n                      backgroundColor: \"#f6f9fc\",\n                      marginRight:\"5px\",\n                    }}\n                  >\n                    <Row>\n                      <Col xs=\"6\" style={{ paddingTop: \"15px\" }}>\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight\">\n                          <h6>{expenses.title} </h6>\n                          <Moment format=\"D MMM YYYY\" >{expenses.purchaseDate}</Moment>\n                        </CardTitle>\n                      </Col>\n                      <Col xs=\"6\">\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\n                        <NumberFormat value={expenses.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/>  \n                        </h6>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))\n              ) : (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No expense found.</strong>\n                    </i>\n                  </p>\n                  <Col className=\"subs3\">\n                    <img\n                      src={empty}\n                      alt=\"\"\n                      style={{\n                        width: \"50%\",\n                        opacity: \"0%\",\n                        position: \"center\",\n                      }}\n                    />\n                  </Col>\n                </Container>\n              )}\n            </Element>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default History;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js",["197","198","199","200","201","202","203","204","205","206"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  Button,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Spinner,\n} from \"reactstrap\";\nimport subscribe from \"./img/subscribe.svg\";\nimport Signup from \"./Signup\";\nimport expense from \"./img/expense.svg\";\nimport budgetting from \"./img/budgetting.svg\";\nimport history from \"./img/history.svg\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAd,\n  faCoins,\n  faDigitalTachograph,\n  faClipboard,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport AOS from 'aos';\n\n\nconst Home = (props) => {\n\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\n  const [subscribes, setSubscribes] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    axios.get(urlSubscribe).then((res) => {\n      setSubscribes(res.data);\n      setLoading(false);\n    });\n  }, []);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n    \n  const btnTitle2= [\n    \"Try For Free\",\n  ]\n  const bgcolor=[\n    \"#8F48EA\",\n  ]\n  const color=[\n    \"white\",\n  ]\n\n  const signup = () => {\n    return <Signup/>\n  }\n\n  const addIcon = <FontAwesomeIcon icon={faAd} />;\n  const addCoins = <FontAwesomeIcon icon={faCoins} />;\n  const addDigital = <FontAwesomeIcon icon={faDigitalTachograph} />;\n  const addClipboard = <FontAwesomeIcon icon={faClipboard} />;\n\n  if (loading) {\n    return (\n      <div>\n        <Row className=\"justify-content-center mt-5\">\n          <Spinner type=\"grow\" color=\"warning\" />\n        </Row>\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\n          Loading...\n        </Row>\n      </div>\n    );\n  }\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"banner\">\n          <Col xs=\"5\">\n            <div className=\"logo\">\n              <h1>\n                <b>Stress Free</b>\n                {/* <a href=\"#about\">Stress Free</a> */}\n              </h1>\n              <h1>\n                <b>Subscription Manager</b>\n              </h1>\n              <Signup \n              btnTitle={btnTitle2}\n              backgroundColor={bgcolor}\n              color={color}\n              />\n            </div>\n          </Col>\n          <Col xs=\"7\">\n            <div className=\"logo-gambar\"></div>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid className=\"about\" id=\"about\" data-aos=\"fade-up\">\n        <h1 className=\"section-title\" id=\"#about\" style={{ color: \"#003764\" }}>\n          <b>About US</b>\n        </h1>\n        <div className=\"section-title-divider\"></div>\n\n        <div className=\"aboutIntro\">\n          <h3>\n            <span className=\"text-green\">Manage</span> your subscriptions\n            and expenses data with ease.\n            <br />\n            <br/>\n            You can easily keep a pulse on your subscription and expense in one\n            platform from anywhere.\n          </h3>\n        </div>\n      </Container>\n      <Container fluid className=\"content\">\n        <section id=\"features\" className=\"features\">\n          <Container>\n            <Nav>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"1\" })}\n                      onClick={() => {\n                        toggle(\"1\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>Subscribe</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addIcon}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"2\" })}\n                      onClick={() => {\n                        toggle(\"2\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>Expense</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addCoins}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"3\" })}\n                      onClick={() => {\n                        toggle(\"3\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>Debts</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addDigital}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"4\" })}\n                      onClick={() => {\n                        toggle(\"4\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>History</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addClipboard}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n            </Nav>\n\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>\n                              Easily create a subscription website\n                            </strong>\n                          </h3>\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            Simply put in the items you wish to purchase on\n                            subscription, and the website builder will generate\n                            a subscription website for you right away. Join a\n                            member and create your own management subscription\n                            service you want to make.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={subscribe} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"2\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>Control your own expense</strong>\n                          </h3>\n\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            Our expense feature will help you monitoring,\n                            tracking and most importantly managing your\n                            expenses. Just remember to input your expense data\n                            whenever you make them.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={expense} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"3\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>\n                              Trackdown your debts activities easily\n                            </strong>\n                          </h3>\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            Don't want to lose track on your debts records? Just\n                            keep them in our easy-to-use debt's note feature.\n                            You can instantly edit or delete your record once\n                            you are finish with it.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={budgetting} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"4\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>\n                              Real-time reporting on your expenses and\n                              subscriptions\n                            </strong>\n                          </h3>\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            With full visibility of all business expenditure and\n                            powerful reporting features at your disposal, SubsIt\n                            empowers you to make smarter financial decisions.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={history} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n            </TabContent>\n          </Container>\n        </section>\n      </Container>\n      <Container fluid className=\"popular\">\n        <Container id=\"service\" data-aos=\"fade-up\">\n          <h1 className=\"section-title\" style={{ color: \"#003764\" }}>\n            <b>Popular Apps</b>\n          </h1>\n          <div className=\"section-title-divider \"></div>\n          <Row className=\"mt-3\">\n            {subscribes.slice(0, 4).map((subscribes, i) => (\n              <Col sm=\"3\" key={i}>\n                <Card>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    height=\"170px\"\n                    src={subscribes.picture}\n                    alt=\"subscribtion\"\n                  />\n                  {/* <CardTitle\n                    tag=\"h6\"\n                    className=\"text-dark font-weight-bold text-center\"\n                  >\n                    <h4>{subscribes.name}</h4>\n                  </CardTitle> */}\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </Container>\n      {/* <Container fluid className=\"team\">\n                <Container>\n                    <h1 className=\"section\" >Team</h1>\n                    <div className=\"section-title-divider \"></div>\n                </Container>\n            </Container> */}\n    </>\n  );\n};\n\nexport default Home;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/UploadImg.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js",["207","208"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Calendar from \"react-calendar\";\nimport Lendar from \"./img/calendar.svg\";\nimport \"./Modalender.css\"\n\nconst Modalender = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\n  return (\n    <div>\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\n           \n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\n        <ModalHeader>CALENDAR</ModalHeader>\n        <ModalBody>\n          <b>Your Schedule</b><br />\n            <Calendar />\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Modalender;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js",["209"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Dropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../components/Profile.css\";\nimport axios from 'axios';\nimport Cookies from \"js-cookie\";\n\n\n\nconst ProfMenu = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const [user, setUser] = useState(\"\");\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(` https://binar8-jul-hendri.nandaworks.com/auth/user/`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setUser(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      {user.length !==0 ? (\n        user.map((users) => (\n          <DropdownToggle\n            tag=\"span\"\n            data-toggle=\"dropdown\"\n            aria-expanded={dropdownOpen}\n          >\n            <img src={users.photo} alt=\"\" className=\"thumbnail\"></img>\n          </DropdownToggle>\n        ))\n      ) : (\"\")}\n      <DropdownMenu right>\n        <Link to=\"/profile\">\n          <DropdownItem>View Profile</DropdownItem>\n        </Link>\n        <Link to=\"/logout\">\n          <DropdownItem> Log Out</DropdownItem>\n        </Link>\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default ProfMenu;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js",["210","211","212","213","214","215"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Signup from \"./Signup\";\n\n\nconst Login = (props) => {\n  const { className } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <>\n      <div className=\"modal-dialog modal-login\">\n        <div className=\"modal-content\">\n          <div className=\"model-header\">\n            <h4 className=\"modal-title\">LOGIN</h4>\n            <button className=\"close\"></button>\n          </div>\n          <div className=\"modal-body\">\n            <form method=\"post\">\n              <div className=\"form-group\">\n                <i className=\"fa fa-user\"></i>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                  required=\"required\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <i className=\"fa fa-lock\"></i>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  required=\"required\"\n                />\n              </div>\n              <hr />\n              <div className=\"form-group\">\n                <Input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                  value=\"Login\"\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\n          </div>\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\n            <ModalBody>\n              <Signup />\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js",["216","217","218","219","220","221"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js",["222","223","224","225","226","227","228","229","230","231"],"import React, { useState } from \"react\";\nimport \"./Signup.css\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\n\nconst SignUp = (props) => {\n  let history = useHistory();\n  const { buttonLabel, btnTitle, className, backgroundColor, color } = props;\n\n  const [modalSignUp, setModalSignUp] = useState(false);\n  const [modalSignIn, setModalSignIn] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const checker = () => {\n    localStorage.getItem(\"token\") === null\n      ? setIsLoggedIn(false)\n      : setIsLoggedIn(true);\n  };\n\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\n  const toggleSignIn = () => {\n    setModalSignIn(!modalSignIn);\n    setModalSignUp(false);\n  };\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n  const [message, setMessage] = useState();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmitSignUp = (e) => {\n    e.preventDefault();\n\n    setMessage({\n      data: \"Registration is in progress...\",\n      type: \"alert-warning\",\n    });\n    const urlSignUp =\n      \"  https://binar8-jul-hendri.nandaworks.com/auth/register\";\n    const data = {\n      fullName: fullName,\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(urlSignUp, data)\n      .then((ress) => {\n        Swal.fire(\"Great!\", \"You have registered successfully.\", \"success\");\n        history.push(toggleSignIn);\n        // return <Alert color=\"success\">You have registered successfully.</Alert>;\n        // console.log(ress.bodyData);\n        // <Alert color=\"primary\">Mantav</Alert>;\n      })\n      .catch((err) => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!',\n        })\n        toggleSignIn(false);\n        history.push(toggleSignUp);\n      });\n    // .then((error, data)=>{\n    //   // const hasError = \"error\" in data && data.error != null;\n    //   setMessage({\n    //     data: error || \"Registered Successfully\",\n    //     type: error ? \"alert-danger\" : \"alert-success\",\n    //   })\n    // })\n  };\n  const btnTitle1 = [\"Sign Up\"];\n  const checkerLogin = () => {\n    //Password and Email Formatting\n    let mailformat = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    if (!email) {\n      setMessage(\"Email Must be Filled!\");\n      return false;\n    } else if (!email.match(mailformat)) {\n      setMessage(\"Email Invalid!\");\n      return false;\n    } else {\n      setIsSubmitting(true);\n    }\n  };\n\n  const handleSubmitSignIn = (e) => {\n    e.preventDefault();\n\n    if (checkerLogin() !== false) {\n      const urlSignIn = \" https://binar8-jul-hendri.nandaworks.com/auth/login\";\n      const bodyData = {\n        email: email,\n        password: password,\n      };\n\n      axios\n        .post(urlSignIn, bodyData)\n        .then((res) => {\n          console.log(res);\n          const fullname = res.data.fullName;\n          const email = res.data.email;\n          const token = res.data.token;\n          Cookies.set(\"fullname\", fullname, { expires: 1 });\n          Cookies.set(\"email\", email, { expires: 1 });\n          Cookies.set(\"token\", token, { expires: 1 });\n          setUser(res.data);\n          history.push(`/Dashboard`);\n          return window.location.reload();\n        })\n        .then(() => {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Well Done!\",\n            text: \"You have logged in successfully!\",\n            showConfirmButton: false,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsSubmitting(false);\n          Swal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: \"Something went wrong!\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"SignUpModal\">\n        <div className=\"navigation\">\n          <Button\n            onClick={toggleSignUp}\n            id=\"transparant\"\n            style={{ backgroundColor: `${backgroundColor}`, color: `${color}` }}\n          >\n            {btnTitle}\n          </Button>\n        </div>\n        {/* <div className=\"navigation\">\n          <Button onClick={toggleSignUp}  id=\"transparant\" feature={feature2}></Button>\n        </div> */}\n\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\n          <ModalHeader toggle={toggleSignUp}>\n            <div className=\"ModalHeader\">\n              <h3 className=\"section\">Sign Up</h3>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={handleSubmitSignUp}>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Full Name</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"text\"\n                  color=\"primary\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter full name\"\n                  onChange={(e) => setFullName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Email</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Password</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button\n                id=\"submitButton\"\n                background-color=\"#8F48EA\"\n                type=\"submit\"\n                className=\"btn btn-block\"\n                onClick={toggleSignIn}\n              >\n                Sign Up\n              </Button>\n              <p className=\"Login\">\n                Already have an account?{\" \"}\n                <Button id=\"submitButton\" onClick={toggleSignIn}>\n                  {buttonLabel}Login\n                </Button>\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\n              </p>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n\n      <div className=\"SignInModal\">\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\n          <ModalHeader toggle={toggleSignIn}>\n            <div className=\"ModalHeader\">\n              <h3 className=\"section\">Login</h3>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={handleSubmitSignIn}>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Email</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Password</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button\n                id=\"submitButton\"\n                type=\"submit\"\n                color=\"primary\"\n                className=\"btn btn-block\"\n                onClick={toggleSignIn}\n              >\n                Login\n              </Button>\n              <p className=\"Login\">\n                Don't have an account?{\" \"}\n                <Button id=\"submitButton\" onClick={toggleSignUp}>\n                  {buttonLabel}Sign Up\n                </Button>\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\n              </p>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>\n\n    // </div>\n  );\n};\n\nexport default SignUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditDebt.js",["232"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst EditDebt = (props) => {\n  const { className } = props;\n\n  const urlDebt = \"https://binar8-jul-hendri.nandaworks.com/debts/notes\";\n\n  const [results, setResults] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(null);\n  const [dueDate, setDueDate] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlDebt, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n    const data = {\n      name: name,\n      description: description,\n      amount: amount,\n      type: type,\n      dueDate: dueDate,\n    };\n\n    axios\n      .patch(`https://binar8-jul-hendri.nandaworks.com/debts/update?id=${id}`, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      ><strong>Edit Note</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Edit your debt record here and then click Confirm to save the changes.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"id\">Which note you would like to edit?</Label>\n                <Input\n                  type=\"select\"\n                  name=\"id\"\n                  id=\"id\"\n                  onChange={(e) => setId(e.target.value)}\n                >\n                  <option>Select note</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.id}>\n                          {result.name} - {result.description}\n                        </option>\n                    ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={(e) => setName(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"description\">Description</Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"amount\">Amount</Label>\n                <Input\n                  type=\"number\"\n                  name=\"amount\"\n                  id=\"amount\"\n                  onChange={(e) => setAmount(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"select\"\n                  name=\"type\"\n                  id=\"type\"\n                  onChange={(e) => setType(e.target.value)}\n                >\n                  <option>Select Type</option>\n                  <option>Payables</option>\n                  <option>Receivables</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"dueDate\">Due Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"dueDate\"\n                  id=\"dueDate\"\n                  onChange={(e) => setDueDate(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  typw=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditDebt;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js",["233"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { Container, Row, Col, Table, Button } from \"reactstrap\";\nimport { X } from \"react-feather\";\nimport \"./Profile.css\";\nimport debtPic from \"../assets/debt2.png\";\nimport { Element } from \"react-scroll\";\nimport Moment from \"react-moment\";\nimport NumberFormat from 'react-number-format';\nimport Swal from \"sweetalert2\";\n\nconst ShowDebt = () => {\n\n  const url = \"https://binar8-jul-hendri.nandaworks.com/debts/notes\";\n  const token = Cookies.get(\"token\");\n\n  const [debt, setDebt] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(url, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        setDebt(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(\n            ` https://binar8-jul-hendri.nandaworks.com/debts/delete?id=${id}`,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            }\n          )\n          .then((res) => {\n            console.log(res);\n            return window.location.reload();\n          });\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Row className=\"mb-0\" style={{ paddingLeft: \"15px\" }}>\n            <p style={{ fontSize: \"10px\", marginRight: \"20px\" }}>\n              <i>\n                * <b>Payables</b> : what you owed.\n              </i>\n            </p>\n            <p style={{ fontSize: \"10px\" }}>\n              <i>\n                * <b>Receivables</b> : what others owed you.\n              </i>\n            </p>\n          </Row>\n          <Table\n            hover\n            style={{ backgroundColor: \"whitesmoke\", width: \"100%\" }}\n            className=\"mt-0\"\n          >\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <thead\n                className=\"text-center\"\n                style={{ backgroundColor: \"#BA8FF2\", width: \"100%\" }}\n              >\n                <tr>\n                  <th style={{ width: \"30%\" }}>Due Date</th>\n                  <th>Name</th>\n                  <th style={{ width: \"30%\" }}>Descriptions</th>\n                  <th>Type</th>\n                  <th>Cost</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              {debt.length !== 0 ? (\n                debt.map((debts) => (\n                  <tbody style={{ justifyContent: \"center\" }}>\n                    <tr className=\"text-center\">\n                      <td style={{ paddingTop: \"16px\" }}>\n                        {\" \"}\n                        <Moment format=\"D MMM YYYY\">{debts.dueDate}</Moment>\n                      </td>\n                      <td style={{ paddingTop: \"16px\" }}>{debts.name}</td>\n                      <td style={{ paddingTop: \"16px\" }}>\n                        {debts.description}\n                      </td>\n                      <td style={{ paddingTop: \"16px\" }}>{debts.type}</td>\n                      <td style={{ paddingTop: \"16px\" }}><NumberFormat value={debts.amount} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></td>\n                      <td>\n                        <Row style={{ justifyContent: \"center\" }}>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => {\n                              handleDelete(debts.id);\n                            }}\n                            color=\"danger\"\n                            outline\n                          >\n                            <X size={15} />\n                          </Button>\n                        </Row>\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n              ) : (\n                <tbody>\n                  <tr>\n                    <td colSpan=\"7\">\n                      <Container>\n                        <p style={{ opacity: \"60%\" }}>\n                          <i>\n                            <strong>No record found.</strong>\n                          </i>\n                        </p>\n                        <Col className=\"subs5\">\n                          <img\n                            src={debtPic}\n                            alt=\"\"\n                            style={{\n                              width: \"70%\",\n                              opacity: \"0%\",\n                              position: \"center\",\n                            }}\n                          />\n                        </Col>\n                      </Container>\n                    </td>\n                  </tr>\n                </tbody>\n              )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default ShowDebt;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js",["234","235"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js",["236"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { X } from \"react-feather\";\nimport expense from \"../assets/expense.png\";\nimport \"./Profile.css\";\nimport { Element } from \"react-scroll\";\nimport Moment from 'react-moment';\nimport NumberFormat from 'react-number-format';\nimport Swal from \"sweetalert2\";\n\nconst ShowExpenses = () => {\n  const [results, setResults] = useState(\"\");\n\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlExpense, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you won't be able to retrieve this data!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((res) => {\n            console.log(res);\n            console.log(res.data);\n            return window.location.reload();\n          });\n        Swal.fire(\"Done!\", \"Your expense record has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <thead\n                className=\"text-center\"\n                style={{ backgroundColor: \"#BA8FF2\" }}\n              >\n                <tr>\n                  <th style={{ width: \"20%\" }}>Date</th>\n                  <th>Transaction</th>\n                  <th>Costs</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n\n              {results.length !== 0 ? (\n                results.map((result) => (\n                  <tbody>\n                    <tr>\n                      <td className=\"text-center\">\n                        <Moment format=\"D MMM YYYY\">\n                          {result.purchaseDate}\n                        </Moment>\n                      </td>\n                      <td className=\"text-center\" style={{ width: \"50%\" }}>\n                        {result.title}\n                      </td>\n                      \n                      <td className=\"text-center\"><NumberFormat value={result.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></td>\n                      <td style={{ width: \"100%\" }} className=\"text-center\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => {\n                            handleDelete(result.id);\n                          }}\n                          color=\"danger\"\n                          outline\n                        >\n                          <X size={15} />\n                        </Button>\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n              ) : (\n                <tbody>\n                  <tr>\n                    <td colSpan=\"6\">\n                      <Container>\n                        <p style={{ opacity: \"60%\" }}>\n                          <i>\n                            <strong>No expense found.</strong>\n                          </i>\n                        </p>\n                        <Col className=\"subs3\">\n                          <img\n                            src={expense}\n                            alt=\"\"\n                            style={{\n                              width: \"40%\",\n                              opacity: \"0%\",\n                              position: \"center\",\n                            }}\n                          />\n                        </Col>\n                      </Container>\n                    </td>\n                  </tr>\n                </tbody>\n              )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ShowExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js",["237"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\nimport visa from \"../assets/visa.png\";\nimport master from \"../assets/mastercard.png\";\nimport \"./Profile.css\";\nimport expense from \"../assets/expense.png\";\n\nimport NumberFormat from 'react-number-format';\nimport Swal from \"sweetalert2\";\n\n\nfunction CheckStatus() {\n  const [results, setResults] = useState(\"\");\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const token = Cookies.get(\"token\");\n\n  console.log(results);\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      title: \"Are you sure you want to remove this card?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, I'm sure!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(`${urlCard}?cardNumber=${id}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((res) => {\n            console.log(res);\n            console.log(res.data);\n            return window.location.reload();\n          });\n        Swal.fire(\"Done!\", \"Your card has been removed.\", \"success\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Row>\n        {results.length !== 0 ? (\n          results.map((result) => {\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong><NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Master\"\n            ) {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Visa\"\n            ) {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else {\n              return (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No card found. Please add card first.</strong>\n                    </i>\n                  </p>\n                </Container>\n              );\n            }\n          })\n        ) : (\n          <Container>\n            <p style={{ opacity: \"60%\" }}>\n              <i>\n                <strong>No card found. Please add card first.</strong>\n              </i>\n            </p>\n            <Col className=\"subs4\">\n              <img\n                src={expense}\n                alt=\"\"\n                style={{\n                  width: \"50%\",\n                  opacity: \"0%\",\n                  position: \"center\",\n                }}\n              />\n            </Col>\n          </Container>\n          // <Loading />\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default CheckStatus;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js",["238"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst TopUp = (props) => {\n  const { className } = props;\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const [results, setResults] = useState(\"\");\n  const [saldo, setSaldo] = useState(null);\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n\n    e.preventDefault()\n\n    const data = {\n      saldo: parseInt(saldo),\n    };\n\n    // axios\n    //   .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\n    //     headers: { Authorization: `Bearer ${token}` },\n    //   })\n    axios({\n      method: 'PATCH',\n      url: `https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`,\n      headers: { Authorization: `Bearer ${token}` },\n      data: data,\n    })\n      .then((res) => {\n        console.log(res);\n        console.log(\"ini res.data top up\");\n        console.log(res.data);\n        // return window.location.reload();\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n        <strong>Top-up</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Top-up your balance here.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"cardNumber\">Select Card</Label>\n                <Input\n                  type=\"select\"\n                  name=\"cardNumber\"\n                  id=\"cardNumber\"\n                  onChange={(e) => setCardNumber(e.target.value)}\n                >\n                  <option>Select card</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.cardNumber}>\n                          {result.cardBank} - IDR {result.saldo}\n                        </option>\n                      ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"saldo\">Top-up amount:</Label>\n                <Input\n                  type=\"select\"\n                  name=\"saldo\"\n                  id=\"saldo\"\n                  onClick={(e) => setSaldo(e.target.value)}\n                >\n                  <option>Select amount</option>\n                  <option>50000</option>\n                  <option>100000</option>\n                  <option>250000</option>\n                  <option>500000</option>\n                  <option>1000000</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  type=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TopUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js",["239"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport './Profile.css'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AddExpenses = (props) => {\n\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const urlCategories = \" https://binar8-jul-hendri.nandaworks.com/categories\";\n\n  const token = Cookies.get(\"token\");\n\n  const { className } = props;\n\n  const [cards, setCards] = useState(\"\");\n\n  const [title, setTitle] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [cardId, setCardId] = useState(null);\n  const [categoryId, setCategoryId] = useState(\"\");\n\n  const [categories, setCategories] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCards(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n      axios\n      .get(urlCategories)\n      .then((res) => {\n        console.log(res.data);\n        setCategories(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: title,\n      total: total,\n      purchaseDate: purchaseDate,\n      cardId: cardId,\n      categoryId: categoryId\n    };\n    \n    axios\n      .post(urlExpense, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n      <strong>New Expense </strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Add New Expenses</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"title\">Title</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"total\">Paid amount</Label>\n                  <Input\n                    type=\"total\"\n                    name=\"total\"\n                    id=\"total\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setTotal(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"categoryId\">Expense Type</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"categoryId\"\n                    id=\"categoryId\"\n                    onChange={(e) => setCategoryId(e.target.value)}\n                  >\n                    <option>Select expense type</option>\n                  {categories.length !== 0\n                    ? categories.map((category) => <option value={category.id}>{category.category}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"purchaseDate\">Purchase Date</Label>\n                  <Input\n                    type=\"date\"\n                    name=\"purchaseDate\"\n                    id=\"purchaseDate\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setPurchaseDate(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <Label for=\"cardId\">Select Card</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"cardId\"\n                    id=\"cardId\"\n                    onChange={(e) => setCardId(e.target.value)}\n                  >\n                    <option>Select card</option>\n                  {cards.length !== 0\n                    ? cards.map((card) => <option value={card.id}>{card.cardBank} - IDR {card.saldo}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Button\n                block\n                type=\"submit\"\n                onClick={toggle}\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n              >\n                <strong>Add New Expense</strong>\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js",[],{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":14,"column":10,"nodeType":"246","messageId":"247","endLine":14,"endColumn":14},{"ruleId":"244","severity":1,"message":"248","line":14,"column":16,"nodeType":"246","messageId":"247","endLine":14,"endColumn":20},{"ruleId":"249","severity":1,"message":"250","line":38,"column":6,"nodeType":"251","endLine":38,"endColumn":8,"suggestions":"252"},{"ruleId":"244","severity":1,"message":"253","line":3,"column":21,"nodeType":"246","messageId":"247","endLine":3,"endColumn":24},{"ruleId":"244","severity":1,"message":"254","line":3,"column":31,"nodeType":"246","messageId":"247","endLine":3,"endColumn":36},{"ruleId":"244","severity":1,"message":"255","line":4,"column":40,"nodeType":"246","messageId":"247","endLine":4,"endColumn":48},{"ruleId":"244","severity":1,"message":"256","line":7,"column":8,"nodeType":"246","messageId":"247","endLine":7,"endColumn":13},{"ruleId":"244","severity":1,"message":"257","line":9,"column":8,"nodeType":"246","messageId":"247","endLine":9,"endColumn":15},{"ruleId":"244","severity":1,"message":"258","line":10,"column":8,"nodeType":"246","messageId":"247","endLine":10,"endColumn":13},{"ruleId":"244","severity":1,"message":"259","line":15,"column":10,"nodeType":"246","messageId":"247","endLine":15,"endColumn":17},{"ruleId":"249","severity":1,"message":"260","line":52,"column":6,"nodeType":"251","endLine":52,"endColumn":8,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":54,"column":69,"nodeType":"264","messageId":"265","endLine":54,"endColumn":71},{"ruleId":"262","severity":1,"message":"263","line":108,"column":41,"nodeType":"264","messageId":"265","endLine":108,"endColumn":43},{"ruleId":"262","severity":1,"message":"263","line":167,"column":39,"nodeType":"264","messageId":"265","endLine":167,"endColumn":41},{"ruleId":"266","severity":1,"message":"267","line":11,"column":5,"nodeType":"268","messageId":"269","endLine":11,"endColumn":17},{"ruleId":"244","severity":1,"message":"270","line":6,"column":3,"nodeType":"246","messageId":"247","endLine":6,"endColumn":16},{"ruleId":"244","severity":1,"message":"271","line":9,"column":3,"nodeType":"246","messageId":"247","endLine":9,"endColumn":6},{"ruleId":"244","severity":1,"message":"272","line":13,"column":8,"nodeType":"246","messageId":"247","endLine":13,"endColumn":13},{"ruleId":"244","severity":1,"message":"273","line":16,"column":8,"nodeType":"246","messageId":"247","endLine":16,"endColumn":14},{"ruleId":"244","severity":1,"message":"274","line":18,"column":8,"nodeType":"246","messageId":"247","endLine":18,"endColumn":11},{"ruleId":"244","severity":1,"message":"275","line":19,"column":8,"nodeType":"246","messageId":"247","endLine":19,"endColumn":13},{"ruleId":"244","severity":1,"message":"276","line":23,"column":8,"nodeType":"246","messageId":"247","endLine":23,"endColumn":21},{"ruleId":"244","severity":1,"message":"277","line":25,"column":8,"nodeType":"246","messageId":"247","endLine":25,"endColumn":11},{"ruleId":"244","severity":1,"message":"278","line":30,"column":9,"nodeType":"246","messageId":"247","endLine":30,"endColumn":15},{"ruleId":"279","severity":1,"message":"280","line":40,"column":15,"nodeType":"281","endLine":40,"endColumn":34},{"ruleId":"244","severity":1,"message":"282","line":20,"column":3,"nodeType":"246","messageId":"247","endLine":20,"endColumn":8},{"ruleId":"244","severity":1,"message":"283","line":23,"column":8,"nodeType":"246","messageId":"247","endLine":23,"endColumn":15},{"ruleId":"244","severity":1,"message":"284","line":24,"column":8,"nodeType":"246","messageId":"247","endLine":24,"endColumn":12},{"ruleId":"244","severity":1,"message":"285","line":25,"column":8,"nodeType":"246","messageId":"247","endLine":25,"endColumn":14},{"ruleId":"244","severity":1,"message":"286","line":26,"column":8,"nodeType":"246","messageId":"247","endLine":26,"endColumn":16},{"ruleId":"244","severity":1,"message":"287","line":27,"column":8,"nodeType":"246","messageId":"247","endLine":27,"endColumn":15},{"ruleId":"244","severity":1,"message":"288","line":28,"column":8,"nodeType":"246","messageId":"247","endLine":28,"endColumn":12},{"ruleId":"244","severity":1,"message":"289","line":29,"column":10,"nodeType":"246","messageId":"247","endLine":29,"endColumn":14},{"ruleId":"244","severity":1,"message":"290","line":29,"column":16,"nodeType":"246","messageId":"247","endLine":29,"endColumn":25},{"ruleId":"244","severity":1,"message":"291","line":32,"column":10,"nodeType":"246","messageId":"247","endLine":32,"endColumn":20},{"ruleId":"244","severity":1,"message":"292","line":85,"column":10,"nodeType":"246","messageId":"247","endLine":85,"endColumn":19},{"ruleId":"244","severity":1,"message":"293","line":85,"column":21,"nodeType":"246","messageId":"247","endLine":85,"endColumn":33},{"ruleId":"244","severity":1,"message":"294","line":92,"column":17,"nodeType":"246","messageId":"247","endLine":92,"endColumn":25},{"ruleId":"244","severity":1,"message":"295","line":93,"column":18,"nodeType":"246","messageId":"247","endLine":93,"endColumn":27},{"ruleId":"244","severity":1,"message":"296","line":96,"column":10,"nodeType":"246","messageId":"247","endLine":96,"endColumn":19},{"ruleId":"244","severity":1,"message":"297","line":96,"column":21,"nodeType":"246","messageId":"247","endLine":96,"endColumn":33},{"ruleId":"244","severity":1,"message":"298","line":97,"column":10,"nodeType":"246","messageId":"247","endLine":97,"endColumn":19},{"ruleId":"244","severity":1,"message":"299","line":97,"column":21,"nodeType":"246","messageId":"247","endLine":97,"endColumn":33},{"ruleId":"249","severity":1,"message":"300","line":139,"column":6,"nodeType":"251","endLine":139,"endColumn":8,"suggestions":"301"},{"ruleId":"244","severity":1,"message":"302","line":10,"column":3,"nodeType":"246","messageId":"247","endLine":10,"endColumn":11},{"ruleId":"244","severity":1,"message":"303","line":12,"column":3,"nodeType":"246","messageId":"247","endLine":12,"endColumn":8},{"ruleId":"244","severity":1,"message":"304","line":13,"column":3,"nodeType":"246","messageId":"247","endLine":13,"endColumn":14},{"ruleId":"244","severity":1,"message":"305","line":15,"column":3,"nodeType":"246","messageId":"247","endLine":15,"endColumn":12},{"ruleId":"244","severity":1,"message":"289","line":18,"column":10,"nodeType":"246","messageId":"247","endLine":18,"endColumn":14},{"ruleId":"244","severity":1,"message":"291","line":21,"column":10,"nodeType":"246","messageId":"247","endLine":21,"endColumn":20},{"ruleId":"244","severity":1,"message":"306","line":25,"column":8,"nodeType":"246","messageId":"247","endLine":25,"endColumn":15},{"ruleId":"244","severity":1,"message":"307","line":48,"column":10,"nodeType":"246","messageId":"247","endLine":48,"endColumn":19},{"ruleId":"244","severity":1,"message":"308","line":50,"column":9,"nodeType":"246","messageId":"247","endLine":50,"endColumn":17},{"ruleId":"244","severity":1,"message":"309","line":52,"column":10,"nodeType":"246","messageId":"247","endLine":52,"endColumn":21},{"ruleId":"244","severity":1,"message":"310","line":52,"column":23,"nodeType":"246","messageId":"247","endLine":52,"endColumn":37},{"ruleId":"244","severity":1,"message":"296","line":55,"column":10,"nodeType":"246","messageId":"247","endLine":55,"endColumn":19},{"ruleId":"244","severity":1,"message":"297","line":55,"column":21,"nodeType":"246","messageId":"247","endLine":55,"endColumn":33},{"ruleId":"244","severity":1,"message":"298","line":56,"column":10,"nodeType":"246","messageId":"247","endLine":56,"endColumn":19},{"ruleId":"244","severity":1,"message":"299","line":56,"column":21,"nodeType":"246","messageId":"247","endLine":56,"endColumn":33},{"ruleId":"244","severity":1,"message":"294","line":57,"column":17,"nodeType":"246","messageId":"247","endLine":57,"endColumn":25},{"ruleId":"244","severity":1,"message":"295","line":58,"column":18,"nodeType":"246","messageId":"247","endLine":58,"endColumn":27},{"ruleId":"244","severity":1,"message":"278","line":67,"column":9,"nodeType":"246","messageId":"247","endLine":67,"endColumn":15},{"ruleId":"249","severity":1,"message":"300","line":107,"column":6,"nodeType":"251","endLine":107,"endColumn":8,"suggestions":"311"},{"ruleId":"244","severity":1,"message":"312","line":8,"column":3,"nodeType":"246","messageId":"247","endLine":8,"endColumn":11},{"ruleId":"244","severity":1,"message":"313","line":9,"column":3,"nodeType":"246","messageId":"247","endLine":9,"endColumn":12},{"ruleId":"244","severity":1,"message":"314","line":10,"column":3,"nodeType":"246","messageId":"247","endLine":10,"endColumn":9},{"ruleId":"244","severity":1,"message":"289","line":23,"column":10,"nodeType":"246","messageId":"247","endLine":23,"endColumn":14},{"ruleId":"244","severity":1,"message":"277","line":33,"column":8,"nodeType":"246","messageId":"247","endLine":33,"endColumn":11},{"ruleId":"244","severity":1,"message":"315","line":66,"column":9,"nodeType":"246","messageId":"247","endLine":66,"endColumn":15},{"ruleId":"279","severity":1,"message":"280","line":248,"column":25,"nodeType":"281","endLine":248,"endColumn":74},{"ruleId":"279","severity":1,"message":"280","line":276,"column":25,"nodeType":"281","endLine":276,"endColumn":72},{"ruleId":"279","severity":1,"message":"280","line":305,"column":25,"nodeType":"281","endLine":305,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":334,"column":25,"nodeType":"281","endLine":334,"endColumn":72},{"ruleId":"244","severity":1,"message":"314","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":20,"column":9,"nodeType":"281","endLine":20,"endColumn":70},{"ruleId":"249","severity":1,"message":"250","line":36,"column":6,"nodeType":"251","endLine":36,"endColumn":8,"suggestions":"316"},{"ruleId":"244","severity":1,"message":"314","line":3,"column":3,"nodeType":"246","messageId":"247","endLine":3,"endColumn":9},{"ruleId":"244","severity":1,"message":"304","line":6,"column":3,"nodeType":"246","messageId":"247","endLine":6,"endColumn":14},{"ruleId":"244","severity":1,"message":"317","line":8,"column":3,"nodeType":"246","messageId":"247","endLine":8,"endColumn":14},{"ruleId":"244","severity":1,"message":"318","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":16},{"ruleId":"244","severity":1,"message":"319","line":10,"column":18,"nodeType":"246","messageId":"247","endLine":10,"endColumn":23},{"ruleId":"244","severity":1,"message":"320","line":15,"column":11,"nodeType":"246","messageId":"247","endLine":15,"endColumn":20},{"ruleId":"244","severity":1,"message":"314","line":6,"column":3,"nodeType":"246","messageId":"247","endLine":6,"endColumn":9},{"ruleId":"244","severity":1,"message":"271","line":11,"column":3,"nodeType":"246","messageId":"247","endLine":11,"endColumn":6},{"ruleId":"244","severity":1,"message":"321","line":18,"column":10,"nodeType":"246","messageId":"247","endLine":18,"endColumn":14},{"ruleId":"244","severity":1,"message":"322","line":18,"column":16,"nodeType":"246","messageId":"247","endLine":18,"endColumn":23},{"ruleId":"244","severity":1,"message":"259","line":19,"column":10,"nodeType":"246","messageId":"247","endLine":19,"endColumn":17},{"ruleId":"249","severity":1,"message":"250","line":36,"column":6,"nodeType":"251","endLine":36,"endColumn":8,"suggestions":"323"},{"ruleId":"244","severity":1,"message":"324","line":12,"column":3,"nodeType":"246","messageId":"247","endLine":12,"endColumn":8},{"ruleId":"244","severity":1,"message":"272","line":15,"column":8,"nodeType":"246","messageId":"247","endLine":15,"endColumn":13},{"ruleId":"244","severity":1,"message":"325","line":16,"column":8,"nodeType":"246","messageId":"247","endLine":16,"endColumn":17},{"ruleId":"244","severity":1,"message":"326","line":27,"column":10,"nodeType":"246","messageId":"247","endLine":27,"endColumn":20},{"ruleId":"244","severity":1,"message":"327","line":29,"column":9,"nodeType":"246","messageId":"247","endLine":29,"endColumn":16},{"ruleId":"244","severity":1,"message":"328","line":44,"column":10,"nodeType":"246","messageId":"247","endLine":44,"endColumn":14},{"ruleId":"244","severity":1,"message":"329","line":45,"column":10,"nodeType":"246","messageId":"247","endLine":45,"endColumn":17},{"ruleId":"244","severity":1,"message":"330","line":46,"column":10,"nodeType":"246","messageId":"247","endLine":46,"endColumn":22},{"ruleId":"244","severity":1,"message":"331","line":89,"column":9,"nodeType":"246","messageId":"247","endLine":89,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":92,"column":28,"nodeType":"334","messageId":"335","endLine":92,"endColumn":29,"suggestions":"336"},{"ruleId":"249","severity":1,"message":"250","line":43,"column":6,"nodeType":"251","endLine":43,"endColumn":8,"suggestions":"337"},{"ruleId":"249","severity":1,"message":"250","line":30,"column":6,"nodeType":"251","endLine":30,"endColumn":8,"suggestions":"338"},{"ruleId":"244","severity":1,"message":"339","line":17,"column":8,"nodeType":"246","messageId":"247","endLine":17,"endColumn":14},{"ruleId":"244","severity":1,"message":"340","line":18,"column":8,"nodeType":"246","messageId":"247","endLine":18,"endColumn":20},{"ruleId":"249","severity":1,"message":"250","line":32,"column":6,"nodeType":"251","endLine":32,"endColumn":8,"suggestions":"341"},{"ruleId":"249","severity":1,"message":"250","line":69,"column":6,"nodeType":"251","endLine":69,"endColumn":8,"suggestions":"342"},{"ruleId":"249","severity":1,"message":"250","line":39,"column":6,"nodeType":"251","endLine":39,"endColumn":8,"suggestions":"343"},{"ruleId":"249","severity":1,"message":"250","line":63,"column":6,"nodeType":"251","endLine":63,"endColumn":8,"suggestions":"344"},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'Mail' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["347"],"'Col' is defined but never used.","'Table' is defined but never used.","'Linkedin' is defined but never used.","'crest' is defined but never used.","'Loading' is defined but never used.","'sleep' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["348"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Login' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'AOS' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["349"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.",["350"],"'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Button' is defined but never used.","'signup' is assigned a value but never used.",["351"],"'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.",["352"],"'Alert' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'btnTitle1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["353","354"],["355"],["356"],"'Moment' is defined but never used.","'NumberFormat' is defined but never used.",["357"],["358"],["359"],["360"],"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"365","fix":"367"},{"desc":"361","fix":"368"},{"desc":"361","fix":"369"},{"messageId":"370","fix":"371","desc":"372"},{"messageId":"373","fix":"374","desc":"375"},{"desc":"361","fix":"376"},{"desc":"361","fix":"377"},{"desc":"361","fix":"378"},{"desc":"361","fix":"379"},{"desc":"361","fix":"380"},{"desc":"361","fix":"381"},"Update the dependencies array to be: [token]",{"range":"382","text":"383"},"Update the dependencies array to be: [token, upComing]",{"range":"384","text":"385"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"386","text":"387"},{"range":"388","text":"387"},{"range":"389","text":"383"},{"range":"390","text":"383"},"removeEscape",{"range":"391","text":"392"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"393","text":"394"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"395","text":"383"},{"range":"396","text":"383"},{"range":"397","text":"383"},{"range":"398","text":"383"},{"range":"399","text":"383"},{"range":"400","text":"383"},[876,878],"[token]",[1530,1532],"[token, upComing]",[3858,3860],"[dataMonth, dataWeek, token]",[3093,3095],[839,841],[871,873],[2590,2591],"",[2590,2590],"\\",[1005,1007],[867,869],[908,910],[1709,1711],[830,832],[1406,1408]]