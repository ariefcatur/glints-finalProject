[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"4"},{"size":567,"mtime":1607762145127,"results":"5","hashOfConfig":"6"},{"size":2451,"mtime":1607762145101,"results":"7","hashOfConfig":"6"},{"size":6481,"mtime":1608628358600,"results":"8","hashOfConfig":"6"},{"size":7346,"mtime":1608795628263,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lm62wj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js",["19","20","21","22","23","24","25","26","27"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["28","29","30","31","32","33"],"import React, { useState } from \"react\";\r\nimport \"./Signup.css\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert\r\n } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst SignUp = (props) => {\r\n  let history = useHistory();\r\n  const { buttonLabel, className } = props;\r\n\r\n  const [modalSignUp, setModalSignUp] = useState(false);\r\n  const [modalSignIn, setModalSignIn] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const checker = () => {\r\n    localStorage.getItem(\"token\") === null\r\n      ? setIsLoggedIn(false)\r\n      : setIsLoggedIn(true);\r\n  };\r\n\r\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\r\n  const toggleSignIn = () => {\r\n    setModalSignIn(!modalSignIn);\r\n    setModalSignUp(false);\r\n  };\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const [message, setMessage] = useState();\r\n \r\n  const handleSubmitSignUp = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage({\r\n      data: \"Registration is in progress...\",\r\n      type: \"alert-warning\"\r\n    })\r\n    const urlSignUp =\r\n      \"  https://binar8-jul-hendri.nandaworks.com/auth/register\";\r\n    const data = {\r\n      fullName: fullName,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(urlSignUp, data)\r\n    .then((ress) => {\r\n      return <Alert color=\"success\">You have registered successfully.</Alert>;\r\n      // console.log(ress.bodyData);\r\n      // <Alert color=\"primary\">Mantav</Alert>;\r\n    })\r\n    .then(() => {\r\n      history.push(toggleSignIn);\r\n    })\r\n    .catch((err) => {\r\n      return console(err);\r\n    })\r\n    // .then((error, data)=>{\r\n    //   // const hasError = \"error\" in data && data.error != null;\r\n    //   setMessage({\r\n    //     data: error || \"Registered Successfully\",\r\n    //     type: error ? \"alert-danger\" : \"alert-success\",\r\n    //   })\r\n    // })\r\n  };\r\n\r\n  const handleSubmitSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    const urlSignIn =\r\n      \" https://binar8-jul-hendri.nandaworks.com/auth/login\";\r\n    const bodyData = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(urlSignIn, bodyData).then((res) => {\r\n      console.log(res);\r\n      const fullname = res.data.fullName;\r\n      const email = res.data.email;\r\n      const token = res.data.token;\r\n      Cookies.set(\"fullname\", fullname, { expires: 1 });\r\n      Cookies.set(\"email\", email, { expires: 1 });\r\n      Cookies.set(\"token\", token, { expires: 1 });\r\n      setUser(res.data);\r\n      history.push(`/Dashboard`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"SignUpModal\">\r\n        <div className=\"navigation\">\r\n          <Button onClick={toggleSignUp}  id=\"transparant\">{buttonLabel}Sign Up</Button>\r\n        </div>\r\n\r\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\r\n          <ModalHeader toggle={toggleSignUp}>\r\n            <div className=\"ModalHeader\">\r\n              <h3 className=\"section\">Sign Up</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={handleSubmitSignUp}>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Full Name</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"text\"\r\n                  color=\"primary\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter full name\"\r\n                  onChange={(e) => setFullName(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Email</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"email\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                \r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Password</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"password\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                id=\"submitButton\"\r\n                background-color=\"#8F48EA\"\r\n                type=\"submit\"\r\n                className=\"btn btn-block\"\r\n                onClick={toggleSignIn}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <p className=\"Login\">\r\n                Already have an account?{\" \"}\r\n                <Button  id=\"submitButton\" onClick={toggleSignIn}>\r\n                  {buttonLabel}Login\r\n                </Button>\r\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\r\n              </p>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div className=\"SignInModal\">\r\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\r\n          <ModalHeader toggle={toggleSignIn}>\r\n            <div className=\"ModalHeader\">\r\n              <h3 className=\"section\">Login</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={handleSubmitSignIn}>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Email</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"email\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Password</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"password\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className=\"btn btn-block\"\r\n                onClick={toggleSignIn}\r\n              >\r\n                Login\r\n              </Button>\r\n              <p className=\"Login\">\r\n                Don't have an account?{\" \"}\r\n                <Button id=\"submitButton\" onClick={toggleSignUp}>\r\n                  {buttonLabel}Sign Up\r\n                </Button>\r\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\r\n              </p>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n",{"ruleId":"34","severity":1,"message":"35","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":20},{"ruleId":"34","severity":1,"message":"38","line":20,"column":16,"nodeType":"36","messageId":"37","endLine":20,"endColumn":23},{"ruleId":"34","severity":1,"message":"39","line":21,"column":23,"nodeType":"36","messageId":"37","endLine":21,"endColumn":37},{"ruleId":"34","severity":1,"message":"40","line":22,"column":18,"nodeType":"36","messageId":"37","endLine":22,"endColumn":27},{"ruleId":"34","severity":1,"message":"41","line":23,"column":16,"nodeType":"36","messageId":"37","endLine":23,"endColumn":23},{"ruleId":"34","severity":1,"message":"42","line":24,"column":19,"nodeType":"36","messageId":"37","endLine":24,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":39,"column":6,"nodeType":"45","endLine":39,"endColumn":8,"suggestions":"46"},{"ruleId":"34","severity":1,"message":"47","line":52,"column":9,"nodeType":"36","messageId":"37","endLine":52,"endColumn":21},{"ruleId":"34","severity":1,"message":"48","line":77,"column":9,"nodeType":"36","messageId":"37","endLine":77,"endColumn":15},{"ruleId":"34","severity":1,"message":"49","line":15,"column":8,"nodeType":"36","messageId":"37","endLine":15,"endColumn":13},{"ruleId":"34","severity":1,"message":"50","line":16,"column":8,"nodeType":"36","messageId":"37","endLine":16,"endColumn":17},{"ruleId":"34","severity":1,"message":"51","line":26,"column":10,"nodeType":"36","messageId":"37","endLine":26,"endColumn":20},{"ruleId":"34","severity":1,"message":"52","line":28,"column":9,"nodeType":"36","messageId":"37","endLine":28,"endColumn":16},{"ruleId":"34","severity":1,"message":"53","line":43,"column":10,"nodeType":"36","messageId":"37","endLine":43,"endColumn":14},{"ruleId":"34","severity":1,"message":"54","line":44,"column":10,"nodeType":"36","messageId":"37","endLine":44,"endColumn":17},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setType' is assigned a value but never used.","'setDueDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["55"],"'handleSubmit' is assigned a value but never used.","'toggle' is assigned a value but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.",{"desc":"56","fix":"57"},"Update the dependencies array to be: [token]",{"range":"58","text":"59"},[1105,1107],"[token]"]