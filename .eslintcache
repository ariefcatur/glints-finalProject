<<<<<<< HEAD
[{"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js":"1","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js":"2","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js":"3","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js":"4","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js":"5","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js":"6","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js":"7","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js":"8","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js":"9","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js":"10","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js":"11","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js":"12","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js":"13","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js":"14","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js":"15","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js":"16","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js":"17","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js":"18","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js":"19","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js":"20","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js":"21","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js":"22","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js":"23","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js":"24","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js":"25","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js":"26"},{"size":546,"mtime":1606980992273,"results":"27","hashOfConfig":"28"},{"size":973,"mtime":1608043004511,"results":"29","hashOfConfig":"28"},{"size":2026,"mtime":1608287371697,"results":"30","hashOfConfig":"28"},{"size":2383,"mtime":1607536595448,"results":"31","hashOfConfig":"28"},{"size":3622,"mtime":1608287839061,"results":"32","hashOfConfig":"28"},{"size":298,"mtime":1607226668764,"results":"33","hashOfConfig":"28"},{"size":2522,"mtime":1608229637416,"results":"34","hashOfConfig":"28"},{"size":11811,"mtime":1608222377199,"results":"35","hashOfConfig":"28"},{"size":12583,"mtime":1608285831582,"results":"36","hashOfConfig":"28"},{"size":15047,"mtime":1608288302849,"results":"37","hashOfConfig":"28"},{"size":2993,"mtime":1608287451989,"results":"38","hashOfConfig":"28"},{"size":3616,"mtime":1608213036404,"results":"39","hashOfConfig":"28"},{"size":1255,"mtime":1607076230330,"results":"40","hashOfConfig":"28"},{"size":189,"mtime":1607226668760,"results":"41","hashOfConfig":"28"},{"size":844,"mtime":1608221066046,"results":"42","hashOfConfig":"28"},{"size":1992,"mtime":1607230205571,"results":"43","hashOfConfig":"28"},{"size":6775,"mtime":1608285831582,"results":"44","hashOfConfig":"28"},{"size":2355,"mtime":1608287528372,"results":"45","hashOfConfig":"28"},{"size":3508,"mtime":1608215909537,"results":"46","hashOfConfig":"28"},{"size":3884,"mtime":1608219574371,"results":"47","hashOfConfig":"28"},{"size":3959,"mtime":1608219574371,"results":"48","hashOfConfig":"28"},{"size":6411,"mtime":1608290314777,"results":"49","hashOfConfig":"28"},{"size":5329,"mtime":1608221672583,"results":"50","hashOfConfig":"28"},{"size":9681,"mtime":1608221120103,"results":"51","hashOfConfig":"28"},{"size":12635,"mtime":1608221563300,"results":"52","hashOfConfig":"28"},{"size":345,"mtime":1607947469906,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1h8k743",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js",[],["119","120"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js",["121"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js",["122","123","124"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js",["125","126","127","128","129","130","131","132","133","134","135"],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Row,\n} from \"reactstrap\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport subsit from \"./img/SubsIt..svg\";\nimport \"./TopMenu.css\";\nimport Modals from \"./Modalender\";\nimport { Link} from \"react-router-dom\";\nimport app from \"./img/app.svg\";\nimport chart from \"./img/Group 11.svg\";\nimport { checkLogin } from \"../Helper\";\nimport ProfMenu from \"./ProfMenu\";\nimport { Calendar, PieChart } from 'react-feather';\nimport CalendarEvent from \"../components/Calendar\";\n\nimport Bells from \"./Bells\";\n\nconst TopMenu = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\n      <Navbar expand=\"md\" style={{backgroundColor:\"#fefefe\", }}>\n      <NavbarBrand className=\"lognav\" href=\"/\" >\n            <Link to=\"/dashboard\">\n              <img src={subsit} ></img>\n            </Link>\n            </NavbarBrand>\n        \n        <Nav className=\"ml-auto\" navbar>\n          <Collapse isOpen={isOpen} navbar></Collapse>\n          {!checkLogin() && (\n            <div className=\"body\">\n              <ul id=\"Menu\">\n                <li className=\"liquid1\"></li>\n                <li>\n                  <a href=\"#\">About</a>\n                </li>\n                <li>\n                  <a href=\"#\">Product</a>\n                </li>\n                <li>\n                  <Signup />\n                </li>\n              </ul>\n            </div>\n          )}\n          {checkLogin() && (\n            \n            <div>\n              {/* <NavbarBrand className=\"lognav\" href=\"/\" >\n            <Link to=\"/dashboard\">\n              <img src={subsit} ></img>\n            </Link>\n            </NavbarBrand> */}\n              <ul id=\"Menu\" className=\"liquid1\">\n                <li>\n                  <Link to=\"/history\">\n                    <PieChart style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/Calendar\">\n                    <Calendar style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Bells />\n                </li>\n                <li>\n                  <ProfMenu/>\n                </li>\n              </ul>\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default TopMenu;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Collapse,\n  Spinner,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport youtube from \"./img/youtube.jpg\";\nimport hulu from \"./img/hulu-logo.jpg\";\nimport disney from \"./img/disney.jpeg\";\nimport sportify from \"./img/spotify.jpg\";\nimport netflix from \"./img/netflix.jpeg\";\nimport logo from \"./img/Rectangle.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { checkLogin } from \"../Helper\";\nimport Cookies from \"js-cookie\";\n\n// const dataMonth= {\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\n//     datasets:[\n//         {\n//             label: '# Month',\n//             data: [12, 19, 3, 5, 2, 3],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\n// const options = {\n//     scales: {\n//         yAxes: [\n//           {\n//             ticks: {\n//               beginAtZero: true,\n//             },\n//           },\n//         ],\n//       },\n// }\n\n// const dataWeek= {\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n//     datasets:[\n//         {\n//             label: '# Week',\n//             data: [12, 19, 3, 5],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\nconst Dashboard = () => {\n  const urlSubscribe = \" http://52.148.70.171/service\";\n  const [subscribes, setSubscribes] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [subscribeId, setSubscribeId] = useState([]);\n  const token = Cookies.get(\"token\");\n  const [startDate, setStartDate] = useState(0);\n  const [serviceId, setServiceId] = useState([]);\n  const [card, setCard] = useState([]);\n  const [cardId, setCardId] = useState(null);\n  const urlCard = \" http://52.148.70.171/card\";\n  const [chartData, setChartData] = useState({});\n  const [dates, setDates] = useState([]);\n  const [totals, setTotals] = useState([]);\n  const urlMonth = \" http://52.148.70.171/chart/monthly\";\n  const [chartWeek, setChartWeek] = useState({});\n  const [weekMonth, setWeekMonth] = useState([]);\n  const [totalWeek, setTotalWeek] = useState([]);\n  const urlWeek = \" http://52.148.70.171/chart/weekly\";\n  \n  const history = useHistory();\n\n\n  const toggle = () => setModal(!modal);\n  const collapse = () => {\n    setIsOpen(true);\n    setIsOpenWeek(false);\n  };\n  const collapseWeek = () => {\n    setIsOpenWeek(true);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setLoading(true);\n    axios\n      .get(urlSubscribe)\n      .then((res) => {\n        console.log(res.data);\n        setSubscribes(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n\n    dataMonth();\n    dataWeek();\n  }, []);\n\n  const subscribeDetails = (id) => {\n    setLoading(true);\n    const url = ` http://52.148.70.171/service?id=${id}`;\n    axios\n      .get(url)\n      .then((res) => {\n        console.log(\"subscribe id\", res.data);\n        setSubscribeId(res.data);\n        setModal(!modal);\n        setLoading(false);\n        subscribeCard();\n        setServiceId(id);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const subscribeCard = () => {\n    setLoading(true);\n    axios\n      .get(urlCard, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        setCard(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const subscribtion = (e) => {\n    e.preventDefault();\n    const url = ` http://52.148.70.171/subscription/${serviceId}/?cardId=${cardId}`;\n    // console.log(\"service Id \", serviceId, \"cardId \", cardId)\n    // console.log(token)\n    axios\n      .post(url, null, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        history.push(\"/history\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (loading) {\n    return (\n      <div>\n        <Row className=\"justify-content-center mt-5\">\n          <Spinner type=\"grow\" color=\"warning\" />\n        </Row>\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\n          Please wait...\n        </Row>\n      </div>\n    );\n  }\n\n  const dataMonth = () => {\n    let month = [];\n    let pay = [];\n    axios\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          month.push(dataObj.dates);\n          pay.push(dataObj.totals);\n        }\n        setChartData({\n          labels: month,\n          datasets: [\n            {\n              label: \"# Month\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132, 0.2)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n              pointBackgroundColor: \"rgb(255, 99, 132)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // console.log(dates, totals)\n  };\n\n  const dataWeek = () => {\n    let week = [];\n    let pay = [];\n    axios\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          week.push(dataObj.weekMonth);\n          pay.push(dataObj.totals);\n        }\n        setChartWeek({\n          labels: week,\n          datasets: [\n            {\n              label: \"# Week\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(dates, totals);\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <Container fluid className=\"content\">\n      <Container>\n        <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n          <Col xs=\"12\" className=\"bg-default\">\n            <Row>\n              <Col xs=\"6\">\n                <h4>Spending Value</h4>\n              </Col>\n              <Col xs=\"6\">\n                <div style={{ float: \"right\", position: \"relative\" }}>\n                  <Button\n                    id=\"button\"\n                    onClick={collapse}\n                    style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\n                  >\n                    Month\n                  </Button>\n                  <Button\n                    id=\"button\"\n                    onClick={collapseWeek}\n                    style={{ marginBottom: \"1rem\", marginRight: \"30px\" }}\n                  >\n                    Week\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs=\"12\" className=\"bg-default\">\n            <Collapse isOpen={isOpen}>\n              <Line data={chartData} options={options} />\n            </Collapse>\n            <Collapse isOpen={isOpenWeek}>\n              <Line data={chartWeek} options={options} />\n            </Collapse>\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <Row className=\"ml-0 mt-3 mb-0\">\n          <h3>Popular Apps</h3>\n        </Row>\n        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n      </Container>\n      <Container>\n        <Row>\n          {subscribes.map((subscribes) => (\n            <Col xs=\"3\" key={subscribes.id}>\n              <Card style={{ marginBottom: \"50px\" }}>\n                <CardImg\n                  top\n                  width=\"100%\"\n                  height=\"170px\"\n                  src={subscribes.picture}\n                  alt=\"subscribtion\"\n                  style={{border:\"0.5px solid grey\"}}\n                />\n                <CardBody className=\"bg-dangers\">\n                  <CardTitle\n                    tag=\"h6\"\n                    className=\"text-dark font-weight-bold text-center\"\n                  >\n                    <h5>{subscribes.name}</h5>\n                  </CardTitle>\n                  <Row>\n                    <Button\n                      onClick={() => subscribeDetails(subscribes.id)}\n                      className=\"btn btn-primary btn-block\"\n                      id=\"button\"\n                    >\n                      Subcribe\n                    </Button>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n        <Row>\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}></ModalHeader>\n            <ModalBody>\n              {subscribeId.map((subscribe) => (\n                <Col key={subscribe.id}>\n                  <CardTitle style={{textAlign:\"center\"}}><h5><strong>{subscribe.name}</strong></h5></CardTitle>\n                  <CardImg\n                    top\n                    width=\"15%\"\n                    src={subscribe.picture}\n                    style={{border:\"0.5px solid grey\"}}\n                    alt=\"subscribtion\"\n                  />\n                  <CardBody>\n                    <CardText style={{textAlign:\"justify\"}}>\n                      <p>{subscribe.description}</p>\n                    </CardText>\n                    <CardText>\n                      <p>Cost: <strong>IDR {subscribe.cost}</strong></p>\n                    </CardText>\n                    <Row>\n                      <Col md=\"8\">\n                        {/* {card.map((cards)=>(\n                                <Select\n\n                                value={cards.cardBank}/>\n                            ))} */}\n                        <Row>\n                          <FormGroup>\n                            <Input\n                              type=\"select\"\n                              name=\"cardId\"\n                              id=\"cardId\"\n                              onChange={(e) => {\n                                setCardId(e.target.value);\n                                console.log(e.target.value);\n                              }}\n                            >\n                              <option>Select Card</option>\n                              {card.length !== 0\n                                ? card.map((cards) => (\n                                    <option value={cards.id}>\n                                      {cards.cardBank}\n                                    </option>\n                                  ))\n                                : \"\"}\n                            </Input>\n                          </FormGroup>\n                        </Row>\n                      </Col>\n                      <Col>\n                        <Button\n                          onClick={subscribtion}\n                          className=\"btn btn-primary\"\n                          id=\"button\"\n                        >\n                          Subscribe\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Col>\n              ))}\n            </ModalBody>\n          </Modal>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js",["155","156","157","158","159","160","161"],"import React, {useState, useEffect} from 'react';\nimport {\n    Container,\n    Row,\n    CardImg,\n    Card,\n    Col,\n    CardBody,\n    CardTitle,\n    Button,\n    TabContent,\n    TabPane,\n    Nav,\n    NavItem,\n    NavLink,\n    Spinner,\n    \n} from 'reactstrap';\nimport subscribe from './img/subscribe.svg'\nimport expense from './img/expense.svg'\nimport budgetting from './img/budgetting.svg'\nimport history from './img/history.svg'\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faAd, faCoins, faDigitalTachograph, faClipboard} from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nconst Home = () =>{\n    const urlSubscribe = ' http://52.148.70.171/service';\n    const [subscribes, setSubscribes] = useState([]);\n    const [activeTab, setActiveTab] = useState('1');\n    const [loading, setLoading] = useState(false);\n    \n    \n    useEffect(() => {\n        setLoading(true);\n    \n        axios.get(urlSubscribe).then((res) => {\n          setSubscribes(res.data);\n          setLoading(false);\n        });\n      }, []);\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n      }\n    \n    const addIcon = <FontAwesomeIcon icon ={faAd}/>;\n    const addCoins = <FontAwesomeIcon icon ={faCoins}/>;\n    const addDigital = <FontAwesomeIcon icon ={faDigitalTachograph}/>;\n    const addClipboard = <FontAwesomeIcon icon={faClipboard}/>;\n\n    if (loading) {\n        return (\n          <div>\n            <Row className=\"justify-content-center mt-5\">\n              <Spinner type=\"grow\" color=\"warning\" />\n            </Row>\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\n              Loading...\n            </Row>\n          </div>\n        );\n    }\n    return(\n        <>\n            <Container fluid>\n                <Row className=\"banner\"> \n                    <Col xs=\"5\">\n                        <div className=\"logo\">\n                        <h1><b>Stress Free</b></h1>\n                        <h1><b>Subscription Manager</b></h1>\n                        <Button \n                            width=\"80px\"\n                            to=\"\"\n                            className=\"btn \" \n                            id=\"button\"\n                        >\n                            Try For Free\n                        </Button>\n\n                        </div>\n                    </Col>\n                    <Col xs=\"7\"> \n                        \n                        <div className=\"logo-gambar\"></div>   \n                        \n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid className=\"about\">\n            <h1 className=\"section\" >About US</h1>\n            <div className=\"section-title-divider \"></div>\n            \n                <div className=\"aboutIntro\">\n                    <h3><span className=\"text-green\">Manage</span> your subscription business from anywhere\n                    <br />\n                    You can easily keep a pulse on your subscription business in one platform, from anywhere.</h3>\n                \n                </div>\n            \n            </Container>\n            <Container fluid className=\"content\">\n                \n            <section id=\"features\" className=\"features\">\n                <Container >\n                    <Nav >\n                        <Col sm=\"3\" >\n                            <Card className=\"tabs\">\n                                <NavItem>\n                                    <NavLink className={classnames({ active: activeTab === '1'})}\n                                        onClick={() =>{toggle('1');}}\n                                    >\n                                        <Row><Col sm=\"8\"><h4>Subscribe</h4></Col>\n                                        <Col sm=\"4\" className=\"icon\"> {addIcon} </Col></Row>\n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        <Col sm=\"3\">\n                            <Card className=\"tabs\">\n                                <NavItem >\n                                    <NavLink className={classnames({active: activeTab === '2'})}\n                                    onClick={()=>{toggle('2');}}\n                                >\n                                   <Row><Col sm=\"8\" ><h4>Expense</h4></Col> \n                                   <Col sm=\"4\" className=\"icon\"> {addCoins} </Col></Row> \n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        <Col sm=\"3\">\n                            <Card className=\"tabs\">\n                                <NavItem>\n                                    <NavLink className={classnames({active: activeTab === '3'})}\n                                    onClick={()=>{toggle('3');}}\n                                >\n                                    <Row><Col sm=\"8\"><h4>Budgetting</h4></Col> \n                                    <Col sm=\"4\" className=\"icon\"> {addDigital} </Col></Row>\n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        <Col sm =\"3\">\n                            <Card className=\"tabs\">\n                                <NavItem>\n                                    <NavLink className={classnames({active: activeTab === '4'})}\n                                    onClick={()=>{toggle('4');}}\n                                >\n                                     <Row><Col sm=\"8\"><h4>History</h4></Col>\n                                      <Col sm=\"4\"className=\"icon\" > {addClipboard} </Col></Row>\n                                    </NavLink>\n                                </NavItem>\n                            </Card>\n                        </Col>\n                        \n                    </Nav>\n                   \n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                            <Row>\n                                <Col lg=\"12\">\n                                    <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                         <h3>Easily create a subscription website</h3>\n                                         <h4>Simply put in the items you wish to purchase on subscription, and the website builder will generate a subscription website for you \n                                            right away. Join a member and create your own management subscription service you want to make.\n                                        </h4>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={subscribe}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            <Row>\n                                <Col lg=\"12\">\n                                <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                            <h3>Control your own daily expense</h3>\n                                            \n                                         <h4>Expense</h4>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={expense}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            <Row>\n                                <Col lg=\"12\">\n                                <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                        <h3></h3>\n                                         <h4>Budgetting</h4>\n                                         </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={budgetting}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                            <Row>\n                                <Col lg=\"12\">\n                                <Row>\n                                    <Col lg=\"6\">\n                                        <div className=\"intro\">\n                                         <h3>Real-time reporting for finance and subscribtion</h3>\n                                         <h4>With full visibility of all business expenditure and powerful reporting features at your disposal,\n                                            SubsIt empowers you to make smarter financial decisions.\n                                            Process expenses as they are approved and post to your accounting package with ease.</h4>\n                                         </div>\n                                    </Col>\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\n                                        <img \n                                            src={history}\n                                            width=\"100%\"\n                                            height=\"400px\"\n                                        ></img>\n                                    </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </TabContent>\n                </Container>\n            </section>\n            </Container>\n            <Container fluid className=\"popular\">\n                <Container>\n                    <h1 className=\"section\" >Popular Apps</h1>\n                    <div className=\"section-title-divider \"></div>\n                <Row>\n                    {subscribes.slice(0,4).map((subscribes, i) =>(\n                        <Col sm=\"3\" key={i}>\n                        <Card>\n                            <CardImg\n                                top\n                                width=\"100%\"\n                                height=\"170px\"\n                                src={subscribes.picture}\n                                alt=\"subscribtion\"\n                            />\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\n                            <h4>{subscribes.name}</h4>\n                            </CardTitle>\n                        </Card>\n                        </Col>\n                    ))}\n                       \n                </Row>\n                </Container>\n            \n            </Container>\n            {/* <Container fluid className=\"team\">\n                <Container>\n                    <h1 className=\"section\" >Team</h1>\n                    <div className=\"section-title-divider \"></div>\n                </Container>\n            </Container> */}\n        </>\n    )\n}\n\nexport default Home;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js",["181","182"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Calendar from \"react-calendar\";\nimport Lendar from \"./img/calendar.svg\";\nimport \"./Modalender.css\"\n\nconst Modalender = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\n  return (\n    <div>\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\n           \n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\n        <ModalHeader>CALENDAR</ModalHeader>\n        <ModalBody>\n          <b>Your Schedule</b><br />\n            <Calendar />\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Modalender;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js",["183"],"import profile from \"./img/Ellipse 1.svg\";\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst ProfMenu = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle\n        tag=\"span\"\n        data-toggle=\"dropdown\"\n        aria-expanded={dropdownOpen}\n      >\n       <img src={profile}></img>\n      </DropdownToggle>\n      <DropdownMenu right>\n        <Link to=\"/profile\"><DropdownItem>View Profile</DropdownItem></Link>\n        <Link to=\"/logout\"><DropdownItem> Log Out</DropdownItem></Link>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nexport default ProfMenu;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js",["184","185","186","187","188","189"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Signup from \"./Signup\";\n\n\nconst Login = (props) => {\n  const { className } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <>\n      <div className=\"modal-dialog modal-login\">\n        <div className=\"modal-content\">\n          <div className=\"model-header\">\n            <h4 className=\"modal-title\">LOGIN</h4>\n            <button className=\"close\"></button>\n          </div>\n          <div className=\"modal-body\">\n            <form method=\"post\">\n              <div className=\"form-group\">\n                <i className=\"fa fa-user\"></i>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                  required=\"required\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <i className=\"fa fa-lock\"></i>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  required=\"required\"\n                />\n              </div>\n              <hr />\n              <div className=\"form-group\">\n                <Input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                  value=\"Login\"\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\n          </div>\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\n            <ModalBody>\n              <Signup />\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js",["190","191","192","193","194","195","196"],"import React, { useState } from \"react\";\nimport \"./Signup.css\";\nimport { \n  Modal, \n  ModalHeader, \n  ModalBody, \n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst SignUp = (props) => {\n  let history = useHistory();\n  const { buttonLabel, className } = props;\n\n  const [modalSignUp, setModalSignUp] = useState(false);\n  const [modalSignIn, setModalSignIn] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const checker = () => {\n    localStorage.getItem(\"token\") === null\n      ? setIsLoggedIn(false)\n      : setIsLoggedIn(true);\n  };\n\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\n  const toggleSignIn = () => {\n    setModalSignIn(!modalSignIn);\n    setModalSignUp(false);\n  };\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n  const [message, setMessage] = useState();\n\n  const handleSubmitSignUp = (e) => {\n    e.preventDefault();\n\n    setMessage({\n      data: \"Registration is in progress...\",\n      type: \"alert-warning\"\n    })\n    const urlSignUp =\n      \"  http://52.148.70.171/auth/register\";\n    const data = {\n      fullName: fullName,\n      email: email,\n      password: password,\n    };\n\n    axios.post(urlSignUp, data)\n    .then((ress) => {\n      return <Alert color=\"success\">You have registered successfully.</Alert>;\n      // console.log(ress.bodyData);\n      // <Alert color=\"primary\">Mantav</Alert>;\n    })\n    .then(() => {\n      history.push(toggleSignIn);\n    })\n    .catch((err) => {\n      return console(err);\n    })\n    // .then((error, data)=>{\n    //   // const hasError = \"error\" in data && data.error != null;\n    //   setMessage({\n    //     data: error || \"Registered Successfully\",\n    //     type: error ? \"alert-danger\" : \"alert-success\",\n    //   })\n    // })\n  };\n\n  const handleSubmitSignIn = (e) => {\n    e.preventDefault();\n\n    const urlSignIn =\n      \" http://52.148.70.171/auth/login\";\n    const bodyData = {\n      email: email,\n      password: password,\n    };\n\n    axios.post(urlSignIn, bodyData).then((res) => {\n      console.log(res);\n      const fullname = res.data.fullName;\n      const email = res.data.email;\n      const token = res.data.token;\n      Cookies.set(\"fullname\", fullname, { expires: 1 });\n      Cookies.set(\"email\", email, { expires: 1 });\n      Cookies.set(\"token\", token, { expires: 1 });\n      setUser(res.data);\n      history.push(`/Dashboard`);\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"SignUpModal\">\n        <div className=\"navigation\">\n          <a onClick={toggleSignUp}>{buttonLabel}Sign Up</a>\n        </div>\n\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\n          <ModalHeader toggle={toggleSignUp}>\n            <div className=\"ModalHeader\">\n              <p className=\"SignTitle\">Sign up for new account.</p>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={handleSubmitSignUp}>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Full Name</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"text\"\n                  color=\"primary\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter full name\"\n                  onChange={(e) => setFullName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Email</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Password</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button\n                id=\"submitButton\"\n                background-color=\"#8F48EA\"\n                type=\"submit\"\n                className=\"btn btn-block\"\n                onClick={toggleSignIn}\n              >\n                Sign Up\n              </Button>\n              <p className=\"Login\">\n                Already have an account?{\" \"}\n                <Button  id=\"submitButton\" onClick={toggleSignIn}>\n                  {buttonLabel}Login\n                </Button>\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\n              </p>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n\n      <div className=\"SignInModal\">\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\n          <ModalHeader toggle={toggleSignIn}>\n          <div className=\"ModalHeader\">\n              <p className=\"SignTitle\">Please login to continue.</p>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={handleSubmitSignIn}>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Email</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Password</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button\n                id=\"submitButton\"\n                type=\"submit\"\n                color=\"primary\"\n                className=\"btn btn-block\"\n                onClick={toggleSignIn}\n              >\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>\n\n    // </div>\n  );\n};\n\nexport default SignUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js",["197","198","199","200","201","202"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js",["203"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst TopUp = (props) => {\n  const { className } = props;\n\n  const urlCard = \" http://52.148.70.171/card\";\n\n  const [results, setResults] = useState(\"\");\n  const [saldo, setSaldo] = useState(null);\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n\n    const data = {\n      saldo: saldo,\n    };\n\n    axios\n      .patch(`http://52.148.70.171/card?cardNumber=${cardNumber}`, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n        <strong>Top-up</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Top-up your balance here.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"cardNumber\">Select Card</Label>\n                <Input\n                  type=\"select\"\n                  name=\"cardNumber\"\n                  id=\"cardNumber\"\n                  onChange={(e) => setCardNumber(e.target.value)}\n                >\n                  <option>Select card</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.cardNumber}>\n                          {result.cardBank} - IDR {result.saldo}\n                        </option>\n                      ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"saldo\">Top-up amount:</Label>\n                <Input\n                  type=\"select\"\n                  name=\"saldo\"\n                  id=\"saldo\"\n                  onClick={(e) => setSaldo(e.target.value)}\n                >\n                  <option>Select amount</option>\n                  <option>50000</option>\n                  <option>100000</option>\n                  <option>250000</option>\n                  <option>500000</option>\n                  <option>1000000</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  type=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TopUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js",["204"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { X } from \"react-feather\";\nimport expense from \"../assets/expense.png\";\nimport \"./Profile.css\";\nimport {Element} from \"react-scroll\"\nimport Moment from 'react-moment';\n\n\nconst ShowExpenses = () => {\n  const [results, setResults] = useState(\"\");\n\n  const urlExpense = \" http://52.148.70.171/expense\";\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlExpense, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`http://52.148.70.171/expense/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      });\n  };\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\n          <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n                \n              }}\n            >\n            <thead\n              className=\"text-center\"\n              style={{ backgroundColor: \"#BA8FF2\" }}\n            >\n              <tr>\n                <th style={{ width: \"50%\" }}>Date</th>\n                <th>Transaction</th>\n                <th>Currency</th>\n                <th>Costs</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            \n            {results.length !== 0 ? (\n              results.map((result) => (\n                <tbody>\n                  <tr>\n                    <td className=\"text-center\"><Moment format=\"D MMM YYYY\" >{result.purchaseDate}</Moment></td>\n                    <td className=\"text-center\" style={{ width: \"50%\" }}>{result.title}</td>\n                    <td className=\"text-center\">IDR</td>\n                    <td className=\"text-center\">{result.total}</td>\n                    <td style={{ width: \"100%\" }} className=\"text-center\">\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.id);\n                        }}\n                        color=\"danger\"\n                        outline\n                      >\n                        <X size={15} />\n                      </Button>\n                    </td>\n                  </tr>\n                </tbody>\n                \n              ))\n            \n              )  : (\n              <tbody>\n                <tr>\n                  <td colSpan=\"6\">\n                    <Container>\n                      <p style={{ opacity: \"60%\" }}>\n                        <i>\n                          <strong>No expense found.</strong>\n                        </i>\n                      </p>\n                      <Col className=\"subs3\">\n                        <img\n                          src={expense}\n                          alt=\"\"\n                          style={{\n                            width: \"40%\",\n                            opacity: \"0%\",\n                            position: \"center\",\n                          }}\n                        />\n                      </Col>\n                    </Container>\n                  </td>\n                </tr>\n              </tbody>\n            )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ShowExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js",["205"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport './Profile.css'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AddExpenses = (props) => {\n\n  const urlExpense = \" http://52.148.70.171/expense\";\n\n  const urlCard = \" http://52.148.70.171/card\";\n\n  const urlCategories = \" http://52.148.70.171/categories\";\n\n  const token = Cookies.get(\"token\");\n\n  const { className } = props;\n\n  const [cards, setCards] = useState(\"\");\n\n  const [title, setTitle] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [cardId, setCardId] = useState(null);\n  const [categoryId, setCategoryId] = useState(\"\");\n\n  const [categories, setCategories] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCards(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n      axios\n      .get(urlCategories)\n      .then((res) => {\n        console.log(res.data);\n        setCategories(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: title,\n      total: total,\n      purchaseDate: purchaseDate,\n      cardId: cardId,\n      categoryId: categoryId\n    };\n    \n    axios\n      .post(urlExpense, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n      <strong>New Expense </strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Add New Expenses</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"title\">Title</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"total\">Paid amount</Label>\n                  <Input\n                    type=\"total\"\n                    name=\"total\"\n                    id=\"total\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setTotal(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"categoryId\">Expense Type</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"categoryId\"\n                    id=\"categoryId\"\n                    onChange={(e) => setCategoryId(e.target.value)}\n                  >\n                    <option>Select expense type</option>\n                  {categories.length !== 0\n                    ? categories.map((category) => <option value={category.id}>{category.category}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"purchaseDate\">Purchase Date</Label>\n                  <Input\n                    type=\"date\"\n                    name=\"purchaseDate\"\n                    id=\"purchaseDate\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setPurchaseDate(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <Label for=\"cardId\">Select Card</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"cardId\"\n                    id=\"cardId\"\n                    onChange={(e) => setCardId(e.target.value)}\n                  >\n                    <option>Select card</option>\n                  {cards.length !== 0\n                    ? cards.map((card) => <option value={card.id}>{card.cardBank} - IDR {card.saldo}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Button\n                block\n                type=\"submit\"\n                onClick={toggle}\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n              >\n                <strong>Add New Expense</strong>\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js",["206"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { \n  Container, \n  Row, \n  Col, \n  Table, \n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport { X, Edit3 } from \"react-feather\";\nimport \"./Profile.css\";\nimport debtPic from \"../assets/debt2.png\";\nimport { Element } from \"react-scroll\";\nimport Moment from 'react-moment';\n\nconst ShowDebt = () => {\n  const [debt, setDebt] = useState([]);\n\n  const url = \"http://52.148.70.171/debts/notes\";\n  const token = Cookies.get(\"token\");\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(null);\n  const [dueDate, setDueDate] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(url, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        setDebt(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    axios\n      .delete(` http://52.148.70.171/debts/delete?id=${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        return window.location.reload();\n      });\n  };\n\n  const handleSubmit = (id) => {\n    const data = {\n      name: name,\n      description: description,\n      amount: amount,\n      type: type,\n      dueDate: dueDate,\n    };\n\n    axios\n      .patch(`http://52.148.70.171/debts/update?id=${id}`, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Table hover style={{ backgroundColor: \"whitesmoke\" , width:\"100%\"}}>\n          <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n                \n              }}\n            >\n            <thead\n              className=\"text-center\"\n              style={{ backgroundColor: \"#BA8FF2\", width:\"100%\" }}\n            >\n              <tr>\n                <th>Due Date</th>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Type</th>\n                <th>Cost</th>\n                <th>Edit </th>\n                \n                <th>Dellete </th>\n              </tr>\n            </thead>\n            {debt.length !== 0 ? (\n              debt.map((debts) => (\n                <tbody style={{ justifyContent: \"center\" }}>\n                  <tr className=\"text-center\">\n                   <td style={{ paddingTop: \"16px\" }}> <Moment format=\"D MMM YYYY\">{debts.dueDate}</Moment></td>\n                    <td style={{ paddingTop: \"16px\" }}>{debts.name}</td>\n                    <td style={{ paddingTop: \"16px\" }}>{debts.description}</td>\n                    <td style={{ paddingTop: \"16px\" }}>{debts.type}</td>\n                    <td style={{ paddingTop: \"16px\" }}>{debts.amount}</td>\n                    <td>\n                      <Row style={{ justifyContent: \"center\" }}>\n                        <Button\n                          size=\"sm\"\n                          style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n                          onClick={toggle}\n                        >\n                          <Edit3 size={15} />\n                        </Button>\n                        </Row>\n                        </td>\n                        <Modal\n                          isOpen={modal}\n                          toggle={toggle}\n                        >\n                          <ModalHeader toggle={toggle}>\n                            <p>Edit Debt</p>\n                          </ModalHeader>\n                          <ModalBody>\n                            <Form onSubmit={handleSubmit}>\n                              <Container>\n                                <FormGroup>\n                                  <Label for=\"name\">Name</Label>\n                                  <Input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    onChange={(e) => setName(e.target.value)}\n                                  ></Input>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Label for=\"description\">Description</Label>\n                                  <Input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    id=\"description\"\n                                    onChange={(e) =>\n                                      setDescription(e.target.value)\n                                    }\n                                  ></Input>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Label for=\"amount\">Amount</Label>\n                                  <Input\n                                    type=\"number\"\n                                    name=\"amount\"\n                                    id=\"amount\"\n                                    onChange={(e) => setAmount(e.target.value)}\n                                  ></Input>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Label for=\"type\">Type</Label>\n                                  <Input\n                                    type=\"select\"\n                                    name=\"type\"\n                                    id=\"type\"\n                                    onChange={(e) => setType(e.target.value)}\n                                  >\n                                    <option>Select Type</option>\n                                    <option>Payable</option>\n                                    <option>Receivable</option>\n                                  </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Label for=\"dueDate\">Due Date</Label>\n                                  <Input\n                                    type=\"date\"\n                                    name=\"dueDate\"\n                                    id=\"dueDate\"\n                                    onChange={(e) => setDueDate(e.target.value)}\n                                  ></Input>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Button\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      handleSubmit(debts.id);\n                                    }}\n                                    block\n                                    outline\n                                    style={{\n                                      backgroundColor: \"#8F48EA\",\n                                      color: \"white\",\n                                    }}\n                                  >\n                                    <strong>Confirm</strong>\n                                  </Button>\n                                </FormGroup>\n                              </Container>\n                            </Form>\n                          </ModalBody>\n                        </Modal>\n                        \n                        <td>\n                          <Row style={{ justifyContent: \"center\" }}>\n                        <Button\n                          size=\"sm\"\n                          onClick={() => {\n                            if (\n                              window.confirm(\n                                \"Are you sure you want to remove this item?\"\n                              )\n                            )\n                              handleDelete(debts.id);\n                          }}\n                          color=\"danger\"\n                          outline\n                        >\n                          <X size={15} />\n                        </Button>\n                      </Row>\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n            ) : (\n              <tbody>\n                <tr>\n                  <td colSpan=\"7\">\n                    <Container>\n                      <p style={{ opacity: \"60%\" }}>\n                        <i>\n                          <strong>No record found.</strong>\n                        </i>\n                      </p>\n                      <Col className=\"subs5\">\n                        <img\n                          src={debtPic}\n                          alt=\"\"\n                          style={{\n                            width: \"70%\",\n                            opacity: \"0%\",\n                            position: \"center\",\n                          }}\n                        />\n                      </Col>\n                    </Container>\n                  </td>\n                </tr>\n              </tbody>\n            )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default ShowDebt;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js",["207"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// import Loading from './Loading'\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\nimport visa from \"../assets/visa.png\";\nimport master from \"../assets/mastercard.png\";\nimport \"./Profile.css\";\nimport expense from \"../assets/expense.png\";\n\nfunction CheckStatus() {\n  const [results, setResults] = useState(\"\");\n\n  const urlCard = \" http://52.148.70.171/card\";\n\n  const token = Cookies.get(\"token\");\n\n  console.log(results);\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`${urlCard}?cardNumber=${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n        // setLoading(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Row>\n        {results.length !== 0 ? (\n          results.map((result) => {\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4}>\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4}>\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Master\"\n            ) {\n              return (\n                <Col md={4}>\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Visa\"\n            ) {\n              return (\n                <Col md={4}>\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4}>\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4}>\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else {\n              return (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No card found. Please add card first.</strong>\n                    </i>\n                  </p>\n                </Container>\n              );\n            }\n          })\n        ) : (\n          <Container>\n            <p style={{ opacity: \"60%\" }}>\n              <i>\n                <strong>No card found. Please add card first.</strong>\n              </i>\n            </p>\n            <Col className=\"subs4\">\n              <img\n                src={expense}\n                alt=\"\"\n                style={{\n                  width: \"50%\",\n                  opacity: \"0%\",\n                  position: \"center\",\n                }}\n              />\n            </Col>\n          </Container>\n          // <Loading />\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default CheckStatus;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":41,"column":6,"nodeType":"214","endLine":41,"endColumn":8,"suggestions":"215"},{"ruleId":"212","severity":1,"message":"216","line":39,"column":6,"nodeType":"214","endLine":39,"endColumn":8,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":41,"column":69,"nodeType":"220","messageId":"221","endLine":41,"endColumn":71},{"ruleId":"218","severity":1,"message":"219","line":87,"column":41,"nodeType":"220","messageId":"221","endLine":87,"endColumn":43},{"ruleId":"222","severity":1,"message":"223","line":6,"column":3,"nodeType":"224","messageId":"225","endLine":6,"endColumn":16},{"ruleId":"222","severity":1,"message":"226","line":9,"column":3,"nodeType":"224","messageId":"225","endLine":9,"endColumn":6},{"ruleId":"222","severity":1,"message":"227","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":13},{"ruleId":"222","severity":1,"message":"228","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":14},{"ruleId":"222","severity":1,"message":"229","line":17,"column":8,"nodeType":"224","messageId":"225","endLine":17,"endColumn":11},{"ruleId":"222","severity":1,"message":"230","line":18,"column":8,"nodeType":"224","messageId":"225","endLine":18,"endColumn":13},{"ruleId":"222","severity":1,"message":"231","line":22,"column":8,"nodeType":"224","messageId":"225","endLine":22,"endColumn":21},{"ruleId":"222","severity":1,"message":"232","line":29,"column":9,"nodeType":"224","messageId":"225","endLine":29,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":36,"column":15,"nodeType":"235","endLine":36,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":47,"column":19,"nodeType":"235","endLine":47,"endColumn":31},{"ruleId":"236","severity":1,"message":"237","line":50,"column":19,"nodeType":"235","endLine":50,"endColumn":31},{"ruleId":"222","severity":1,"message":"238","line":20,"column":3,"nodeType":"224","messageId":"225","endLine":20,"endColumn":8},{"ruleId":"222","severity":1,"message":"239","line":22,"column":8,"nodeType":"224","messageId":"225","endLine":22,"endColumn":15},{"ruleId":"222","severity":1,"message":"240","line":23,"column":8,"nodeType":"224","messageId":"225","endLine":23,"endColumn":12},{"ruleId":"222","severity":1,"message":"241","line":24,"column":8,"nodeType":"224","messageId":"225","endLine":24,"endColumn":14},{"ruleId":"222","severity":1,"message":"242","line":25,"column":8,"nodeType":"224","messageId":"225","endLine":25,"endColumn":16},{"ruleId":"222","severity":1,"message":"243","line":26,"column":8,"nodeType":"224","messageId":"225","endLine":26,"endColumn":15},{"ruleId":"222","severity":1,"message":"244","line":27,"column":8,"nodeType":"224","messageId":"225","endLine":27,"endColumn":12},{"ruleId":"222","severity":1,"message":"245","line":28,"column":10,"nodeType":"224","messageId":"225","endLine":28,"endColumn":14},{"ruleId":"222","severity":1,"message":"246","line":28,"column":16,"nodeType":"224","messageId":"225","endLine":28,"endColumn":25},{"ruleId":"222","severity":1,"message":"247","line":31,"column":10,"nodeType":"224","messageId":"225","endLine":31,"endColumn":20},{"ruleId":"222","severity":1,"message":"248","line":81,"column":10,"nodeType":"224","messageId":"225","endLine":81,"endColumn":19},{"ruleId":"222","severity":1,"message":"249","line":81,"column":21,"nodeType":"224","messageId":"225","endLine":81,"endColumn":33},{"ruleId":"222","severity":1,"message":"250","line":87,"column":17,"nodeType":"224","messageId":"225","endLine":87,"endColumn":25},{"ruleId":"222","severity":1,"message":"251","line":88,"column":18,"nodeType":"224","messageId":"225","endLine":88,"endColumn":27},{"ruleId":"222","severity":1,"message":"252","line":91,"column":10,"nodeType":"224","messageId":"225","endLine":91,"endColumn":19},{"ruleId":"222","severity":1,"message":"253","line":91,"column":21,"nodeType":"224","messageId":"225","endLine":91,"endColumn":33},{"ruleId":"222","severity":1,"message":"254","line":92,"column":10,"nodeType":"224","messageId":"225","endLine":92,"endColumn":19},{"ruleId":"222","severity":1,"message":"255","line":92,"column":21,"nodeType":"224","messageId":"225","endLine":92,"endColumn":33},{"ruleId":"212","severity":1,"message":"256","line":123,"column":6,"nodeType":"214","endLine":123,"endColumn":8,"suggestions":"257"},{"ruleId":"222","severity":1,"message":"258","line":8,"column":5,"nodeType":"224","messageId":"225","endLine":8,"endColumn":13},{"ruleId":"222","severity":1,"message":"245","line":23,"column":10,"nodeType":"224","messageId":"225","endLine":23,"endColumn":14},{"ruleId":"233","severity":1,"message":"234","line":174,"column":41,"nodeType":"235","endLine":178,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":196,"column":41,"nodeType":"235","endLine":200,"endColumn":42},{"ruleId":"259","severity":1,"message":"260","line":212,"column":41,"nodeType":"235","endLine":212,"endColumn":45},{"ruleId":"233","severity":1,"message":"234","line":217,"column":41,"nodeType":"235","endLine":221,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":240,"column":41,"nodeType":"235","endLine":244,"endColumn":42},{"ruleId":"222","severity":1,"message":"261","line":10,"column":3,"nodeType":"224","messageId":"225","endLine":10,"endColumn":11},{"ruleId":"222","severity":1,"message":"262","line":12,"column":3,"nodeType":"224","messageId":"225","endLine":12,"endColumn":8},{"ruleId":"222","severity":1,"message":"263","line":13,"column":3,"nodeType":"224","messageId":"225","endLine":13,"endColumn":14},{"ruleId":"222","severity":1,"message":"264","line":15,"column":3,"nodeType":"224","messageId":"225","endLine":15,"endColumn":12},{"ruleId":"222","severity":1,"message":"245","line":18,"column":10,"nodeType":"224","messageId":"225","endLine":18,"endColumn":14},{"ruleId":"222","severity":1,"message":"247","line":21,"column":10,"nodeType":"224","messageId":"225","endLine":21,"endColumn":20},{"ruleId":"222","severity":1,"message":"265","line":25,"column":8,"nodeType":"224","messageId":"225","endLine":25,"endColumn":15},{"ruleId":"222","severity":1,"message":"266","line":46,"column":10,"nodeType":"224","messageId":"225","endLine":46,"endColumn":19},{"ruleId":"222","severity":1,"message":"267","line":48,"column":9,"nodeType":"224","messageId":"225","endLine":48,"endColumn":17},{"ruleId":"222","severity":1,"message":"268","line":50,"column":10,"nodeType":"224","messageId":"225","endLine":50,"endColumn":21},{"ruleId":"222","severity":1,"message":"269","line":50,"column":23,"nodeType":"224","messageId":"225","endLine":50,"endColumn":37},{"ruleId":"222","severity":1,"message":"252","line":53,"column":10,"nodeType":"224","messageId":"225","endLine":53,"endColumn":19},{"ruleId":"222","severity":1,"message":"253","line":53,"column":21,"nodeType":"224","messageId":"225","endLine":53,"endColumn":33},{"ruleId":"222","severity":1,"message":"254","line":54,"column":10,"nodeType":"224","messageId":"225","endLine":54,"endColumn":19},{"ruleId":"222","severity":1,"message":"255","line":54,"column":21,"nodeType":"224","messageId":"225","endLine":54,"endColumn":33},{"ruleId":"222","severity":1,"message":"250","line":55,"column":17,"nodeType":"224","messageId":"225","endLine":55,"endColumn":25},{"ruleId":"222","severity":1,"message":"251","line":56,"column":18,"nodeType":"224","messageId":"225","endLine":56,"endColumn":27},{"ruleId":"222","severity":1,"message":"232","line":67,"column":9,"nodeType":"224","messageId":"225","endLine":67,"endColumn":15},{"ruleId":"212","severity":1,"message":"270","line":109,"column":6,"nodeType":"214","endLine":109,"endColumn":8,"suggestions":"271"},{"ruleId":"222","severity":1,"message":"272","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":20,"column":9,"nodeType":"235","endLine":20,"endColumn":70},{"ruleId":"233","severity":1,"message":"234","line":18,"column":8,"nodeType":"235","endLine":18,"endColumn":27},{"ruleId":"222","severity":1,"message":"272","line":3,"column":3,"nodeType":"224","messageId":"225","endLine":3,"endColumn":9},{"ruleId":"222","severity":1,"message":"263","line":6,"column":3,"nodeType":"224","messageId":"225","endLine":6,"endColumn":14},{"ruleId":"222","severity":1,"message":"273","line":8,"column":3,"nodeType":"224","messageId":"225","endLine":8,"endColumn":14},{"ruleId":"222","severity":1,"message":"274","line":10,"column":10,"nodeType":"224","messageId":"225","endLine":10,"endColumn":16},{"ruleId":"222","severity":1,"message":"275","line":10,"column":18,"nodeType":"224","messageId":"225","endLine":10,"endColumn":23},{"ruleId":"222","severity":1,"message":"276","line":15,"column":11,"nodeType":"224","messageId":"225","endLine":15,"endColumn":20},{"ruleId":"222","severity":1,"message":"227","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":13},{"ruleId":"222","severity":1,"message":"277","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":17},{"ruleId":"222","severity":1,"message":"278","line":26,"column":10,"nodeType":"224","messageId":"225","endLine":26,"endColumn":20},{"ruleId":"222","severity":1,"message":"279","line":28,"column":9,"nodeType":"224","messageId":"225","endLine":28,"endColumn":16},{"ruleId":"222","severity":1,"message":"280","line":43,"column":10,"nodeType":"224","messageId":"225","endLine":43,"endColumn":14},{"ruleId":"222","severity":1,"message":"281","line":44,"column":10,"nodeType":"224","messageId":"225","endLine":44,"endColumn":17},{"ruleId":"236","severity":1,"message":"282","line":109,"column":11,"nodeType":"235","endLine":109,"endColumn":37},{"ruleId":"222","severity":1,"message":"272","line":6,"column":3,"nodeType":"224","messageId":"225","endLine":6,"endColumn":9},{"ruleId":"222","severity":1,"message":"226","line":11,"column":3,"nodeType":"224","messageId":"225","endLine":11,"endColumn":6},{"ruleId":"222","severity":1,"message":"283","line":18,"column":10,"nodeType":"224","messageId":"225","endLine":18,"endColumn":14},{"ruleId":"222","severity":1,"message":"284","line":18,"column":16,"nodeType":"224","messageId":"225","endLine":18,"endColumn":23},{"ruleId":"222","severity":1,"message":"285","line":19,"column":10,"nodeType":"224","messageId":"225","endLine":19,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":36,"column":6,"nodeType":"214","endLine":36,"endColumn":8,"suggestions":"286"},{"ruleId":"212","severity":1,"message":"213","line":39,"column":6,"nodeType":"214","endLine":39,"endColumn":8,"suggestions":"287"},{"ruleId":"212","severity":1,"message":"213","line":31,"column":6,"nodeType":"214","endLine":31,"endColumn":8,"suggestions":"288"},{"ruleId":"212","severity":1,"message":"213","line":63,"column":6,"nodeType":"214","endLine":63,"endColumn":8,"suggestions":"289"},{"ruleId":"212","severity":1,"message":"213","line":46,"column":6,"nodeType":"214","endLine":46,"endColumn":8,"suggestions":"290"},{"ruleId":"212","severity":1,"message":"213","line":54,"column":6,"nodeType":"214","endLine":54,"endColumn":8,"suggestions":"291"},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["294"],"React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["295"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'NavbarToggler' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Login' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.",["296"],"'CardBody' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["297"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'loading' is assigned a value but never used.",["298"],["299"],["300"],["301"],["302"],["303"],"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"304","fix":"312"},{"desc":"304","fix":"313"},{"desc":"304","fix":"314"},{"desc":"304","fix":"315"},{"desc":"304","fix":"316"},{"desc":"304","fix":"317"},"Update the dependencies array to be: [token]",{"range":"318","text":"319"},"Update the dependencies array to be: [token, upComing]",{"range":"320","text":"321"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"322","text":"323"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"324","text":"325"},{"range":"326","text":"319"},{"range":"327","text":"319"},{"range":"328","text":"319"},{"range":"329","text":"319"},{"range":"330","text":"319"},{"range":"331","text":"319"},[882,884],"[token]",[1160,1162],"[token, upComing]",[3345,3347],"[dataMonth, dataWeek]",[2989,2991],"[dataMonth, dataWeek, token]",[871,873],[810,812],[806,808],[1347,1349],[1092,1094],[1198,1200]]
=======
[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"13"},{"size":567,"mtime":1607762145127,"results":"14","hashOfConfig":"15"},{"size":2451,"mtime":1607762145101,"results":"16","hashOfConfig":"15"},{"size":2083,"mtime":1608114707169,"results":"17","hashOfConfig":"15"},{"size":5524,"mtime":1608207208944,"results":"18","hashOfConfig":"15"},{"size":9954,"mtime":1608282582097,"results":"19","hashOfConfig":"15"},{"size":12872,"mtime":1608283088069,"results":"20","hashOfConfig":"15"},{"size":7028,"mtime":1608288920363,"results":"21","hashOfConfig":"15"},{"size":3755,"mtime":1608284488261,"results":"22","hashOfConfig":"15"},{"size":2431,"mtime":1608285070108,"results":"23","hashOfConfig":"15"},{"size":12215,"mtime":1608285374628,"results":"24","hashOfConfig":"15"},{"size":1019,"mtime":1608026248734,"results":"25","hashOfConfig":"15"},{"size":3642,"mtime":1608282582095,"results":"26","hashOfConfig":"15"},{"size":2657,"mtime":1608290159626,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1lm62wj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],["57","58"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["59"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport avatar from \"../assets/avatar2.png\";\r\nimport \"./Profile.css\";\r\nimport { User, Mail } from \"react-feather\";\r\nimport Edit from \"./EditProfile\";\r\nimport TabProfile from \"./TabProfile\";\r\n\r\nconst Profile = () => {\r\n  const [users, setUsers] = useState(\"\");\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  useEffect(() => {\r\n\r\n    document.body.style.backgroundColor = \"#E5E5E5\"\r\n\r\n    axios\r\n      .get(\r\n        ` http://52.148.70.171/auth/user/`, {\r\n            headers: {Authorization : `Bearer ${token}`}\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUsers(res.data);\r\n      })\r\n      .catch((error) => {\r\n      console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col xl=\"4\" sm=\"12\">\r\n          <Card>\r\n            {users.length !== 0 ? (\r\n              users.map((user)=> (\r\n                <CardBody key={user.id} className=\"cardBody\">\r\n                <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\r\n                <Row className=\"rowright\">\r\n                  <Container>\r\n                    <Edit />\r\n                  </Container>\r\n                </Row>\r\n                <CardTitle>\r\n                  <Container>\r\n                    <p>\r\n                      <User size={22} /> {user.fullName}\r\n                    </p>\r\n                  </Container>\r\n                  <Container>\r\n                    <p>\r\n                      <Mail size={22} /> {user.email}\r\n                    </p>\r\n                  </Container>\r\n                </CardTitle>\r\n              </CardBody>\r\n              ))\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xl=\"8\" sm=\"12\">\r\n          <TabProfile />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js",["60"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js",["61"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["62","63","64","65","66","67","68"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["69","70","71","72","73","74"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js",["75","76","77","78","79","80"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["100","101","102"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["103","104","105","106","107","108","109","110","111"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\nimport { Calendar, PieChart } from 'react-feather';\r\nimport CalendarEvent from \"../components/Calendar\";\r\n\r\nimport Bells from \"./Bells\";\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\r\n      <Navbar expand=\"md\" style={{backgroundColor:\"#fefefe\", }}>\r\n      <NavbarBrand className=\"lognav\" href=\"/\" >\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li className=\"liquid1\"></li>\r\n                <li>\r\n                <Button id=\"transparant\">About</Button>\r\n                </li>\r\n                <li>\r\n                <Button id=\"transparant\"> Product</Button>\r\n                </li>\r\n                <li>\r\n                  <Signup />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            \r\n            <div>\r\n              {/* <NavbarBrand className=\"lognav\" href=\"/\" >\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand> */}\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <PieChart style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Calendar\">\r\n                    <Calendar style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Bells />\r\n                </li>\r\n                <li>\r\n                  <ProfMenu/>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":41,"column":6,"nodeType":"118","endLine":41,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"117","line":63,"column":6,"nodeType":"118","endLine":63,"endColumn":8,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":46,"column":6,"nodeType":"118","endLine":46,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":8,"column":5,"nodeType":"124","messageId":"125","endLine":8,"endColumn":13},{"ruleId":"122","severity":1,"message":"126","line":23,"column":10,"nodeType":"124","messageId":"125","endLine":23,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":174,"column":41,"nodeType":"129","endLine":178,"endColumn":42},{"ruleId":"127","severity":1,"message":"128","line":196,"column":41,"nodeType":"129","endLine":200,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":212,"column":41,"nodeType":"129","endLine":212,"endColumn":45},{"ruleId":"127","severity":1,"message":"128","line":217,"column":41,"nodeType":"129","endLine":221,"endColumn":42},{"ruleId":"127","severity":1,"message":"128","line":240,"column":41,"nodeType":"129","endLine":244,"endColumn":42},{"ruleId":"122","severity":1,"message":"132","line":15,"column":8,"nodeType":"124","messageId":"125","endLine":15,"endColumn":13},{"ruleId":"122","severity":1,"message":"133","line":16,"column":8,"nodeType":"124","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"122","severity":1,"message":"134","line":26,"column":10,"nodeType":"124","messageId":"125","endLine":26,"endColumn":20},{"ruleId":"122","severity":1,"message":"135","line":28,"column":9,"nodeType":"124","messageId":"125","endLine":28,"endColumn":16},{"ruleId":"122","severity":1,"message":"136","line":43,"column":10,"nodeType":"124","messageId":"125","endLine":43,"endColumn":14},{"ruleId":"122","severity":1,"message":"137","line":44,"column":10,"nodeType":"124","messageId":"125","endLine":44,"endColumn":17},{"ruleId":"122","severity":1,"message":"138","line":6,"column":3,"nodeType":"124","messageId":"125","endLine":6,"endColumn":9},{"ruleId":"122","severity":1,"message":"139","line":11,"column":3,"nodeType":"124","messageId":"125","endLine":11,"endColumn":6},{"ruleId":"122","severity":1,"message":"140","line":18,"column":10,"nodeType":"124","messageId":"125","endLine":18,"endColumn":14},{"ruleId":"122","severity":1,"message":"141","line":18,"column":16,"nodeType":"124","messageId":"125","endLine":18,"endColumn":23},{"ruleId":"122","severity":1,"message":"142","line":19,"column":10,"nodeType":"124","messageId":"125","endLine":19,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":36,"column":6,"nodeType":"118","endLine":36,"endColumn":8,"suggestions":"143"},{"ruleId":"122","severity":1,"message":"144","line":20,"column":3,"nodeType":"124","messageId":"125","endLine":20,"endColumn":8},{"ruleId":"122","severity":1,"message":"145","line":22,"column":8,"nodeType":"124","messageId":"125","endLine":22,"endColumn":15},{"ruleId":"122","severity":1,"message":"146","line":23,"column":8,"nodeType":"124","messageId":"125","endLine":23,"endColumn":12},{"ruleId":"122","severity":1,"message":"147","line":24,"column":8,"nodeType":"124","messageId":"125","endLine":24,"endColumn":14},{"ruleId":"122","severity":1,"message":"148","line":25,"column":8,"nodeType":"124","messageId":"125","endLine":25,"endColumn":16},{"ruleId":"122","severity":1,"message":"149","line":26,"column":8,"nodeType":"124","messageId":"125","endLine":26,"endColumn":15},{"ruleId":"122","severity":1,"message":"150","line":27,"column":8,"nodeType":"124","messageId":"125","endLine":27,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":28,"column":10,"nodeType":"124","messageId":"125","endLine":28,"endColumn":14},{"ruleId":"122","severity":1,"message":"151","line":28,"column":16,"nodeType":"124","messageId":"125","endLine":28,"endColumn":25},{"ruleId":"122","severity":1,"message":"152","line":31,"column":10,"nodeType":"124","messageId":"125","endLine":31,"endColumn":20},{"ruleId":"122","severity":1,"message":"153","line":81,"column":10,"nodeType":"124","messageId":"125","endLine":81,"endColumn":19},{"ruleId":"122","severity":1,"message":"154","line":81,"column":21,"nodeType":"124","messageId":"125","endLine":81,"endColumn":33},{"ruleId":"122","severity":1,"message":"155","line":87,"column":17,"nodeType":"124","messageId":"125","endLine":87,"endColumn":25},{"ruleId":"122","severity":1,"message":"156","line":88,"column":18,"nodeType":"124","messageId":"125","endLine":88,"endColumn":27},{"ruleId":"122","severity":1,"message":"157","line":91,"column":10,"nodeType":"124","messageId":"125","endLine":91,"endColumn":19},{"ruleId":"122","severity":1,"message":"158","line":91,"column":21,"nodeType":"124","messageId":"125","endLine":91,"endColumn":33},{"ruleId":"122","severity":1,"message":"159","line":92,"column":10,"nodeType":"124","messageId":"125","endLine":92,"endColumn":19},{"ruleId":"122","severity":1,"message":"160","line":92,"column":21,"nodeType":"124","messageId":"125","endLine":92,"endColumn":33},{"ruleId":"116","severity":1,"message":"161","line":123,"column":6,"nodeType":"118","endLine":123,"endColumn":8,"suggestions":"162"},{"ruleId":"116","severity":1,"message":"163","line":38,"column":6,"nodeType":"118","endLine":38,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":40,"column":69,"nodeType":"167","messageId":"168","endLine":40,"endColumn":71},{"ruleId":"165","severity":1,"message":"166","line":84,"column":41,"nodeType":"167","messageId":"168","endLine":84,"endColumn":43},{"ruleId":"122","severity":1,"message":"169","line":6,"column":3,"nodeType":"124","messageId":"125","endLine":6,"endColumn":16},{"ruleId":"122","severity":1,"message":"139","line":9,"column":3,"nodeType":"124","messageId":"125","endLine":9,"endColumn":6},{"ruleId":"122","severity":1,"message":"132","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":13},{"ruleId":"122","severity":1,"message":"170","line":16,"column":8,"nodeType":"124","messageId":"125","endLine":16,"endColumn":14},{"ruleId":"122","severity":1,"message":"171","line":18,"column":8,"nodeType":"124","messageId":"125","endLine":18,"endColumn":11},{"ruleId":"122","severity":1,"message":"172","line":19,"column":8,"nodeType":"124","messageId":"125","endLine":19,"endColumn":13},{"ruleId":"122","severity":1,"message":"173","line":23,"column":8,"nodeType":"124","messageId":"125","endLine":23,"endColumn":21},{"ruleId":"122","severity":1,"message":"174","line":30,"column":9,"nodeType":"124","messageId":"125","endLine":30,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":37,"column":15,"nodeType":"129","endLine":37,"endColumn":34},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["177"],["178"],["179"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'loading' is assigned a value but never used.",["180"],"'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["182"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavbarToggler' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'toggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"183","fix":"186"},{"desc":"183","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [token]",{"range":"192","text":"193"},{"range":"194","text":"193"},{"range":"195","text":"193"},{"range":"196","text":"193"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"197","text":"198"},"Update the dependencies array to be: [token, upComing]",{"range":"199","text":"200"},[919,921],"[token]",[1409,1411],[1137,1139],[906,908],[3467,3469],"[dataMonth, dataWeek]",[1164,1166],"[token, upComing]"]
>>>>>>> 8105826d0fb3f1019c3c2b85c5469917b0076306
