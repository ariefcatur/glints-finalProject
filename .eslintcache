[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"11"},{"size":567,"mtime":1607762145127,"results":"12","hashOfConfig":"13"},{"size":2344,"mtime":1607762145104,"results":"14","hashOfConfig":"13"},{"size":2451,"mtime":1607762145101,"results":"15","hashOfConfig":"13"},{"size":1321,"mtime":1607762145025,"results":"16","hashOfConfig":"13"},{"size":12850,"mtime":1607762279719,"results":"17","hashOfConfig":"13"},{"size":3557,"mtime":1607761275987,"results":"18","hashOfConfig":"13"},{"size":2079,"mtime":1607696430916,"results":"19","hashOfConfig":"13"},{"size":12861,"mtime":1607763554342,"results":"20","hashOfConfig":"13"},{"size":2170,"mtime":1607757538636,"results":"21","hashOfConfig":"13"},{"size":13174,"mtime":1607778601767,"results":"22","hashOfConfig":"13"},{"size":6898,"mtime":1607781679734,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lm62wj",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["49","50"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport {\r\n  Element,\r\n} from 'react-scroll'\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \"http://3.0.91.163/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`http://3.0.91.163/expense/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n    \r\n  } \r\n\r\n  return (\r\n    <>\r\n        \r\n      {results.length !== 0 ? (\r\n        results.map((result) => (\r\n          <Col md={3} key={result.id}>   \r\n            <Card style={{ marginBottom: \"15px\", minHeight: \"165px\" }}>\r\n              <CardBody className=\"d-flex flex-column align-items-center\">\r\n                <CardTitle style={{ minHeight: \"50px\" }}>\r\n                  <strong>{result.title}</strong>\r\n                </CardTitle>\r\n                <CardText>Rp {result.total}</CardText>\r\n                <CardText>{result.purchaseDate}</CardText>\r\n                <Button\r\n                  onClick={() => {\r\n                    handleDelete(result.id);\r\n                  }}\r\n                  block\r\n                  color=\"danger\"\r\n                  outline\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        )) \r\n      )  : (\r\n        <Container></Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["71","72","73","74","75","76","77"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["78","79","80","81","82","83","84","85","86"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"whitesmoke\"}}>\r\n      <Navbar expand=\"md\" style={{backgroundColor:\"whitesmoke\", }}>\r\n        <NavbarBrand className=\"lognav\" href=\"/\" >\r\n          <Link to=\"/dashboard\">\r\n            <img src={subsit} ></img>\r\n          </Link>\r\n        </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li className=\"liquid1\"></li>\r\n                <li>\r\n                  <a href=\"#\">About</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">Product</a>\r\n                </li>\r\n                <li>\r\n                  <Signup />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            <div>\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <img src={chart}></img>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <img src={app}></img>\r\n                </li>\r\n                <li>\r\n                  <Modals />\r\n                </li>\r\n                <li>\r\n                  <ProfMenu />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Collapse,\r\n    Spinner,\r\n    FormGroup,\r\n    Input,\r\n    Label\r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link, useParams} from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie';\r\nimport AddExpenses from '../components/AddExpenses';\r\n\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n\r\n\r\nconst Dashboard = () =>{ \r\n    const urlSubscribe = 'http://3.0.91.163/service'\r\n    const [subscribes, setSubscribes] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const token = Cookies.get('token');\r\n    const [startDate, setStartDate] = useState(0)\r\n    const [serviceId, setServiceId] = useState([])\r\n    const [card,setCard] = useState([])\r\n    const [cardId, setCardId] = useState(null)\r\n    const urlCard = 'http://3.0.91.163/card'\r\n    const [chartData, setChartData] = useState({});\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(urlSubscribe).then((res) => {\r\n          setSubscribes(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        \r\n        dataMonth();\r\n        dataWeek();\r\n      }, []);\r\n    \r\n    const subscribeDetails = (id) => {\r\n        setLoading(true);\r\n        const url =`http://3.0.91.163/service?id=${id}`\r\n        axios.get(url).then((res)=>{\r\n            console.log(\"subscribe id\", res.data)\r\n            setSubscribeId(res.data);\r\n            setModal(!modal)\r\n            setLoading(false);\r\n            subscribeCard()\r\n            setServiceId(id)\r\n        })\r\n        .catch((err)=> console.log(err));           \r\n    }\r\n\r\n    \r\n    const subscribeCard = () =>{\r\n        setLoading(true);\r\n        axios.get(urlCard, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setCard(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n    }\r\n    \r\n    const subscribtion = (e)=>{\r\n        e.preventDefault();\r\n        const url =`http://3.0.91.163/subscription/${serviceId}/?cardId=${cardId}`\r\n        // console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n        // console.log(token)\r\n        axios\r\n        .post(url, null, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n        })\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Spinner type=\"grow\" color=\"warning\" />\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n              Sedang memuat data...\r\n            </Row>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n            \r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        console.log(dates, totals)\r\n        \r\n    }\r\n    \r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            \r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n    }\r\n    \r\n   \r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Row>\r\n                        <Col xs=\"6\">\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button  id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button  id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'30px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Popular Apps</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {subscribes.map((subscribes, ) =>(\r\n                        <Col xs=\"3\" key={subscribes.id}>\r\n                        <Card style={{marginBottom:'50px'}}>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"170px\"\r\n                                src={subscribes.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                <h5>{subscribes.name}</h5>\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=> subscribeDetails(subscribes.id)}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>  \r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <ul>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Description: <br/>{subscribe.description}\r\n                                        </h5>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Cost: {subscribe.cost}\r\n                                        </h5>\r\n                                    </li>\r\n                                </ul> \r\n                            </CardText>\r\n                            <Row>\r\n                            <Col md=\"8\">\r\n                            {/* {card.map((cards)=>(\r\n                                <Select\r\n\r\n                                value={cards.cardBank}/>\r\n                            ))} */}\r\n                            <Row>\r\n                            <FormGroup>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"cardId\"\r\n                                id=\"cardId\"\r\n                                onChange={(e) =>{\r\n                                    setCardId(e.target.value)\r\n                                    console.log(e.target.value)\r\n                                } }\r\n                            >\r\n                                <option >Select Card</option>\r\n                            {card.length !== 0\r\n                                ? card.map((cards) => <option value={cards.id}>{cards.cardBank}</option>)\r\n                                : (\"\")}\r\n                            </Input>\r\n                            </FormGroup>\r\n                            </Row>\r\n                            </Col>\r\n                            <Col>\r\n                            <Button\r\n                                onClick={subscribtion}\r\n                                className=\"btn btn-primary\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subscribe\r\n                            </Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                                </Col>\r\n                            ))}   \r\n                    </ModalBody>\r\n                </Modal>\r\n                </Row> \r\n                <Row>\r\n                <AddExpenses/>\r\n                </Row> \r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["106","107","108","109","110","111","112"],{"ruleId":"113","severity":1,"message":"114","line":15,"column":22,"nodeType":"115","messageId":"116","endLine":15,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":40,"column":6,"nodeType":"119","endLine":40,"endColumn":8,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":10,"column":5,"nodeType":"115","messageId":"116","endLine":10,"endColumn":13},{"ruleId":"113","severity":1,"message":"122","line":12,"column":5,"nodeType":"115","messageId":"116","endLine":12,"endColumn":10},{"ruleId":"113","severity":1,"message":"123","line":13,"column":5,"nodeType":"115","messageId":"116","endLine":13,"endColumn":16},{"ruleId":"113","severity":1,"message":"124","line":15,"column":5,"nodeType":"115","messageId":"116","endLine":15,"endColumn":14},{"ruleId":"113","severity":1,"message":"125","line":21,"column":10,"nodeType":"115","messageId":"116","endLine":21,"endColumn":14},{"ruleId":"113","severity":1,"message":"126","line":24,"column":9,"nodeType":"115","messageId":"116","endLine":24,"endColumn":19},{"ruleId":"113","severity":1,"message":"127","line":44,"column":12,"nodeType":"115","messageId":"116","endLine":44,"endColumn":21},{"ruleId":"113","severity":1,"message":"128","line":46,"column":11,"nodeType":"115","messageId":"116","endLine":46,"endColumn":19},{"ruleId":"113","severity":1,"message":"129","line":48,"column":12,"nodeType":"115","messageId":"116","endLine":48,"endColumn":23},{"ruleId":"113","severity":1,"message":"130","line":48,"column":25,"nodeType":"115","messageId":"116","endLine":48,"endColumn":39},{"ruleId":"113","severity":1,"message":"131","line":51,"column":12,"nodeType":"115","messageId":"116","endLine":51,"endColumn":21},{"ruleId":"113","severity":1,"message":"132","line":51,"column":23,"nodeType":"115","messageId":"116","endLine":51,"endColumn":35},{"ruleId":"113","severity":1,"message":"133","line":52,"column":12,"nodeType":"115","messageId":"116","endLine":52,"endColumn":21},{"ruleId":"113","severity":1,"message":"134","line":52,"column":23,"nodeType":"115","messageId":"116","endLine":52,"endColumn":35},{"ruleId":"113","severity":1,"message":"135","line":53,"column":19,"nodeType":"115","messageId":"116","endLine":53,"endColumn":27},{"ruleId":"113","severity":1,"message":"136","line":54,"column":20,"nodeType":"115","messageId":"116","endLine":54,"endColumn":29},{"ruleId":"113","severity":1,"message":"137","line":65,"column":11,"nodeType":"115","messageId":"116","endLine":65,"endColumn":17},{"ruleId":"117","severity":1,"message":"138","line":98,"column":8,"nodeType":"119","endLine":98,"endColumn":10,"suggestions":"139"},{"ruleId":"113","severity":1,"message":"140","line":12,"column":3,"nodeType":"115","messageId":"116","endLine":12,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":36,"column":6,"nodeType":"119","endLine":36,"endColumn":8,"suggestions":"141"},{"ruleId":"113","severity":1,"message":"142","line":8,"column":5,"nodeType":"115","messageId":"116","endLine":8,"endColumn":13},{"ruleId":"113","severity":1,"message":"125","line":23,"column":10,"nodeType":"115","messageId":"116","endLine":23,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":173,"column":41,"nodeType":"145","endLine":177,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":195,"column":41,"nodeType":"145","endLine":199,"endColumn":42},{"ruleId":"146","severity":1,"message":"147","line":211,"column":41,"nodeType":"145","endLine":211,"endColumn":45},{"ruleId":"143","severity":1,"message":"144","line":216,"column":41,"nodeType":"145","endLine":220,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":239,"column":41,"nodeType":"145","endLine":243,"endColumn":42},{"ruleId":"113","severity":1,"message":"148","line":6,"column":3,"nodeType":"115","messageId":"116","endLine":6,"endColumn":16},{"ruleId":"113","severity":1,"message":"149","line":9,"column":3,"nodeType":"115","messageId":"116","endLine":9,"endColumn":6},{"ruleId":"113","severity":1,"message":"150","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":13},{"ruleId":"113","severity":1,"message":"137","line":25,"column":9,"nodeType":"115","messageId":"116","endLine":25,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":32,"column":13,"nodeType":"145","endLine":32,"endColumn":32},{"ruleId":"151","severity":1,"message":"152","line":43,"column":19,"nodeType":"145","endLine":43,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":46,"column":19,"nodeType":"145","endLine":46,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":59,"column":21,"nodeType":"145","endLine":59,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":63,"column":19,"nodeType":"145","endLine":63,"endColumn":34},{"ruleId":"113","severity":1,"message":"153","line":19,"column":5,"nodeType":"115","messageId":"116","endLine":19,"endColumn":10},{"ruleId":"113","severity":1,"message":"154","line":21,"column":8,"nodeType":"115","messageId":"116","endLine":21,"endColumn":15},{"ruleId":"113","severity":1,"message":"155","line":22,"column":8,"nodeType":"115","messageId":"116","endLine":22,"endColumn":12},{"ruleId":"113","severity":1,"message":"156","line":23,"column":8,"nodeType":"115","messageId":"116","endLine":23,"endColumn":14},{"ruleId":"113","severity":1,"message":"157","line":24,"column":8,"nodeType":"115","messageId":"116","endLine":24,"endColumn":16},{"ruleId":"113","severity":1,"message":"158","line":25,"column":8,"nodeType":"115","messageId":"116","endLine":25,"endColumn":15},{"ruleId":"113","severity":1,"message":"159","line":26,"column":8,"nodeType":"115","messageId":"116","endLine":26,"endColumn":12},{"ruleId":"113","severity":1,"message":"125","line":27,"column":10,"nodeType":"115","messageId":"116","endLine":27,"endColumn":14},{"ruleId":"113","severity":1,"message":"160","line":27,"column":16,"nodeType":"115","messageId":"116","endLine":27,"endColumn":25},{"ruleId":"113","severity":1,"message":"126","line":30,"column":9,"nodeType":"115","messageId":"116","endLine":30,"endColumn":19},{"ruleId":"113","severity":1,"message":"161","line":86,"column":12,"nodeType":"115","messageId":"116","endLine":86,"endColumn":21},{"ruleId":"113","severity":1,"message":"162","line":86,"column":23,"nodeType":"115","messageId":"116","endLine":86,"endColumn":35},{"ruleId":"113","severity":1,"message":"135","line":92,"column":19,"nodeType":"115","messageId":"116","endLine":92,"endColumn":27},{"ruleId":"113","severity":1,"message":"136","line":93,"column":20,"nodeType":"115","messageId":"116","endLine":93,"endColumn":29},{"ruleId":"113","severity":1,"message":"131","line":96,"column":12,"nodeType":"115","messageId":"116","endLine":96,"endColumn":21},{"ruleId":"113","severity":1,"message":"132","line":96,"column":23,"nodeType":"115","messageId":"116","endLine":96,"endColumn":35},{"ruleId":"113","severity":1,"message":"133","line":97,"column":12,"nodeType":"115","messageId":"116","endLine":97,"endColumn":21},{"ruleId":"113","severity":1,"message":"134","line":97,"column":23,"nodeType":"115","messageId":"116","endLine":97,"endColumn":35},{"ruleId":"117","severity":1,"message":"163","line":114,"column":10,"nodeType":"119","endLine":114,"endColumn":12,"suggestions":"164"},{"ruleId":"113","severity":1,"message":"150","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":13},{"ruleId":"113","severity":1,"message":"165","line":15,"column":8,"nodeType":"115","messageId":"116","endLine":15,"endColumn":17},{"ruleId":"113","severity":1,"message":"166","line":25,"column":10,"nodeType":"115","messageId":"116","endLine":25,"endColumn":20},{"ruleId":"113","severity":1,"message":"167","line":27,"column":9,"nodeType":"115","messageId":"116","endLine":27,"endColumn":16},{"ruleId":"113","severity":1,"message":"168","line":42,"column":10,"nodeType":"115","messageId":"116","endLine":42,"endColumn":14},{"ruleId":"113","severity":1,"message":"169","line":43,"column":10,"nodeType":"115","messageId":"116","endLine":43,"endColumn":17},{"ruleId":"151","severity":1,"message":"170","line":102,"column":11,"nodeType":"145","endLine":102,"endColumn":37},"no-unused-vars","'MapPin' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["172"],"'Element' is defined but never used.",["173"],"'CardBody' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.",["174"],"'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"175","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [token]",{"range":"182","text":"183"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"184","text":"185"},{"range":"186","text":"183"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"187","text":"188"},[926,928],"[token]",[2957,2959],"[dataMonth, dataWeek, token]",[742,744],[3398,3400],"[dataMonth, dataWeek]"]