<<<<<<< HEAD
[{"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js":"1","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js":"2","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js":"3","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js":"4","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js":"5","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js":"6","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js":"7","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js":"8","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js":"9","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js":"10","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js":"11","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js":"12","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js":"13","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js":"14","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js":"15","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js":"16","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js":"17","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js":"18","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js":"19","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js":"20","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js":"21","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js":"22","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditDebt.js":"23","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js":"24","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js":"25","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js":"26","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js":"27","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/UploadImg.js":"28"},{"size":546,"mtime":1606980992273,"results":"29","hashOfConfig":"30"},{"size":973,"mtime":1608043004511,"results":"31","hashOfConfig":"30"},{"size":2283,"mtime":1608814552066,"results":"32","hashOfConfig":"30"},{"size":2479,"mtime":1608993729317,"results":"33","hashOfConfig":"30"},{"size":6352,"mtime":1608995700533,"results":"34","hashOfConfig":"30"},{"size":330,"mtime":1608800505957,"results":"35","hashOfConfig":"30"},{"size":12660,"mtime":1608881644771,"results":"36","hashOfConfig":"30"},{"size":2503,"mtime":1608880828322,"results":"37","hashOfConfig":"30"},{"size":13388,"mtime":1608901891128,"results":"38","hashOfConfig":"30"},{"size":14330,"mtime":1608921724702,"results":"39","hashOfConfig":"30"},{"size":3013,"mtime":1608627919484,"results":"40","hashOfConfig":"30"},{"size":337,"mtime":1608292718087,"results":"41","hashOfConfig":"30"},{"size":3740,"mtime":1608368708068,"results":"42","hashOfConfig":"30"},{"size":189,"mtime":1607226668760,"results":"43","hashOfConfig":"30"},{"size":1255,"mtime":1607076230330,"results":"44","hashOfConfig":"30"},{"size":1518,"mtime":1608994812597,"results":"45","hashOfConfig":"30"},{"size":1992,"mtime":1607230205571,"results":"46","hashOfConfig":"30"},{"size":2356,"mtime":1608823313239,"results":"47","hashOfConfig":"30"},{"size":8738,"mtime":1608920394389,"results":"48","hashOfConfig":"30"},{"size":3839,"mtime":1608960084286,"results":"49","hashOfConfig":"30"},{"size":4643,"mtime":1608912853258,"results":"50","hashOfConfig":"30"},{"size":4222,"mtime":1608882398661,"results":"51","hashOfConfig":"30"},{"size":5008,"mtime":1608973618205,"results":"52","hashOfConfig":"30"},{"size":5388,"mtime":1608627919480,"results":"53","hashOfConfig":"30"},{"size":6327,"mtime":1608627919476,"results":"54","hashOfConfig":"30"},{"size":5330,"mtime":1608969448713,"results":"55","hashOfConfig":"30"},{"size":13198,"mtime":1608917120040,"results":"56","hashOfConfig":"30"},{"size":1487,"mtime":1608992766379,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1h8k743",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js",[],["131","132"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js",["133","134","135","136"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { Container, Col, Row, Table } from \"reactstrap\";\nimport { Facebook, Twitter, Instagram, Linkedin } from \"react-feather\";\nimport gplay from \"../pages/img/googleplay.png\";\nimport appstore from \"../pages/img/appstore1.png\";\nimport crest from \"../assets/logo-subsit.png\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container >\n        <Container fluid style={{paddingTop:\"30px\"}}>\n          {/* <Row md=\"6\" sm=\"12\" style={{ padding: \"1%\", marginTop: \"1%\" }}>\n            <img src={crest} alt=\"\" style={{ width: \"10%\" }} />\n          </Row> */}\n          <Row>\n              <Container className=\"icons\" style={{ textAlign: \"center\" }}>\n                <Facebook\n                  size={45}\n                  style={{\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n                <Twitter\n                  size={45}\n                  style={{\n                    marginRight: \"2%\",\n                    marginLeft: \"2%\",\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n                <Instagram\n                  size={45}\n                  style={{\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n              </Container>\n          </Row>\n          <Row>\n              <Container style={{ textAlign: \"center\" }}>\n              <Container>\n                  <p><b>Terms of use | Privacy Policy</b></p>\n              </Container>\n              <img className=\"store\" src={gplay} alt=\"\"/>\n              <img className=\"store\" src={appstore} alt=\"\"/>\n              </Container>\n          </Row>\n          <b>\n            <p className=\"footerTable\">\n              Copyright &copy; 2020 SubsItId.herokuapp.com\n            </p>\n          </b>\n        </Container>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js",["137","138","139"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js",["140","141","142","143","144","145","146"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js",["147"],"import Cookies from \"js-cookie\";\nimport { useHistory } from 'react-router-dom';\n\nconst Logout = () => {\n    let history = useHistory();\n    Cookies.remove('token');\n    Cookies.remove('username');\n    Cookies.remove('status');\n    history.push('/');\n    return window.location.reload();\n    return null;\n\n}\n\nexport default Logout;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js",["148","149","150","151","152","153","154","155","156","157"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  Button,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Spinner,\n} from \"reactstrap\";\nimport subscribe from \"./img/subscribe.svg\";\nimport Signup from \"./Signup\";\nimport expense from \"./img/expense.svg\";\nimport budgetting from \"./img/budgetting.svg\";\nimport history from \"./img/history.svg\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAd,\n  faCoins,\n  faDigitalTachograph,\n  faClipboard,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport AOS from 'aos';\n\n\nconst Home = (props) => {\n\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\n  const [subscribes, setSubscribes] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    axios.get(urlSubscribe).then((res) => {\n      setSubscribes(res.data);\n      setLoading(false);\n    });\n  }, []);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n    \n  const btnTitle2= [\n    \"Try For Free\",\n  ]\n  const bgcolor=[\n    \"#8F48EA\",\n  ]\n  const color=[\n    \"white\",\n  ]\n\n  const signup = () => {\n    return <Signup/>\n  }\n\n  const addIcon = <FontAwesomeIcon icon={faAd} />;\n  const addCoins = <FontAwesomeIcon icon={faCoins} />;\n  const addDigital = <FontAwesomeIcon icon={faDigitalTachograph} />;\n  const addClipboard = <FontAwesomeIcon icon={faClipboard} />;\n\n  if (loading) {\n    return (\n      <div>\n        <Row className=\"justify-content-center mt-5\">\n          <Spinner type=\"grow\" color=\"warning\" />\n        </Row>\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\n          Loading...\n        </Row>\n      </div>\n    );\n  }\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"banner\">\n          <Col xs=\"5\">\n            <div className=\"logo\">\n              <h1>\n                <b>Stress Free</b>\n                {/* <a href=\"#about\">Stress Free</a> */}\n              </h1>\n              <h1>\n                <b>Subscription Manager</b>\n              </h1>\n              <Signup \n              btnTitle={btnTitle2}\n              backgroundColor={bgcolor}\n              color={color}\n              />\n            </div>\n          </Col>\n          <Col xs=\"7\">\n            <div className=\"logo-gambar\"></div>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid className=\"about\" id=\"about\" data-aos=\"fade-up\">\n        <h1 className=\"section-title\" id=\"#about\" style={{ color: \"#003764\" }}>\n          <b>About US</b>\n        </h1>\n        <div className=\"section-title-divider\"></div>\n\n        <div className=\"aboutIntro\">\n          <h3>\n            <span className=\"text-green\">Manage</span> your subscriptions\n            and expenses data with ease.\n            <br />\n            <br/>\n            You can easily keep a pulse on your subscription and expense in one\n            platform from anywhere.\n          </h3>\n        </div>\n      </Container>\n      <Container fluid className=\"content\">\n        <section id=\"features\" className=\"features\">\n          <Container>\n            <Nav>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"1\" })}\n                      onClick={() => {\n                        toggle(\"1\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>Subscribe</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addIcon}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"2\" })}\n                      onClick={() => {\n                        toggle(\"2\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>Expense</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addCoins}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"3\" })}\n                      onClick={() => {\n                        toggle(\"3\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>Debts</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addDigital}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n              <Col sm=\"3\">\n                <Card className=\"tabs\">\n                  <NavItem>\n                    <NavLink\n                      className={classnames({ active: activeTab === \"4\" })}\n                      onClick={() => {\n                        toggle(\"4\");\n                      }}\n                    >\n                      <Row>\n                        <Col sm=\"8\">\n                          <h4>History</h4>\n                        </Col>\n                        <Col sm=\"4\" className=\"icon\">\n                          {\" \"}\n                          {addClipboard}{\" \"}\n                        </Col>\n                      </Row>\n                    </NavLink>\n                  </NavItem>\n                </Card>\n              </Col>\n            </Nav>\n\n            <TabContent activeTab={activeTab}>\n              <TabPane tabId=\"1\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>\n                              Easily create a subscription website\n                            </strong>\n                          </h3>\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            Simply put in the items you wish to purchase on\n                            subscription, and the website builder will generate\n                            a subscription website for you right away. Join a\n                            member and create your own management subscription\n                            service you want to make.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={subscribe} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"2\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>Control your own expense</strong>\n                          </h3>\n\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            Our expense feature will help you monitoring,\n                            tracking and most importantly managing your\n                            expenses. Just remember to input your expense data\n                            whenever you make them.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={expense} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"3\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>\n                              Trackdown your debts activities easily\n                            </strong>\n                          </h3>\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            Don't want to lose track on your debts records? Just\n                            keep them in our easy-to-use debt's note feature.\n                            You can instantly edit or delete your record once\n                            you are finish with it.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={budgetting} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane tabId=\"4\">\n                <Row>\n                  <Col lg=\"12\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <div className=\"intro\">\n                          <h3>\n                            <strong>\n                              Real-time reporting on your expenses and\n                              subscriptions\n                            </strong>\n                          </h3>\n                          <h4 style={{ textAlign: \"justify\" }}>\n                            With full visibility of all business expenditure and\n                            powerful reporting features at your disposal, SubsIt\n                            empowers you to make smarter financial decisions.\n                          </h4>\n                        </div>\n                      </Col>\n                      <Col\n                        lg=\"6\"\n                        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n                      >\n                        <img src={history} width=\"100%\" height=\"400px\"></img>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </TabPane>\n            </TabContent>\n          </Container>\n        </section>\n      </Container>\n      <Container fluid className=\"popular\">\n        <Container id=\"service\" data-aos=\"fade-up\">\n          <h1 className=\"section-title\" style={{ color: \"#003764\" }}>\n            <b>Popular Apps</b>\n          </h1>\n          <div className=\"section-title-divider \"></div>\n          <Row className=\"mt-3\">\n            {subscribes.slice(0, 4).map((subscribes, i) => (\n              <Col sm=\"3\" key={i}>\n                <Card>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    height=\"170px\"\n                    src={subscribes.picture}\n                    alt=\"subscribtion\"\n                  />\n                  {/* <CardTitle\n                    tag=\"h6\"\n                    className=\"text-dark font-weight-bold text-center\"\n                  >\n                    <h4>{subscribes.name}</h4>\n                  </CardTitle> */}\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </Container>\n      {/* <Container fluid className=\"team\">\n                <Container>\n                    <h1 className=\"section\" >Team</h1>\n                    <div className=\"section-title-divider \"></div>\n                </Container>\n            </Container> */}\n    </>\n  );\n};\n\nexport default Home;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js",["158","159","160","161","162","163","164","165","166","167"],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Row,\n  Button\n} from \"reactstrap\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport subsit from \"./img/SubsIt..svg\";\nimport \"./TopMenu.css\";\nimport Modals from \"./Modalender\";\nimport { Link} from \"react-router-dom\";\nimport app from \"./img/app.svg\";\nimport chart from \"./img/Group 11.svg\";\nimport { checkLogin } from \"../Helper\";\nimport ProfMenu from \"./ProfMenu\";\nimport { Calendar, PieChart } from 'react-feather';\nimport CalendarEvent from \"../components/Calendar\";\n\nimport Bells from \"./Bells\";\nimport AOS from 'aos';\n\nconst TopMenu = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const featureBox1 = [\n    \"Sign Up\"\n  ];\n\n  return (\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\n      <Navbar expand=\"sm\" style={{backgroundColor:\"#fefefe\", height:\"100px\"}}>\n      <NavbarBrand className=\"lognav\">\n            <Link to=\"/dashboard\">\n              <img src={subsit} ></img>\n            </Link>\n            </NavbarBrand>\n        \n        <Nav className=\"ml-auto\" navbar>\n          <Collapse isOpen={isOpen} navbar></Collapse>\n          {!checkLogin() && (\n            <div className=\"body\">\n              <ul id=\"Menu\">\n                <li>\n                <a href=\"#about\"><Button id=\"transparant\" >About</Button></a>\n                </li>\n                <li>\n                <a href=\"#service\"><Button id=\"transparant\"> Service </Button></a>\n                </li>\n                <li>\n                <Signup \n                  btnTitle={featureBox1}\n                />\n                </li>\n              </ul>\n            </div>\n          )}\n          {checkLogin() && (\n            \n            <div>\n              <ul id=\"Menu\" className=\"liquid1\">\n                <li>\n                  <Link to=\"/history\">\n                    <PieChart style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/Calendar\">\n                    <Calendar style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Bells />\n                </li>\n                <li>\n                  <ProfMenu/>\n                </li>\n              </ul>\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default TopMenu;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Collapse,\n  Spinner,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport youtube from \"./img/youtube.jpg\";\nimport hulu from \"./img/hulu-logo.jpg\";\nimport disney from \"./img/disney.jpeg\";\nimport sportify from \"./img/spotify.jpg\";\nimport netflix from \"./img/netflix.jpeg\";\nimport logo from \"./img/Rectangle.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { checkLogin } from \"../Helper\";\nimport Cookies from \"js-cookie\";\nimport '../components/Profile.css'\nimport sleep from '../assets/sleep.png'\n\n// const dataMonth= {\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\n//     datasets:[\n//         {\n//             label: '# Month',\n//             data: [12, 19, 3, 5, 2, 3],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\n// const options = {\n//     scales: {\n//         yAxes: [\n//           {\n//             ticks: {\n//               beginAtZero: true,\n//             },\n//           },\n//         ],\n//       },\n// }\n\n// const dataWeek= {\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n//     datasets:[\n//         {\n//             label: '# Week',\n//             data: [12, 19, 3, 5],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\nconst Dashboard = () => {\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\n  const [subscribes, setSubscribes] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [subscribeId, setSubscribeId] = useState([]);\n  const token = Cookies.get(\"token\");\n  const [startDate, setStartDate] = useState(0);\n  const [serviceId, setServiceId] = useState([]);\n  const [card, setCard] = useState([]);\n  const [cardId, setCardId] = useState(null);\n  const [checkCard, setCheckCard] = useState(\"\");\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n  const [chartData, setChartData] = useState({});\n  const [dates, setDates] = useState([]);\n  const [totals, setTotals] = useState([]);\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\n  const [chartWeek, setChartWeek] = useState({});\n  const [weekMonth, setWeekMonth] = useState([]);\n  const [totalWeek, setTotalWeek] = useState([]);\n  const urlWeek = \" https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\n\n  const history = useHistory();\n\n  const toggle = () => setModal(!modal);\n  const collapse = () => {\n    setIsOpen(true);\n    setIsOpenWeek(false);\n  };\n  const collapseWeek = () => {\n    setIsOpenWeek(true);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setLoading(true);\n    axios\n      .get(urlSubscribe)\n      .then((res) => {\n        console.log(res.data);\n        setSubscribes(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCheckCard(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    dataMonth();\n    dataWeek();\n  }, []);\n\n  const subscribeDetails = (id) => {\n    setLoading(true);\n    const url = ` http://52.148.70.171/service?id=${id}`;\n    axios\n      .get(url)\n      .then((res) => {\n        console.log(\"subscribe id\", res.data);\n        setSubscribeId(res.data);\n        setModal(!modal);\n        setLoading(false);\n        subscribeCard();\n        setServiceId(id);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const subscribeCard = () => {\n    setLoading(true);\n    axios\n      .get(urlCard, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        setCard(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const subscribtion = (e) => {\n    e.preventDefault();\n    const url = ` http://52.148.70.171/subscription/${serviceId}/?cardId=${cardId}`;\n    // console.log(\"service Id \", serviceId, \"cardId \", cardId)\n    // console.log(token)\n    axios\n      .post(url, null, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        history.push(\"/history\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (loading) {\n    return (\n      <div>\n        <Row className=\"justify-content-center mt-5\">\n          <Spinner\n            type=\"grow\"\n            style={{ width: \"4rem\", height: \"4rem\", color: \"#8F48EA\" }}\n          />\n        </Row>\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\n          Please wait...\n        </Row>\n      </div>\n    );\n  }\n\n  const dataMonth = () => {\n    let month = [];\n    let pay = [];\n    axios\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          month.push(dataObj.dates);\n          pay.push(dataObj.totals);\n        }\n        setChartData({\n          labels: month,\n          datasets: [\n            {\n              label: \"# Month\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132, 0.2)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n              pointBackgroundColor: \"rgb(255, 99, 132)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // console.log(dates, totals)\n  };\n\n  const dataWeek = () => {\n    let week = [];\n    let pay = [];\n    axios\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          week.push(dataObj.weekMonth);\n          pay.push(dataObj.totals);\n        }\n        setChartWeek({\n          labels: week,\n          datasets: [\n            {\n              label: \"# Week\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(dates, totals);\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <Container fluid className=\"content\">\n      <Container>\n        <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n          <Col xs=\"12\" className=\"bg-default\">\n            <Row>\n              <Col xs=\"6\">\n                <h4>Spending Value</h4>\n              </Col>\n              <Col xs=\"6\">\n                <div style={{ float: \"right\", position: \"relative\" }}>\n                  <Button\n                    id=\"button\"\n                    onClick={collapse}\n                    style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\n                  >\n                    Month\n                  </Button>\n                  <Button\n                    id=\"button\"\n                    onClick={collapseWeek}\n                    style={{ marginBottom: \"1rem\", marginRight: \"30px\" }}\n                  >\n                    Week\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs=\"12\" className=\"bg-default\">\n            <Collapse isOpen={isOpen}>\n              <Line data={chartData} options={options} />\n            </Collapse>\n            <Collapse isOpen={isOpenWeek}>\n              <Line data={chartWeek} options={options} />\n            </Collapse>\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <Row className=\"ml-0 mt-3 mb-0\">\n          <h3>Popular Apps</h3>\n        </Row>\n        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n      </Container>\n      <Container>\n        <Row>\n          {checkCard.length !== 0 ? (\n            subscribes.map((subscribes) => (\n              <Col xs=\"3\" key={subscribes.id}>\n                <Card style={{ marginBottom: \"50px\" }}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    height=\"170px\"\n                    src={subscribes.picture}\n                    alt=\"subscribtion\"\n                    style={{ border: \"0.5px solid grey\" }}\n                  />\n                  <CardBody className=\"bg-dangers\">\n                    <CardTitle\n                      tag=\"h6\"\n                      className=\"text-dark font-weight-bold text-center\"\n                    >\n                      <p>\n                        <b>{subscribes.name}</b>\n                      </p>\n                    </CardTitle>\n                    <Button\n                      onClick={() => subscribeDetails(subscribes.id)}\n                      className=\"btn btn-primary btn-block\"\n                      id=\"button\"\n                    >\n                      <b>Susbcribe</b>\n                    </Button>\n                  </CardBody>\n                </Card>\n              </Col>\n            ))\n          ) : (\n            <Container className=\"text-align-center\">\n              <Container\n                style={{\n                  opacity: \"60%\",\n                  paddingTop: \"30px\",\n                }}\n              >\n                <p>\n                  <b>\n                    <i>\n                      Oops! It seems like you haven't added any card yet. Please\n                      submit your card information in your profile page before\n                      using this feature.\n                    </i>\n                  </b>\n                </p>\n                <Col className=\"subs6\">\n                  <img\n                    src={sleep}\n                    alt=\"\"\n                    style={{\n                      width: \"50%\",\n                      opacity: \"0%\",\n                      position: \"center\",\n                    }}\n                  />\n                </Col>\n              </Container>\n            </Container>\n          )}\n        </Row>\n        <Row>\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}></ModalHeader>\n            <ModalBody>\n              {subscribeId.map((subscribe) => (\n                <Col key={subscribe.id}>\n                  <CardTitle style={{ textAlign: \"center\" }}>\n                    <h5>\n                      <strong>{subscribe.name}</strong>\n                    </h5>\n                  </CardTitle>\n                  <CardImg\n                    top\n                    width=\"15%\"\n                    src={subscribe.picture}\n                    style={{ border: \"0.5px solid grey\" }}\n                    alt=\"subscribtion\"\n                  />\n                  <CardBody>\n                    <CardText style={{ textAlign: \"justify\" }}>\n                      <p>{subscribe.description}</p>\n                    </CardText>\n                    <CardText>\n                      <p>\n                        Cost: <strong>IDR {subscribe.cost}</strong>\n                      </p>\n                    </CardText>\n                    <Row>\n                      <Col md=\"8\">\n                        <Row>\n                          <FormGroup>\n                            <Input\n                              type=\"select\"\n                              name=\"cardId\"\n                              id=\"cardId\"\n                              onChange={(e) => {\n                                setCardId(e.target.value);\n                                console.log(e.target.value);\n                              }}\n                            >\n                              <option>Select Card</option>\n                              {card.length !== 0\n                                ? card.map((cards) => (\n                                    <option value={cards.id}>\n                                      {cards.cardBank} - IDR {cards.saldo}\n                                    </option>\n                                  ))\n                                : \"\"}\n                            </Input>\n                          </FormGroup>\n                        </Row>\n                      </Col>\n                      <Col>\n                        <Button\n                          onClick={subscribtion}\n                          className=\"btn btn-primary\"\n                          id=\"button\"\n                        >\n                          <b>Subscribe</b>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Col>\n              ))}\n            </ModalBody>\n          </Modal>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button,\n  Modal,\n  ModalHeader,\n  Collapse,\n  ModalBody,\n} from \"reactstrap\";\nimport { Element } from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from \"@reactchartjs/react-chart.js\";\nimport axios from \"axios\";\nimport { checkLogin } from \"../Helper\";\nimport Cookies from \"js-cookie\";\nimport empty from \"../assets/empty.png\";\nimport glass from \"../assets/glass.png\";\nimport expense from \"../assets/expense.png\";\nimport \"../components/Profile.css\";\nimport Moment from \"react-moment\";\nimport Swal from \"sweetalert2\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst History = () => {\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = Cookies.get(\"token\");\n  const fullName = Cookies.get(\"fullName\");\n  const [expense, setExpense] = useState([]);\n  const [subscribeId, setSubscribeId] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [chartWeek, setChartWeek] = useState({});\n  const [weekMonth, setWeekMonth] = useState([]);\n  const [totalWeek, setTotalWeek] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [totals, setTotals] = useState([]);\n  const [totalHistory, setTotalHistory] = useState([]);\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\n  const urlWeek = \"https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\n\n  const urlHistory = \"https://binar8-jul-hendri.nandaworks.com/subscription\";\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\n  const urlTotalHistory = \"https://binar8-jul-hendri.nandaworks.com/history\";\n\n  const toggle = () => setModal(!modal);\n  const collapse = () => {\n    setIsOpen(true);\n    setIsOpenWeek(false);\n  };\n  const collapseWeek = () => {\n    setIsOpenWeek(true);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setIsLoading(true);\n    axios\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        setHistory(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        setExpense(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n    dataMonth();\n    dataWeek();\n\n    axios\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(\"totalhistory\" ,res.data);\n        setTotalHistory(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const dataMonth = () => {\n    let month = [];\n    let pay = [];\n    axios\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          month.push(dataObj.dates);\n          pay.push(dataObj.totals);\n        }\n        setChartData({\n          labels: month,\n          datasets: [\n            {\n              label: \"# Month\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const dataWeek = () => {\n    let week = [];\n    let pay = [];\n    axios\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res);\n        for (const dataObj of res.data) {\n          week.push(dataObj.weekMonth);\n          pay.push(dataObj.totals);\n        }\n        setChartWeek({\n          labels: week,\n          datasets: [\n            {\n              label: \"# Week\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(dates, totals);\n  };\n\n  const handleRemove = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You are about to unsubscribe this service.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, I'm sure.\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const url = ` https://binar8-jul-hendri.nandaworks.com/subscription/${id}/`;\n        axios\n          .delete(url, { headers: { Authorization: `Bearer ${token}` } })\n          .then((res) => {\n            console.log(res.data);\n            return window.location.reload();\n          })\n          .catch((err) => console.log(err));    \n        Swal.fire(\"Done!\", \"You've been unsubscribed from this service.\", \"success\");\n      }\n    });\n\n  };\n\n  return (\n    <Container fluid className=\"content\">\n      <Container>\n        <Row>\n          <Col xs=\"8\">\n            <Container>\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n                <Col xs=\"12\" className=\"bg-default\">\n                  <Row>\n                    <Col xs=\"6\">\n                      <h4>Spending Value</h4>\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n                    </Col>\n                    <Col xs=\"6\">\n                      <div style={{ float: \"right\", position: \"relative\" }}>\n                        <Button\n                          id=\"button\"\n                          onClick={collapse}\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\n                        >\n                          Month\n                        </Button>\n                        <Button\n                          id=\"button\"\n                          onClick={collapseWeek}\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\n                        >\n                          Week\n                        </Button>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs=\"12\">\n                  <Collapse isOpen={isOpen}>\n                    <Line data={chartData} options={options} />\n                  </Collapse>\n                  <Collapse isOpen={isOpenWeek}>\n                    <Line data={chartWeek} options={options} />\n                  </Collapse>\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row className=\"ml-0 mt-3 mb-2\">\n                <h3>Your Subscriptions</h3>\n              </Row>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n            </Container>\n            <Container>\n              <Row>\n                {history.length !== 0 ? (\n                  history.map((history) => (\n                    <Col xs=\"4\" key={history.id}>\n                      <Card className=\"mb-4\">\n                        <CardImg\n                          top\n                          width=\"100%\"\n                          height=\"150px\"\n                          src={history.service.picture}\n                          alt=\"subscribtion\"\n                        />\n                        <CardBody className=\"bg-dangers\">\n                          <CardTitle\n                            tag=\"h6\"\n                            className=\"text-dark font-weight-bold text-center\"\n                          >\n                            <p><b>{history.service.name}</b></p>\n                          </CardTitle>\n                            <Button\n                              onClick={() => {\n                                handleRemove(history.serviceId);\n                              }}\n                              className=\"btn btn-primary btn-block\"\n                              id=\"button\"\n                            >\n                              <b>Unsubscribe</b>\n                            </Button>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  ))\n                ) : (\n                  <Container>\n                    <p style={{ opacity: \"60%\" }}>\n                      <i>\n                        <strong>You don't have any subscription.</strong>\n                      </i>\n                    </p>\n                    <Col className=\"subs\">\n                      <img\n                        src={glass}\n                        alt=\"\"\n                        style={{\n                          width: \"50%\",\n                          opacity: \"0%\",\n                          position: \"center\",\n                        }}\n                      />\n                    </Col>\n                  </Container>\n                )}\n              </Row>\n            </Container>\n          </Col>\n\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"10px\" }}>\n            <h4>History</h4>\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n            <Card\n              style={{\n                marginTop: \"20px\",\n                color: \"white\",\n                backgroundColor: \"#8F48EA\",\n                marginBottom: \"15px\",\n              }}\n            >\n              <Row style={{ marginBottom: \"20px\" }}>\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\n                  <CardTitle className=\"text-white\">\n                    <strong>Total :</strong>\n                  </CardTitle>\n                </Col>\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\n                  <h6 style={{ float: \"right\" }}>\n                    <strong>IDR {totalHistory.total}</strong>{\" \"}\n                  </h6>\n                </Col>\n              </Row>\n            </Card>\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"1000px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <h4>Subscriptions</h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\", marginRight:\"5px\" }} />\n              {history.length !== 0 ? (\n                history.map((subscribtion, i) => (\n                  <Card\n                    key={i}\n                    style={{\n                      padding:\"3px\",\n                      marginTop: \"20px\",\n                      backgroundColor: \"#f6f9fc\",\n                      marginBottom: \"20px\",\n                      marginRight:\"5px\",\n                    }}\n                  >\n                    <Row>\n                      <Col xs=\"8\">\n                        <CardTitle className=\"text-dark font-weight\">\n                          <h6 style={{ paddingTop: \"15px\" }}>\n                            {subscribtion.repeat} : {subscribtion.service.name}{\" \"}\n                          </h6>\n                          <Moment format=\"D MMM YYYY\" >{subscribtion.startDate}</Moment>\n                        </CardTitle>\n                      </Col>\n                      <Col xs=\"4\">\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\n                          <b>IDR {subscribtion.service.cost}</b>\n                        </h6>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))\n              ) : (\n                <Container style={{ marginBottom: \"20px\" }}>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No subscription found.</strong>\n                    </i>\n                  </p>\n                  <Col className=\"subs2\">\n                    <img\n                      src={empty}\n                      alt=\"\"\n                      style={{\n                        width: \"50%\",\n                        opacity: \"0%\",\n                        position: \"center\",\n                      }}\n                    />\n                  </Col>\n                </Container>\n              )}\n              <h4>Expenses</h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\", marginRight:\"5px\" }} />\n              {expense.length !== 0 ? (\n                expense.map((expenses, i) => (\n                  <Card\n                    key={i}\n                    style={{\n                      marginTop: \"15px\",\n                      padding: \"5px\",\n                      backgroundColor: \"#f6f9fc\",\n                      marginRight:\"5px\",\n                    }}\n                  >\n                    <Row>\n                      <Col xs=\"6\" style={{ paddingTop: \"15px\" }}>\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight\">\n                          <h6>{expenses.title} </h6>\n                          <Moment format=\"D MMM YYYY\" >{expenses.purchaseDate}</Moment>\n                        </CardTitle>\n                      </Col>\n                      <Col xs=\"6\">\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\n                          <b>IDR {expenses.total}</b>\n                        </h6>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))\n              ) : (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No expense found.</strong>\n                    </i>\n                  </p>\n                  <Col className=\"subs3\">\n                    <img\n                      src={empty}\n                      alt=\"\"\n                      style={{\n                        width: \"50%\",\n                        opacity: \"0%\",\n                        position: \"center\",\n                      }}\n                    />\n                  </Col>\n                </Container>\n              )}\n            </Element>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default History;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js",["206","207"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Calendar from \"react-calendar\";\nimport Lendar from \"./img/calendar.svg\";\nimport \"./Modalender.css\"\n\nconst Modalender = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\n  return (\n    <div>\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\n           \n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\n        <ModalHeader>CALENDAR</ModalHeader>\n        <ModalBody>\n          <b>Your Schedule</b><br />\n            <Calendar />\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Modalender;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js",["208"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js",["209","210","211","212","213","214"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Signup from \"./Signup\";\n\n\nconst Login = (props) => {\n  const { className } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <>\n      <div className=\"modal-dialog modal-login\">\n        <div className=\"modal-content\">\n          <div className=\"model-header\">\n            <h4 className=\"modal-title\">LOGIN</h4>\n            <button className=\"close\"></button>\n          </div>\n          <div className=\"modal-body\">\n            <form method=\"post\">\n              <div className=\"form-group\">\n                <i className=\"fa fa-user\"></i>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                  required=\"required\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <i className=\"fa fa-lock\"></i>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  required=\"required\"\n                />\n              </div>\n              <hr />\n              <div className=\"form-group\">\n                <Input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                  value=\"Login\"\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\n          </div>\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\n            <ModalBody>\n              <Signup />\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js",["215","216","217","218","219","220"],"import React, { useEffect, useState } from \"react\";\nimport { Bell } from \"react-feather\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Moment from 'react-moment';\n\nconst Bells = () => {\n  const [notif, setNotif] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const token = Cookies.get(\"token\");\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(\"http://52.148.70.171/subscription\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        setNotif(res.data);\n      });\n    console.log(\"setNotif\", setNotif);\n  }, []);\n\n  let tanggal = new Date();\n\n  const maxDate = new Date(tanggal);\n  maxDate.setDate(maxDate.getDate() + 3);\n  //console.log(\"tanggal\")\n  let checkDueDate = notif.filter((e) => new Date(e.dueDate) <= maxDate);\n  //console.log(\"cek due date\", checkDueDate)\n  // if(tanggal<checkDueDate){\n  //     console.log(\"tampilkan notif\")\n  // }\n  // else{\n  //     console.log(\"notif ngak ada\")\n  // }\n  return (\n    <div>\n      <div id=\"Popover1\" >\n        <Bell style={{cursor:\"pointer\", color:\"#8f48ea\"}}/>\n      </div>\n      <Popover\n        placement=\"bottom\"\n        isOpen={popoverOpen}\n        target=\"Popover1\"\n        toggle={toggle}\n      >\n        <PopoverHeader style={{ textAlign: \"center\" }}>\n          <strong>Due Date Notification</strong>\n        </PopoverHeader>\n        {checkDueDate.length !== 0 ? (\n          checkDueDate.map((notif) => (\n            <PopoverBody>\n              <Container fluid>\n                <Col>\n                  <h6><strong>{notif.service.name}</strong></h6>\n                  <h6><Moment format=\"D MMM YYYY\">{notif.dueDate}</Moment></h6>\n                </Col>\n              </Container>\n            </PopoverBody>\n          ))\n        ) : (\n          <Container fluid>\n            <Col style={{ textAlign: \"center\", marginTop: \"15px\" }}>\n              <p>\n                <i>You don't have any notification.</i>\n              </p>\n            </Col>\n          </Container>\n        )}\n      </Popover>\n    </div>\n  );\n};\nexport default Bells;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js",["221","222","223","224","225","226","227","228","229","230"],"import React, { useState } from \"react\";\nimport \"./Signup.css\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\n\nconst SignUp = (props) => {\n  let history = useHistory();\n  const { buttonLabel, btnTitle, className, backgroundColor, color } = props;\n\n  const [modalSignUp, setModalSignUp] = useState(false);\n  const [modalSignIn, setModalSignIn] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const checker = () => {\n    localStorage.getItem(\"token\") === null\n      ? setIsLoggedIn(false)\n      : setIsLoggedIn(true);\n  };\n\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\n  const toggleSignIn = () => {\n    setModalSignIn(!modalSignIn);\n    setModalSignUp(false);\n  };\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n  const [message, setMessage] = useState();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmitSignUp = (e) => {\n    e.preventDefault();\n\n    setMessage({\n      data: \"Registration is in progress...\",\n      type: \"alert-warning\",\n    });\n    const urlSignUp =\n      \"  https://binar8-jul-hendri.nandaworks.com/auth/register\";\n    const data = {\n      fullName: fullName,\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(urlSignUp, data)\n      .then((ress) => {\n        Swal.fire(\"Great!\", \"You have registered successfully.\", \"success\");\n        history.push(toggleSignIn);\n        // return <Alert color=\"success\">You have registered successfully.</Alert>;\n        // console.log(ress.bodyData);\n        // <Alert color=\"primary\">Mantav</Alert>;\n      })\n      .catch((err) => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!',\n        })\n        toggleSignIn(false);\n        history.push(toggleSignUp);\n      });\n    // .then((error, data)=>{\n    //   // const hasError = \"error\" in data && data.error != null;\n    //   setMessage({\n    //     data: error || \"Registered Successfully\",\n    //     type: error ? \"alert-danger\" : \"alert-success\",\n    //   })\n    // })\n  };\n  const btnTitle1 = [\"Sign Up\"];\n  const checkerLogin = () => {\n    //Password and Email Formatting\n    let mailformat = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    if (!email) {\n      setMessage(\"Email Must be Filled!\");\n      return false;\n    } else if (!email.match(mailformat)) {\n      setMessage(\"Email Invalid!\");\n      return false;\n    } else {\n      setIsSubmitting(true);\n    }\n  };\n\n  const handleSubmitSignIn = (e) => {\n    e.preventDefault();\n\n    if (checkerLogin() !== false) {\n      const urlSignIn = \" https://binar8-jul-hendri.nandaworks.com/auth/login\";\n      const bodyData = {\n        email: email,\n        password: password,\n      };\n\n      axios\n        .post(urlSignIn, bodyData)\n        .then((res) => {\n          console.log(res);\n          const fullname = res.data.fullName;\n          const email = res.data.email;\n          const token = res.data.token;\n          Cookies.set(\"fullname\", fullname, { expires: 1 });\n          Cookies.set(\"email\", email, { expires: 1 });\n          Cookies.set(\"token\", token, { expires: 1 });\n          setUser(res.data);\n          history.push(`/Dashboard`);\n          return window.location.reload();\n        })\n        .then(() => {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Well Done!\",\n            text: \"You have logged in successfully!\",\n            showConfirmButton: false,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsSubmitting(false);\n          Swal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: \"Something went wrong!\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"SignUpModal\">\n        <div className=\"navigation\">\n          <Button\n            onClick={toggleSignUp}\n            id=\"transparant\"\n            style={{ backgroundColor: `${backgroundColor}`, color: `${color}` }}\n          >\n            {btnTitle}\n          </Button>\n        </div>\n        {/* <div className=\"navigation\">\n          <Button onClick={toggleSignUp}  id=\"transparant\" feature={feature2}></Button>\n        </div> */}\n\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\n          <ModalHeader toggle={toggleSignUp}>\n            <div className=\"ModalHeader\">\n              <h3 className=\"section\">Sign Up</h3>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={handleSubmitSignUp}>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Full Name</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"text\"\n                  color=\"primary\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter full name\"\n                  onChange={(e) => setFullName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Email</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Password</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button\n                id=\"submitButton\"\n                background-color=\"#8F48EA\"\n                type=\"submit\"\n                className=\"btn btn-block\"\n                onClick={toggleSignIn}\n              >\n                Sign Up\n              </Button>\n              <p className=\"Login\">\n                Already have an account?{\" \"}\n                <Button id=\"submitButton\" onClick={toggleSignIn}>\n                  {buttonLabel}Login\n                </Button>\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\n              </p>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n\n      <div className=\"SignInModal\">\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\n          <ModalHeader toggle={toggleSignIn}>\n            <div className=\"ModalHeader\">\n              <h3 className=\"section\">Login</h3>\n            </div>\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={handleSubmitSignIn}>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Email</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"email\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup className=\"form-group\">\n                <Label id=\"SignUp\">Password</Label>\n                <br />\n                <Input\n                  id=\"InputSignUp\"\n                  type=\"password\"\n                  className=\"input-form btn-block\"\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button\n                id=\"submitButton\"\n                type=\"submit\"\n                color=\"primary\"\n                className=\"btn btn-block\"\n                onClick={toggleSignIn}\n              >\n                Login\n              </Button>\n              <p className=\"Login\">\n                Don't have an account?{\" \"}\n                <Button id=\"submitButton\" onClick={toggleSignUp}>\n                  {buttonLabel}Sign Up\n                </Button>\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\n              </p>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    </div>\n\n    // </div>\n  );\n};\n\nexport default SignUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js",["231"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst TopUp = (props) => {\n  const { className } = props;\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const [results, setResults] = useState(\"\");\n  const [saldo, setSaldo] = useState(null);\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n\n    e.preventDefault()\n\n    const data = {\n      saldo: parseInt(saldo),\n    };\n\n    // axios\n    //   .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\n    //     headers: { Authorization: `Bearer ${token}` },\n    //   })\n    axios({\n      method: 'PATCH',\n      url: `https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`,\n      headers: { Authorization: `Bearer ${token}` },\n      data: data,\n    })\n      .then((res) => {\n        console.log(res);\n        console.log(\"ini res.data top up\");\n        console.log(res.data);\n        // return window.location.reload();\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n        <strong>Top-up</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Top-up your balance here.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"cardNumber\">Select Card</Label>\n                <Input\n                  type=\"select\"\n                  name=\"cardNumber\"\n                  id=\"cardNumber\"\n                  onChange={(e) => setCardNumber(e.target.value)}\n                >\n                  <option>Select card</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.cardNumber}>\n                          {result.cardBank} - IDR {result.saldo}\n                        </option>\n                      ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"saldo\">Top-up amount:</Label>\n                <Input\n                  type=\"select\"\n                  name=\"saldo\"\n                  id=\"saldo\"\n                  onClick={(e) => setSaldo(e.target.value)}\n                >\n                  <option>Select amount</option>\n                  <option>50000</option>\n                  <option>100000</option>\n                  <option>250000</option>\n                  <option>500000</option>\n                  <option>1000000</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  type=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TopUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js",["232"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { X } from \"react-feather\";\nimport expense from \"../assets/expense.png\";\nimport \"./Profile.css\";\nimport { Element } from \"react-scroll\";\nimport Moment from \"react-moment\";\nimport Swal from \"sweetalert2\";\n\nconst ShowExpenses = () => {\n  const [results, setResults] = useState(\"\");\n\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlExpense, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you won't be able to retrieve this data!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((res) => {\n            console.log(res);\n            console.log(res.data);\n            return window.location.reload();\n          });\n        Swal.fire(\"Done!\", \"Your expense record has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <thead\n                className=\"text-center\"\n                style={{ backgroundColor: \"#BA8FF2\" }}\n              >\n                <tr>\n                  <th style={{ width: \"30%\" }}>Date</th>\n                  <th>Transaction</th>\n                  <th>Currency</th>\n                  <th>Costs</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n\n              {results.length !== 0 ? (\n                results.map((result) => (\n                  <tbody>\n                    <tr>\n                      <td className=\"text-center\">\n                        <Moment format=\"D MMM YYYY\">\n                          {result.purchaseDate}\n                        </Moment>\n                      </td>\n                      <td className=\"text-center\" style={{ width: \"50%\" }}>\n                        {result.title}\n                      </td>\n                      <td className=\"text-center\">IDR</td>\n                      <td className=\"text-center\">{result.total}</td>\n                      <td style={{ width: \"100%\" }} className=\"text-center\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => {\n                            handleDelete(result.id);\n                          }}\n                          color=\"danger\"\n                          outline\n                        >\n                          <X size={15} />\n                        </Button>\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n              ) : (\n                <tbody>\n                  <tr>\n                    <td colSpan=\"6\">\n                      <Container>\n                        <p style={{ opacity: \"60%\" }}>\n                          <i>\n                            <strong>No expense found.</strong>\n                          </i>\n                        </p>\n                        <Col className=\"subs3\">\n                          <img\n                            src={expense}\n                            alt=\"\"\n                            style={{\n                              width: \"40%\",\n                              opacity: \"0%\",\n                              position: \"center\",\n                            }}\n                          />\n                        </Col>\n                      </Container>\n                    </td>\n                  </tr>\n                </tbody>\n              )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ShowExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditDebt.js",["233"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst EditDebt = (props) => {\n  const { className } = props;\n\n  const urlDebt = \"https://binar8-jul-hendri.nandaworks.com/debts/notes\";\n\n  const [results, setResults] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(null);\n  const [dueDate, setDueDate] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlDebt, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n    const data = {\n      name: name,\n      description: description,\n      amount: amount,\n      type: type,\n      dueDate: dueDate,\n    };\n\n    axios\n      .patch(`https://binar8-jul-hendri.nandaworks.com/debts/update?id=${id}`, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      ><strong>Edit Note</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Edit your debt record here and then click Confirm to save the changes.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"id\">Which note you would like to edit?</Label>\n                <Input\n                  type=\"select\"\n                  name=\"id\"\n                  id=\"id\"\n                  onChange={(e) => setId(e.target.value)}\n                >\n                  <option>Select note</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.id}>\n                          {result.name} - {result.description}\n                        </option>\n                    ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={(e) => setName(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"description\">Description</Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"amount\">Amount</Label>\n                <Input\n                  type=\"number\"\n                  name=\"amount\"\n                  id=\"amount\"\n                  onChange={(e) => setAmount(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"select\"\n                  name=\"type\"\n                  id=\"type\"\n                  onChange={(e) => setType(e.target.value)}\n                >\n                  <option>Select Type</option>\n                  <option>Payables</option>\n                  <option>Receivables</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"dueDate\">Due Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"dueDate\"\n                  id=\"dueDate\"\n                  onChange={(e) => setDueDate(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  typw=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditDebt;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js",["234"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport './Profile.css'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AddExpenses = (props) => {\n\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const urlCategories = \" https://binar8-jul-hendri.nandaworks.com/categories\";\n\n  const token = Cookies.get(\"token\");\n\n  const { className } = props;\n\n  const [cards, setCards] = useState(\"\");\n\n  const [title, setTitle] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [cardId, setCardId] = useState(null);\n  const [categoryId, setCategoryId] = useState(\"\");\n\n  const [categories, setCategories] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCards(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n      axios\n      .get(urlCategories)\n      .then((res) => {\n        console.log(res.data);\n        setCategories(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: title,\n      total: total,\n      purchaseDate: purchaseDate,\n      cardId: cardId,\n      categoryId: categoryId\n    };\n    \n    axios\n      .post(urlExpense, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n      <strong>New Expense </strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Add New Expenses</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"title\">Title</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"total\">Paid amount</Label>\n                  <Input\n                    type=\"total\"\n                    name=\"total\"\n                    id=\"total\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setTotal(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"categoryId\">Expense Type</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"categoryId\"\n                    id=\"categoryId\"\n                    onChange={(e) => setCategoryId(e.target.value)}\n                  >\n                    <option>Select expense type</option>\n                  {categories.length !== 0\n                    ? categories.map((category) => <option value={category.id}>{category.category}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"purchaseDate\">Purchase Date</Label>\n                  <Input\n                    type=\"date\"\n                    name=\"purchaseDate\"\n                    id=\"purchaseDate\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setPurchaseDate(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <Label for=\"cardId\">Select Card</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"cardId\"\n                    id=\"cardId\"\n                    onChange={(e) => setCardId(e.target.value)}\n                  >\n                    <option>Select card</option>\n                  {cards.length !== 0\n                    ? cards.map((card) => <option value={card.id}>{card.cardBank} - IDR {card.saldo}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Button\n                block\n                type=\"submit\"\n                onClick={toggle}\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n              >\n                <strong>Add New Expense</strong>\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js",["235"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { Container, Row, Col, Table, Button } from \"reactstrap\";\nimport { X } from \"react-feather\";\nimport \"./Profile.css\";\nimport debtPic from \"../assets/debt2.png\";\nimport { Element } from \"react-scroll\";\nimport Moment from \"react-moment\";\nimport Swal from \"sweetalert2\";\n\nconst ShowDebt = () => {\n\n  const url = \"https://binar8-jul-hendri.nandaworks.com/debts/notes\";\n  const token = Cookies.get(\"token\");\n\n  const [debt, setDebt] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(url, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        setDebt(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(\n            ` https://binar8-jul-hendri.nandaworks.com/debts/delete?id=${id}`,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            }\n          )\n          .then((res) => {\n            console.log(res);\n            return window.location.reload();\n          });\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Row className=\"mb-0\" style={{ paddingLeft: \"15px\" }}>\n            <p style={{ fontSize: \"10px\", marginRight: \"20px\" }}>\n              <i>\n                * <b>Payables</b> : what you owed.\n              </i>\n            </p>\n            <p style={{ fontSize: \"10px\" }}>\n              <i>\n                * <b>Receivables</b> : what others owed you.\n              </i>\n            </p>\n          </Row>\n          <Table\n            hover\n            style={{ backgroundColor: \"whitesmoke\", width: \"100%\" }}\n            className=\"mt-0\"\n          >\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <thead\n                className=\"text-center\"\n                style={{ backgroundColor: \"#BA8FF2\", width: \"100%\" }}\n              >\n                <tr>\n                  <th style={{ width: \"30%\" }}>Due Date</th>\n                  <th>Name</th>\n                  <th style={{ width: \"30%\" }}>Descriptions</th>\n                  <th>Type</th>\n                  <th>Cost</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              {debt.length !== 0 ? (\n                debt.map((debts) => (\n                  <tbody style={{ justifyContent: \"center\" }}>\n                    <tr className=\"text-center\">\n                      <td style={{ paddingTop: \"16px\" }}>\n                        {\" \"}\n                        <Moment format=\"D MMM YYYY\">{debts.dueDate}</Moment>\n                      </td>\n                      <td style={{ paddingTop: \"16px\" }}>{debts.name}</td>\n                      <td style={{ paddingTop: \"16px\" }}>\n                        {debts.description}\n                      </td>\n                      <td style={{ paddingTop: \"16px\" }}>{debts.type}</td>\n                      <td style={{ paddingTop: \"16px\" }}>{debts.amount}</td>\n                      <td>\n                        <Row style={{ justifyContent: \"center\" }}>\n                          <Button\n                            size=\"sm\"\n                            onClick={() => {\n                              handleDelete(debts.id);\n                            }}\n                            color=\"danger\"\n                            outline\n                          >\n                            <X size={15} />\n                          </Button>\n                        </Row>\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n              ) : (\n                <tbody>\n                  <tr>\n                    <td colSpan=\"7\">\n                      <Container>\n                        <p style={{ opacity: \"60%\" }}>\n                          <i>\n                            <strong>No record found.</strong>\n                          </i>\n                        </p>\n                        <Col className=\"subs5\">\n                          <img\n                            src={debtPic}\n                            alt=\"\"\n                            style={{\n                              width: \"70%\",\n                              opacity: \"0%\",\n                              position: \"center\",\n                            }}\n                          />\n                        </Col>\n                      </Container>\n                    </td>\n                  </tr>\n                </tbody>\n              )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default ShowDebt;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js",["236"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\nimport visa from \"../assets/visa.png\";\nimport master from \"../assets/mastercard.png\";\nimport \"./Profile.css\";\nimport expense from \"../assets/expense.png\";\nimport Swal from \"sweetalert2\";\n\nfunction CheckStatus() {\n  const [results, setResults] = useState(\"\");\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const token = Cookies.get(\"token\");\n\n  console.log(results);\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      title: \"Are you sure you want to remove this card?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#BA8FF2\",\n      cancelButtonColor: \"#8B8B8B\",\n      confirmButtonText: \"Yes, I'm sure!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(`${urlCard}?cardNumber=${id}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((res) => {\n            console.log(res);\n            console.log(res.data);\n            return window.location.reload();\n          });\n        Swal.fire(\"Done!\", \"Your card has been removed.\", \"success\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Row>\n        {results.length !== 0 ? (\n          results.map((result) => {\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Master\"\n            ) {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Visa\"\n            ) {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else {\n              return (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No card found. Please add card first.</strong>\n                    </i>\n                  </p>\n                </Container>\n              );\n            }\n          })\n        ) : (\n          <Container>\n            <p style={{ opacity: \"60%\" }}>\n              <i>\n                <strong>No card found. Please add card first.</strong>\n              </i>\n            </p>\n            <Col className=\"subs4\">\n              <img\n                src={expense}\n                alt=\"\"\n                style={{\n                  width: \"50%\",\n                  opacity: \"0%\",\n                  position: \"center\",\n                }}\n              />\n            </Col>\n          </Container>\n          // <Loading />\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default CheckStatus;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/UploadImg.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":3,"column":21,"nodeType":"243","messageId":"244","endLine":3,"endColumn":24},{"ruleId":"241","severity":1,"message":"245","line":3,"column":31,"nodeType":"243","messageId":"244","endLine":3,"endColumn":36},{"ruleId":"241","severity":1,"message":"246","line":4,"column":40,"nodeType":"243","messageId":"244","endLine":4,"endColumn":48},{"ruleId":"241","severity":1,"message":"247","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":13},{"ruleId":"241","severity":1,"message":"248","line":14,"column":10,"nodeType":"243","messageId":"244","endLine":14,"endColumn":14},{"ruleId":"241","severity":1,"message":"249","line":14,"column":16,"nodeType":"243","messageId":"244","endLine":14,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":38,"column":6,"nodeType":"252","endLine":38,"endColumn":8,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"254","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":15},{"ruleId":"241","severity":1,"message":"255","line":10,"column":8,"nodeType":"243","messageId":"244","endLine":10,"endColumn":13},{"ruleId":"241","severity":1,"message":"256","line":15,"column":10,"nodeType":"243","messageId":"244","endLine":15,"endColumn":17},{"ruleId":"250","severity":1,"message":"257","line":52,"column":6,"nodeType":"252","endLine":52,"endColumn":8,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":54,"column":69,"nodeType":"261","messageId":"262","endLine":54,"endColumn":71},{"ruleId":"259","severity":1,"message":"260","line":108,"column":41,"nodeType":"261","messageId":"262","endLine":108,"endColumn":43},{"ruleId":"259","severity":1,"message":"260","line":167,"column":39,"nodeType":"261","messageId":"262","endLine":167,"endColumn":41},{"ruleId":"263","severity":1,"message":"264","line":11,"column":5,"nodeType":"265","messageId":"266","endLine":11,"endColumn":17},{"ruleId":"241","severity":1,"message":"267","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":11},{"ruleId":"241","severity":1,"message":"268","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":12},{"ruleId":"241","severity":1,"message":"269","line":10,"column":3,"nodeType":"243","messageId":"244","endLine":10,"endColumn":9},{"ruleId":"241","severity":1,"message":"270","line":23,"column":10,"nodeType":"243","messageId":"244","endLine":23,"endColumn":14},{"ruleId":"241","severity":1,"message":"271","line":33,"column":8,"nodeType":"243","messageId":"244","endLine":33,"endColumn":11},{"ruleId":"241","severity":1,"message":"272","line":66,"column":9,"nodeType":"243","messageId":"244","endLine":66,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":248,"column":25,"nodeType":"275","endLine":248,"endColumn":74},{"ruleId":"273","severity":1,"message":"274","line":276,"column":25,"nodeType":"275","endLine":276,"endColumn":72},{"ruleId":"273","severity":1,"message":"274","line":305,"column":25,"nodeType":"275","endLine":305,"endColumn":75},{"ruleId":"273","severity":1,"message":"274","line":334,"column":25,"nodeType":"275","endLine":334,"endColumn":72},{"ruleId":"241","severity":1,"message":"276","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":16},{"ruleId":"241","severity":1,"message":"277","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":6},{"ruleId":"241","severity":1,"message":"278","line":13,"column":8,"nodeType":"243","messageId":"244","endLine":13,"endColumn":13},{"ruleId":"241","severity":1,"message":"279","line":16,"column":8,"nodeType":"243","messageId":"244","endLine":16,"endColumn":14},{"ruleId":"241","severity":1,"message":"280","line":18,"column":8,"nodeType":"243","messageId":"244","endLine":18,"endColumn":11},{"ruleId":"241","severity":1,"message":"281","line":19,"column":8,"nodeType":"243","messageId":"244","endLine":19,"endColumn":13},{"ruleId":"241","severity":1,"message":"282","line":23,"column":8,"nodeType":"243","messageId":"244","endLine":23,"endColumn":21},{"ruleId":"241","severity":1,"message":"271","line":26,"column":8,"nodeType":"243","messageId":"244","endLine":26,"endColumn":11},{"ruleId":"241","severity":1,"message":"283","line":31,"column":9,"nodeType":"243","messageId":"244","endLine":31,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":41,"column":15,"nodeType":"275","endLine":41,"endColumn":34},{"ruleId":"241","severity":1,"message":"284","line":20,"column":3,"nodeType":"243","messageId":"244","endLine":20,"endColumn":8},{"ruleId":"241","severity":1,"message":"285","line":22,"column":8,"nodeType":"243","messageId":"244","endLine":22,"endColumn":15},{"ruleId":"241","severity":1,"message":"286","line":23,"column":8,"nodeType":"243","messageId":"244","endLine":23,"endColumn":12},{"ruleId":"241","severity":1,"message":"287","line":24,"column":8,"nodeType":"243","messageId":"244","endLine":24,"endColumn":14},{"ruleId":"241","severity":1,"message":"288","line":25,"column":8,"nodeType":"243","messageId":"244","endLine":25,"endColumn":16},{"ruleId":"241","severity":1,"message":"289","line":26,"column":8,"nodeType":"243","messageId":"244","endLine":26,"endColumn":15},{"ruleId":"241","severity":1,"message":"290","line":27,"column":8,"nodeType":"243","messageId":"244","endLine":27,"endColumn":12},{"ruleId":"241","severity":1,"message":"270","line":28,"column":10,"nodeType":"243","messageId":"244","endLine":28,"endColumn":14},{"ruleId":"241","severity":1,"message":"291","line":28,"column":16,"nodeType":"243","messageId":"244","endLine":28,"endColumn":25},{"ruleId":"241","severity":1,"message":"292","line":31,"column":10,"nodeType":"243","messageId":"244","endLine":31,"endColumn":20},{"ruleId":"241","severity":1,"message":"293","line":83,"column":10,"nodeType":"243","messageId":"244","endLine":83,"endColumn":19},{"ruleId":"241","severity":1,"message":"294","line":83,"column":21,"nodeType":"243","messageId":"244","endLine":83,"endColumn":33},{"ruleId":"241","severity":1,"message":"295","line":90,"column":17,"nodeType":"243","messageId":"244","endLine":90,"endColumn":25},{"ruleId":"241","severity":1,"message":"296","line":91,"column":18,"nodeType":"243","messageId":"244","endLine":91,"endColumn":27},{"ruleId":"241","severity":1,"message":"297","line":94,"column":10,"nodeType":"243","messageId":"244","endLine":94,"endColumn":19},{"ruleId":"241","severity":1,"message":"298","line":94,"column":21,"nodeType":"243","messageId":"244","endLine":94,"endColumn":33},{"ruleId":"241","severity":1,"message":"299","line":95,"column":10,"nodeType":"243","messageId":"244","endLine":95,"endColumn":19},{"ruleId":"241","severity":1,"message":"300","line":95,"column":21,"nodeType":"243","messageId":"244","endLine":95,"endColumn":33},{"ruleId":"250","severity":1,"message":"301","line":137,"column":6,"nodeType":"252","endLine":137,"endColumn":8,"suggestions":"302"},{"ruleId":"241","severity":1,"message":"303","line":10,"column":3,"nodeType":"243","messageId":"244","endLine":10,"endColumn":11},{"ruleId":"241","severity":1,"message":"304","line":12,"column":3,"nodeType":"243","messageId":"244","endLine":12,"endColumn":8},{"ruleId":"241","severity":1,"message":"305","line":13,"column":3,"nodeType":"243","messageId":"244","endLine":13,"endColumn":14},{"ruleId":"241","severity":1,"message":"306","line":15,"column":3,"nodeType":"243","messageId":"244","endLine":15,"endColumn":12},{"ruleId":"241","severity":1,"message":"270","line":18,"column":10,"nodeType":"243","messageId":"244","endLine":18,"endColumn":14},{"ruleId":"241","severity":1,"message":"292","line":21,"column":10,"nodeType":"243","messageId":"244","endLine":21,"endColumn":20},{"ruleId":"241","severity":1,"message":"307","line":25,"column":8,"nodeType":"243","messageId":"244","endLine":25,"endColumn":15},{"ruleId":"241","severity":1,"message":"308","line":47,"column":10,"nodeType":"243","messageId":"244","endLine":47,"endColumn":19},{"ruleId":"241","severity":1,"message":"309","line":49,"column":9,"nodeType":"243","messageId":"244","endLine":49,"endColumn":17},{"ruleId":"241","severity":1,"message":"310","line":51,"column":10,"nodeType":"243","messageId":"244","endLine":51,"endColumn":21},{"ruleId":"241","severity":1,"message":"311","line":51,"column":23,"nodeType":"243","messageId":"244","endLine":51,"endColumn":37},{"ruleId":"241","severity":1,"message":"297","line":54,"column":10,"nodeType":"243","messageId":"244","endLine":54,"endColumn":19},{"ruleId":"241","severity":1,"message":"298","line":54,"column":21,"nodeType":"243","messageId":"244","endLine":54,"endColumn":33},{"ruleId":"241","severity":1,"message":"299","line":55,"column":10,"nodeType":"243","messageId":"244","endLine":55,"endColumn":19},{"ruleId":"241","severity":1,"message":"300","line":55,"column":21,"nodeType":"243","messageId":"244","endLine":55,"endColumn":33},{"ruleId":"241","severity":1,"message":"295","line":56,"column":17,"nodeType":"243","messageId":"244","endLine":56,"endColumn":25},{"ruleId":"241","severity":1,"message":"296","line":57,"column":18,"nodeType":"243","messageId":"244","endLine":57,"endColumn":27},{"ruleId":"241","severity":1,"message":"283","line":66,"column":9,"nodeType":"243","messageId":"244","endLine":66,"endColumn":15},{"ruleId":"250","severity":1,"message":"301","line":106,"column":6,"nodeType":"252","endLine":106,"endColumn":8,"suggestions":"312"},{"ruleId":"241","severity":1,"message":"269","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":16},{"ruleId":"273","severity":1,"message":"274","line":20,"column":9,"nodeType":"275","endLine":20,"endColumn":70},{"ruleId":"250","severity":1,"message":"251","line":36,"column":6,"nodeType":"252","endLine":36,"endColumn":8,"suggestions":"313"},{"ruleId":"241","severity":1,"message":"269","line":3,"column":3,"nodeType":"243","messageId":"244","endLine":3,"endColumn":9},{"ruleId":"241","severity":1,"message":"305","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":14},{"ruleId":"241","severity":1,"message":"314","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":14},{"ruleId":"241","severity":1,"message":"315","line":10,"column":10,"nodeType":"243","messageId":"244","endLine":10,"endColumn":16},{"ruleId":"241","severity":1,"message":"316","line":10,"column":18,"nodeType":"243","messageId":"244","endLine":10,"endColumn":23},{"ruleId":"241","severity":1,"message":"317","line":15,"column":11,"nodeType":"243","messageId":"244","endLine":15,"endColumn":20},{"ruleId":"241","severity":1,"message":"269","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":9},{"ruleId":"241","severity":1,"message":"277","line":11,"column":3,"nodeType":"243","messageId":"244","endLine":11,"endColumn":6},{"ruleId":"241","severity":1,"message":"318","line":18,"column":10,"nodeType":"243","messageId":"244","endLine":18,"endColumn":14},{"ruleId":"241","severity":1,"message":"319","line":18,"column":16,"nodeType":"243","messageId":"244","endLine":18,"endColumn":23},{"ruleId":"241","severity":1,"message":"256","line":19,"column":10,"nodeType":"243","messageId":"244","endLine":19,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":36,"column":6,"nodeType":"252","endLine":36,"endColumn":8,"suggestions":"320"},{"ruleId":"241","severity":1,"message":"321","line":12,"column":3,"nodeType":"243","messageId":"244","endLine":12,"endColumn":8},{"ruleId":"241","severity":1,"message":"278","line":15,"column":8,"nodeType":"243","messageId":"244","endLine":15,"endColumn":13},{"ruleId":"241","severity":1,"message":"322","line":16,"column":8,"nodeType":"243","messageId":"244","endLine":16,"endColumn":17},{"ruleId":"241","severity":1,"message":"323","line":27,"column":10,"nodeType":"243","messageId":"244","endLine":27,"endColumn":20},{"ruleId":"241","severity":1,"message":"324","line":29,"column":9,"nodeType":"243","messageId":"244","endLine":29,"endColumn":16},{"ruleId":"241","severity":1,"message":"325","line":44,"column":10,"nodeType":"243","messageId":"244","endLine":44,"endColumn":14},{"ruleId":"241","severity":1,"message":"326","line":45,"column":10,"nodeType":"243","messageId":"244","endLine":45,"endColumn":17},{"ruleId":"241","severity":1,"message":"327","line":46,"column":10,"nodeType":"243","messageId":"244","endLine":46,"endColumn":22},{"ruleId":"241","severity":1,"message":"328","line":89,"column":9,"nodeType":"243","messageId":"244","endLine":89,"endColumn":18},{"ruleId":"329","severity":1,"message":"330","line":92,"column":28,"nodeType":"331","messageId":"332","endLine":92,"endColumn":29,"suggestions":"333"},{"ruleId":"250","severity":1,"message":"251","line":39,"column":6,"nodeType":"252","endLine":39,"endColumn":8,"suggestions":"334"},{"ruleId":"250","severity":1,"message":"251","line":31,"column":6,"nodeType":"252","endLine":31,"endColumn":8,"suggestions":"335"},{"ruleId":"250","severity":1,"message":"251","line":43,"column":6,"nodeType":"252","endLine":43,"endColumn":8,"suggestions":"336"},{"ruleId":"250","severity":1,"message":"251","line":63,"column":6,"nodeType":"252","endLine":63,"endColumn":8,"suggestions":"337"},{"ruleId":"250","severity":1,"message":"251","line":29,"column":6,"nodeType":"252","endLine":29,"endColumn":8,"suggestions":"338"},{"ruleId":"250","severity":1,"message":"251","line":66,"column":6,"nodeType":"252","endLine":66,"endColumn":8,"suggestions":"339"},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Linkedin' is defined but never used.","'crest' is defined but never used.","'User' is defined but never used.","'Mail' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["342"],"'Loading' is defined but never used.","'sleep' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["343"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'AOS' is defined but never used.","'signup' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Login' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'toggle' is assigned a value but never used.","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'checkLogin' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["344"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.",["345"],["346"],"'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.",["347"],"'Alert' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'btnTitle1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["348","349"],["350"],["351"],["352"],["353"],["354"],["355"],"no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"360","fix":"362"},{"desc":"356","fix":"363"},{"desc":"356","fix":"364"},{"messageId":"365","fix":"366","desc":"367"},{"messageId":"368","fix":"369","desc":"370"},{"desc":"356","fix":"371"},{"desc":"356","fix":"372"},{"desc":"356","fix":"373"},{"desc":"356","fix":"374"},{"desc":"356","fix":"375"},{"desc":"356","fix":"376"},"Update the dependencies array to be: [token]",{"range":"377","text":"378"},"Update the dependencies array to be: [token, upComing]",{"range":"379","text":"380"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"381","text":"382"},{"range":"383","text":"382"},{"range":"384","text":"378"},{"range":"385","text":"378"},"removeEscape",{"range":"386","text":"387"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"388","text":"389"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"390","text":"378"},{"range":"391","text":"378"},{"range":"392","text":"378"},{"range":"393","text":"378"},{"range":"394","text":"378"},{"range":"395","text":"378"},[876,878],"[token]",[1530,1532],"[token, upComing]",[3802,3804],"[dataMonth, dataWeek, token]",[3045,3047],[839,841],[871,873],[2590,2591],"",[2590,2590],"\\",[830,832],[860,862],[1005,1007],[1406,1408],[819,821],[1659,1661]]
=======
[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\UploadImg.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js":"15","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"16","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"17","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"18","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"19"},{"size":1019,"mtime":1608026248734,"results":"20","hashOfConfig":"21"},{"size":2353,"mtime":1608830741038,"results":"22","hashOfConfig":"21"},{"size":3980,"mtime":1608830741083,"results":"23","hashOfConfig":"21"},{"size":14125,"mtime":1608976366873,"results":"24","hashOfConfig":"21"},{"size":15036,"mtime":1608976708075,"results":"25","hashOfConfig":"21"},{"size":4851,"mtime":1608992990494,"results":"26","hashOfConfig":"21"},{"size":5997,"mtime":1608976268299,"results":"27","hashOfConfig":"21"},{"size":344,"mtime":1608830741097,"results":"28","hashOfConfig":"21"},{"size":3883,"mtime":1608627575489,"results":"29","hashOfConfig":"21"},{"size":1772,"mtime":1608976268330,"results":"30","hashOfConfig":"21"},{"size":9022,"mtime":1608976268343,"results":"31","hashOfConfig":"21"},{"size":1293,"mtime":1607762145160,"results":"32","hashOfConfig":"21"},{"size":871,"mtime":1608282592527,"results":"33","hashOfConfig":"21"},{"size":6524,"mtime":1608627576003,"results":"34","hashOfConfig":"21"},{"size":4963,"mtime":1608977051401,"results":"35","hashOfConfig":"21"},{"size":567,"mtime":1607762145127,"results":"36","hashOfConfig":"21"},{"size":2398,"mtime":1608976268311,"results":"37","hashOfConfig":"21"},{"size":2580,"mtime":1608986972512,"results":"38","hashOfConfig":"21"},{"size":14299,"mtime":1608991184387,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1lm62wj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["85","86"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",["87","88","89","90"],"import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Container, Col, Row, Table } from \"reactstrap\";\r\nimport { Facebook, Twitter, Instagram, Linkedin } from \"react-feather\";\r\nimport gplay from \"../pages/img/googleplay.png\";\r\nimport appstore from \"../pages/img/appstore1.png\";\r\nimport crest from \"../assets/logo-subsit.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container >\r\n        <Container fluid style={{paddingTop:\"30px\"}}>\r\n          {/* <Row md=\"6\" sm=\"12\" style={{ padding: \"1%\", marginTop: \"1%\" }}>\r\n            <img src={crest} alt=\"\" style={{ width: \"10%\" }} />\r\n          </Row> */}\r\n          <Row>\r\n              <Container className=\"icons\" style={{ textAlign: \"center\" }}>\r\n                <Facebook\r\n                  size={45}\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n                <Twitter\r\n                  size={45}\r\n                  style={{\r\n                    marginRight: \"2%\",\r\n                    marginLeft: \"2%\",\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n                <Instagram\r\n                  size={45}\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n              </Container>\r\n          </Row>\r\n          <Row>\r\n              <Container style={{ textAlign: \"center\" }}>\r\n              <Container>\r\n                  <p><b>Terms of use | Privacy Policy</b></p>\r\n              </Container>\r\n              <img className=\"store\" src={gplay} alt=\"\"/>\r\n              <img className=\"store\" src={appstore} alt=\"\"/>\r\n              </Container>\r\n          </Row>\r\n          <b>\r\n            <p className=\"footerTable\">\r\n              Copyright &copy; 2020 SubsItId.herokuapp.com\r\n            </p>\r\n          </b>\r\n        </Container>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js",["91"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nconst TopUp = (props) => {\r\n  const { className } = props;\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const [results, setResults] = useState(\"\");\r\n  const [saldo, setSaldo] = useState(null);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      saldo: parseInt(saldo),\r\n    };\r\n\r\n    // axios\r\n    //   .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\r\n    //     headers: { Authorization: `Bearer ${token}` },\r\n    //   })\r\n    axios({\r\n      method: 'PATCH',\r\n      url: `https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`,\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\"ini res.data top up\");\r\n        console.log(res.data);\r\n        // return window.location.reload();\r\n      });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\r\n        onClick={toggle}\r\n      >\r\n        <strong>Top-up</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Top-up your balance here.</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Container>\r\n              <FormGroup>\r\n                <Label for=\"cardNumber\">Select Card</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"cardNumber\"\r\n                  id=\"cardNumber\"\r\n                  onChange={(e) => setCardNumber(e.target.value)}\r\n                >\r\n                  <option>Select card</option>\r\n                  {results.length !== 0\r\n                    ? results.map((result) => (\r\n                        <option value={result.cardNumber}>\r\n                          {result.cardBank} - IDR {result.saldo}\r\n                        </option>\r\n                      ))\r\n                    : \"\"}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"saldo\">Top-up amount:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"saldo\"\r\n                  id=\"saldo\"\r\n                  onClick={(e) => setSaldo(e.target.value)}\r\n                >\r\n                  <option>Select amount</option>\r\n                  <option>50000</option>\r\n                  <option>100000</option>\r\n                  <option>250000</option>\r\n                  <option>500000</option>\r\n                  <option>1000000</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  size=\"sm\"\r\n                  type=\"submit\"\r\n                  block\r\n                  outline\r\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n                >\r\n                  <strong>Confirm</strong>\r\n                </Button>\r\n              </FormGroup>\r\n            </Container>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopUp;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["92"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport visa from \"../assets/visa.png\";\r\nimport master from \"../assets/mastercard.png\";\r\nimport \"./Profile.css\";\r\nimport expense from \"../assets/expense.png\";\r\n\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure you want to remove this card?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, I'm sure!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete(`${urlCard}?cardNumber=${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          });\r\n        Swal.fire(\"Done!\", \"Your card has been removed.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong><NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Master\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Visa\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Container>\r\n            <p style={{ opacity: \"60%\" }}>\r\n              <i>\r\n                <strong>No card found. Please add card first.</strong>\r\n              </i>\r\n            </p>\r\n            <Col className=\"subs4\">\r\n              <img\r\n                src={expense}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n          // <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { X } from \"react-feather\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"./Profile.css\";\r\nimport { Element } from \"react-scroll\";\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you won't be able to retrieve this data!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          });\r\n        Swal.fire(\"Done!\", \"Your expense record has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"500px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <thead\r\n                className=\"text-center\"\r\n                style={{ backgroundColor: \"#BA8FF2\" }}\r\n              >\r\n                <tr>\r\n                  <th style={{ width: \"20%\" }}>Date</th>\r\n                  <th>Transaction</th>\r\n                  <th>Costs</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              {results.length !== 0 ? (\r\n                results.map((result) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-center\">\r\n                        <Moment format=\"D MMM YYYY\">\r\n                          {result.purchaseDate}\r\n                        </Moment>\r\n                      </td>\r\n                      <td className=\"text-center\" style={{ width: \"50%\" }}>\r\n                        {result.title}\r\n                      </td>\r\n                      \r\n                      <td className=\"text-center\"><NumberFormat value={result.total} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></td>\r\n                      <td style={{ width: \"100%\" }} className=\"text-center\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            handleDelete(result.id);\r\n                          }}\r\n                          color=\"danger\"\r\n                          outline\r\n                        >\r\n                          <X size={15} />\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              ) : (\r\n                <tbody>\r\n                  <tr>\r\n                    <td colSpan=\"6\">\r\n                      <Container>\r\n                        <p style={{ opacity: \"60%\" }}>\r\n                          <i>\r\n                            <strong>No expense found.</strong>\r\n                          </i>\r\n                        </p>\r\n                        <Col className=\"subs3\">\r\n                          <img\r\n                            src={expense}\r\n                            alt=\"\"\r\n                            style={{\r\n                              width: \"40%\",\r\n                              opacity: \"0%\",\r\n                              position: \"center\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                      </Container>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </Element>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["113","114","115","116","117","118"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",["119"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\UploadImg.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["120","121","122","123","124","125","126","127","128","129"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["130","131"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["132"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js",["133","134"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["135","136","137","138","139"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["140","141","142","143","144","145","146","147","148","149"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n  Button\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\nimport { Calendar, PieChart } from 'react-feather';\r\nimport CalendarEvent from \"../components/Calendar\";\r\nimport Bells from \"./Bells\";\r\nimport AOS from 'aos';\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const featureBox1 = [\r\n    \"Sign Up\"\r\n  ];\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\r\n      <Navbar expand=\"sm\" style={{backgroundColor:\"#fefefe\", height:\"100px\"}}>\r\n      <NavbarBrand className=\"lognav\">\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li>\r\n                <a href=\"#about\"><Button id=\"transparant\" >About</Button></a>\r\n                </li>\r\n                <li>\r\n                <a href=\"#service\"><Button id=\"transparant\"> Service </Button></a>\r\n                </li>\r\n                <li>\r\n                <Signup \r\n                  btnTitle={featureBox1}\r\n                />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            <div>\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <PieChart style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Calendar\">\r\n                    <Calendar style={{color:\"#8f48ea\"}}/>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Bells />\r\n                </li>\r\n                <li>\r\n                  <ProfMenu/>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Collapse,\r\n  Spinner,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport youtube from \"./img/youtube.jpg\";\r\nimport hulu from \"./img/hulu-logo.jpg\";\r\nimport disney from \"./img/disney.jpeg\";\r\nimport sportify from \"./img/spotify.jpg\";\r\nimport netflix from \"./img/netflix.jpeg\";\r\nimport logo from \"./img/Rectangle.png\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport '../components/Profile.css'\r\nimport sleep from '../assets/sleep.png'\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\nconst Dashboard = () => {\r\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\r\n  const [subscribes, setSubscribes] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const token = Cookies.get(\"token\");\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [serviceId, setServiceId] = useState([]);\r\n  const [card, setCard] = useState([]);\r\n  const [cardId, setCardId] = useState(null);\r\n  const [checkCard, setCheckCard] = useState(\"\");\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n  const [chartData, setChartData] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const urlWeek = \" https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\r\n\r\n  const history = useHistory();\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setLoading(true);\r\n    axios\r\n      .get(urlSubscribe)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setSubscribes(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCheckCard(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    dataMonth();\r\n    dataWeek();\r\n  }, []);\r\n\r\n  const subscribeDetails = (id) => {\r\n    setLoading(true);\r\n    const url = ` http://52.148.70.171/service?id=${id}`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        console.log(\"subscribe id\", res.data);\r\n        setSubscribeId(res.data);\r\n        setModal(!modal);\r\n        setLoading(false);\r\n        subscribeCard();\r\n        setServiceId(id);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const subscribeCard = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(urlCard, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCard(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const subscribtion = (e) => {\r\n    e.preventDefault();\r\n    const url = ` http://52.148.70.171/subscription/${serviceId}/?cardId=${cardId}`;\r\n    // console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n    // console.log(token)\r\n    axios\r\n      .post(url, null, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        history.push(\"/history\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center mt-5\">\r\n          <Spinner\r\n            type=\"grow\"\r\n            style={{ width: \"4rem\", height: \"4rem\", color: \"#8F48EA\" }}\r\n          />\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n          Please wait...\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132, 0.2)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n              pointBackgroundColor: \"rgb(255, 99, 132)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n          <Col xs=\"12\" className=\"bg-default\">\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <h4>Spending Value</h4>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <div style={{ float: \"right\", position: \"relative\" }}>\r\n                  <Button\r\n                    id=\"button\"\r\n                    onClick={collapse}\r\n                    style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                  <Button\r\n                    id=\"button\"\r\n                    onClick={collapseWeek}\r\n                    style={{ marginBottom: \"1rem\", marginRight: \"30px\" }}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs=\"12\" className=\"bg-default\">\r\n            <Collapse isOpen={isOpen}>\r\n              <Line data={chartData} options={options} />\r\n            </Collapse>\r\n            <Collapse isOpen={isOpenWeek}>\r\n              <Line data={chartWeek} options={options} />\r\n            </Collapse>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className=\"ml-0 mt-3 mb-0\">\r\n          <h3>Popular Apps</h3>\r\n        </Row>\r\n        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n      </Container>\r\n      <Container>\r\n        <Row>\r\n          {checkCard.length !== 0 ? (\r\n            subscribes.map((subscribes) => (\r\n              <Col xs=\"3\" key={subscribes.id}>\r\n                <Card style={{ marginBottom: \"50px\" }}>\r\n                  <CardImg\r\n                    top\r\n                    width=\"100%\"\r\n                    height=\"170px\"\r\n                    src={subscribes.picture}\r\n                    alt=\"subscribtion\"\r\n                    style={{ border: \"0.5px solid grey\" }}\r\n                  />\r\n                  <CardBody className=\"bg-dangers\">\r\n                    <CardTitle\r\n                      tag=\"h6\"\r\n                      className=\"text-dark font-weight-bold text-center\"\r\n                    >\r\n                      <p>\r\n                        <b>{subscribes.name}</b>\r\n                      </p>\r\n                    </CardTitle>\r\n                    <Button\r\n                      onClick={() => subscribeDetails(subscribes.id)}\r\n                      className=\"btn btn-primary btn-block\"\r\n                      id=\"button\"\r\n                    >\r\n                      <b>Susbcribe</b>\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            ))\r\n          ) : (\r\n            <Container className=\"text-align-center\">\r\n              <Container\r\n                style={{\r\n                  opacity: \"60%\",\r\n                  paddingTop: \"30px\",\r\n                }}\r\n              >\r\n                <p>\r\n                  <b>\r\n                    <i>\r\n                      Oops! It seems like you haven't added any card yet. Please\r\n                      submit your card information in your profile page before\r\n                      using this feature.\r\n                    </i>\r\n                  </b>\r\n                </p>\r\n                <Col className=\"subs6\">\r\n                  <img\r\n                    src={sleep}\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      opacity: \"0%\",\r\n                      position: \"center\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Container>\r\n            </Container>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}></ModalHeader>\r\n            <ModalBody>\r\n              {subscribeId.map((subscribe) => (\r\n                <Row key={subscribe.id}>\r\n                  <CardTitle style={{ textAlign: \"center\" }}>\r\n                    <h5>\r\n                      <strong>{subscribe.name}</strong>\r\n                    </h5>\r\n                  </CardTitle>\r\n                  <CardImg\r\n                    top\r\n                    width=\"15%\"\r\n                    src={subscribe.picture}\r\n                    style={{ border: \"0.5px solid grey\" }}\r\n                    alt=\"subscribtion\"\r\n                  />\r\n                  <CardBody style={{ marginBottom:\"-25px\" }}>\r\n                    <CardText style={{ textAlign: \"justify\" }}>\r\n                      <p>{subscribe.description}</p>\r\n                    </CardText>\r\n                    {/* <CardText>\r\n                      <p>\r\n                        Cost: <strong>IDR {subscribe.cost}</strong>\r\n                      </p>\r\n                    </CardText> */}\r\n                    <Row style={{marginBottom: \"-5px\"}}>\r\n                      <Col md=\"7\">\r\n                        \r\n                          <FormGroup>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"cardId\"\r\n                              id=\"cardId\"\r\n                              onChange={(e) => {\r\n                                setCardId(e.target.value);\r\n                                console.log(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option>Select Card</option>\r\n                              {card.length !== 0\r\n                                ? card.map((cards) => (\r\n                                    <option value={cards.id}>\r\n                                      {cards.cardBank} - IDR {cards.saldo}\r\n                                    </option>\r\n                                  ))\r\n                                : \"\"}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        \r\n                      </Col>\r\n                      <Col md=\"5\">\r\n                      <Alert id=\"cost\">\r\n                      <strong><NumberFormat value={subscribe.cost} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/> </strong>\r\n                      </Alert>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col md=\"12\">\r\n                        <Button\r\n                          onClick={subscribtion}\r\n                          className=\"btn btn-block\"\r\n                          id=\"button\"\r\n                        >\r\n                          <b>Subscribe</b>\r\n                        </Button>\r\n                    </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Row>\r\n              ))}\r\n            </ModalBody>\r\n          </Modal>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":3,"column":21,"nodeType":"175","messageId":"176","endLine":3,"endColumn":24},{"ruleId":"173","severity":1,"message":"177","line":3,"column":31,"nodeType":"175","messageId":"176","endLine":3,"endColumn":36},{"ruleId":"173","severity":1,"message":"178","line":4,"column":40,"nodeType":"175","messageId":"176","endLine":4,"endColumn":48},{"ruleId":"173","severity":1,"message":"179","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":39,"column":6,"nodeType":"182","endLine":39,"endColumn":8,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"181","line":69,"column":6,"nodeType":"182","endLine":69,"endColumn":8,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"185","line":10,"column":3,"nodeType":"175","messageId":"176","endLine":10,"endColumn":11},{"ruleId":"173","severity":1,"message":"186","line":12,"column":3,"nodeType":"175","messageId":"176","endLine":12,"endColumn":8},{"ruleId":"173","severity":1,"message":"187","line":13,"column":3,"nodeType":"175","messageId":"176","endLine":13,"endColumn":14},{"ruleId":"173","severity":1,"message":"188","line":15,"column":3,"nodeType":"175","messageId":"176","endLine":15,"endColumn":12},{"ruleId":"173","severity":1,"message":"189","line":18,"column":10,"nodeType":"175","messageId":"176","endLine":18,"endColumn":14},{"ruleId":"173","severity":1,"message":"190","line":21,"column":10,"nodeType":"175","messageId":"176","endLine":21,"endColumn":20},{"ruleId":"173","severity":1,"message":"191","line":25,"column":8,"nodeType":"175","messageId":"176","endLine":25,"endColumn":15},{"ruleId":"173","severity":1,"message":"192","line":48,"column":10,"nodeType":"175","messageId":"176","endLine":48,"endColumn":19},{"ruleId":"173","severity":1,"message":"193","line":50,"column":9,"nodeType":"175","messageId":"176","endLine":50,"endColumn":17},{"ruleId":"173","severity":1,"message":"194","line":52,"column":10,"nodeType":"175","messageId":"176","endLine":52,"endColumn":21},{"ruleId":"173","severity":1,"message":"195","line":52,"column":23,"nodeType":"175","messageId":"176","endLine":52,"endColumn":37},{"ruleId":"173","severity":1,"message":"196","line":55,"column":10,"nodeType":"175","messageId":"176","endLine":55,"endColumn":19},{"ruleId":"173","severity":1,"message":"197","line":55,"column":21,"nodeType":"175","messageId":"176","endLine":55,"endColumn":33},{"ruleId":"173","severity":1,"message":"198","line":56,"column":10,"nodeType":"175","messageId":"176","endLine":56,"endColumn":19},{"ruleId":"173","severity":1,"message":"199","line":56,"column":21,"nodeType":"175","messageId":"176","endLine":56,"endColumn":33},{"ruleId":"173","severity":1,"message":"200","line":57,"column":17,"nodeType":"175","messageId":"176","endLine":57,"endColumn":25},{"ruleId":"173","severity":1,"message":"201","line":58,"column":18,"nodeType":"175","messageId":"176","endLine":58,"endColumn":27},{"ruleId":"173","severity":1,"message":"202","line":67,"column":9,"nodeType":"175","messageId":"176","endLine":67,"endColumn":15},{"ruleId":"180","severity":1,"message":"203","line":107,"column":6,"nodeType":"182","endLine":107,"endColumn":8,"suggestions":"204"},{"ruleId":"180","severity":1,"message":"181","line":32,"column":6,"nodeType":"182","endLine":32,"endColumn":8,"suggestions":"205"},{"ruleId":"173","severity":1,"message":"206","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":15},{"ruleId":"173","severity":1,"message":"207","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":13},{"ruleId":"173","severity":1,"message":"208","line":15,"column":10,"nodeType":"175","messageId":"176","endLine":15,"endColumn":17},{"ruleId":"180","severity":1,"message":"209","line":52,"column":6,"nodeType":"182","endLine":52,"endColumn":8,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":54,"column":69,"nodeType":"213","messageId":"214","endLine":54,"endColumn":71},{"ruleId":"211","severity":1,"message":"212","line":108,"column":41,"nodeType":"213","messageId":"214","endLine":108,"endColumn":43},{"ruleId":"215","severity":1,"message":"216","line":11,"column":5,"nodeType":"217","messageId":"218","endLine":11,"endColumn":17},{"ruleId":"173","severity":1,"message":"219","line":12,"column":3,"nodeType":"175","messageId":"176","endLine":12,"endColumn":8},{"ruleId":"173","severity":1,"message":"220","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":13},{"ruleId":"173","severity":1,"message":"221","line":16,"column":8,"nodeType":"175","messageId":"176","endLine":16,"endColumn":17},{"ruleId":"173","severity":1,"message":"222","line":27,"column":10,"nodeType":"175","messageId":"176","endLine":27,"endColumn":20},{"ruleId":"173","severity":1,"message":"223","line":29,"column":9,"nodeType":"175","messageId":"176","endLine":29,"endColumn":16},{"ruleId":"173","severity":1,"message":"224","line":44,"column":10,"nodeType":"175","messageId":"176","endLine":44,"endColumn":14},{"ruleId":"173","severity":1,"message":"225","line":45,"column":10,"nodeType":"175","messageId":"176","endLine":45,"endColumn":17},{"ruleId":"173","severity":1,"message":"226","line":46,"column":10,"nodeType":"175","messageId":"176","endLine":46,"endColumn":22},{"ruleId":"173","severity":1,"message":"227","line":89,"column":9,"nodeType":"175","messageId":"176","endLine":89,"endColumn":18},{"ruleId":"228","severity":1,"message":"229","line":92,"column":28,"nodeType":"230","messageId":"231","endLine":92,"endColumn":29,"suggestions":"232"},{"ruleId":"173","severity":1,"message":"233","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":20,"column":9,"nodeType":"236","endLine":20,"endColumn":70},{"ruleId":"234","severity":1,"message":"235","line":18,"column":8,"nodeType":"236","endLine":18,"endColumn":27},{"ruleId":"173","severity":1,"message":"237","line":17,"column":8,"nodeType":"175","messageId":"176","endLine":17,"endColumn":14},{"ruleId":"173","severity":1,"message":"238","line":18,"column":8,"nodeType":"175","messageId":"176","endLine":18,"endColumn":20},{"ruleId":"173","severity":1,"message":"239","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":14},{"ruleId":"173","severity":1,"message":"240","line":22,"column":10,"nodeType":"175","messageId":"176","endLine":22,"endColumn":13},{"ruleId":"173","severity":1,"message":"241","line":22,"column":15,"nodeType":"175","messageId":"176","endLine":22,"endColumn":21},{"ruleId":"173","severity":1,"message":"242","line":26,"column":9,"nodeType":"175","messageId":"176","endLine":26,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":46,"column":6,"nodeType":"182","endLine":46,"endColumn":8,"suggestions":"243"},{"ruleId":"173","severity":1,"message":"244","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":16},{"ruleId":"173","severity":1,"message":"245","line":9,"column":3,"nodeType":"175","messageId":"176","endLine":9,"endColumn":6},{"ruleId":"173","severity":1,"message":"220","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":13},{"ruleId":"173","severity":1,"message":"246","line":16,"column":8,"nodeType":"175","messageId":"176","endLine":16,"endColumn":14},{"ruleId":"173","severity":1,"message":"247","line":18,"column":8,"nodeType":"175","messageId":"176","endLine":18,"endColumn":11},{"ruleId":"173","severity":1,"message":"248","line":19,"column":8,"nodeType":"175","messageId":"176","endLine":19,"endColumn":13},{"ruleId":"173","severity":1,"message":"249","line":23,"column":8,"nodeType":"175","messageId":"176","endLine":23,"endColumn":21},{"ruleId":"173","severity":1,"message":"250","line":25,"column":8,"nodeType":"175","messageId":"176","endLine":25,"endColumn":11},{"ruleId":"173","severity":1,"message":"202","line":30,"column":9,"nodeType":"175","messageId":"176","endLine":30,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":40,"column":15,"nodeType":"236","endLine":40,"endColumn":34},{"ruleId":"173","severity":1,"message":"251","line":20,"column":3,"nodeType":"175","messageId":"176","endLine":20,"endColumn":8},{"ruleId":"173","severity":1,"message":"252","line":23,"column":8,"nodeType":"175","messageId":"176","endLine":23,"endColumn":15},{"ruleId":"173","severity":1,"message":"253","line":24,"column":8,"nodeType":"175","messageId":"176","endLine":24,"endColumn":12},{"ruleId":"173","severity":1,"message":"254","line":25,"column":8,"nodeType":"175","messageId":"176","endLine":25,"endColumn":14},{"ruleId":"173","severity":1,"message":"255","line":26,"column":8,"nodeType":"175","messageId":"176","endLine":26,"endColumn":16},{"ruleId":"173","severity":1,"message":"256","line":27,"column":8,"nodeType":"175","messageId":"176","endLine":27,"endColumn":15},{"ruleId":"173","severity":1,"message":"257","line":28,"column":8,"nodeType":"175","messageId":"176","endLine":28,"endColumn":12},{"ruleId":"173","severity":1,"message":"189","line":29,"column":10,"nodeType":"175","messageId":"176","endLine":29,"endColumn":14},{"ruleId":"173","severity":1,"message":"258","line":29,"column":16,"nodeType":"175","messageId":"176","endLine":29,"endColumn":25},{"ruleId":"173","severity":1,"message":"190","line":32,"column":10,"nodeType":"175","messageId":"176","endLine":32,"endColumn":20},{"ruleId":"173","severity":1,"message":"259","line":85,"column":10,"nodeType":"175","messageId":"176","endLine":85,"endColumn":19},{"ruleId":"173","severity":1,"message":"260","line":85,"column":21,"nodeType":"175","messageId":"176","endLine":85,"endColumn":33},{"ruleId":"173","severity":1,"message":"200","line":92,"column":17,"nodeType":"175","messageId":"176","endLine":92,"endColumn":25},{"ruleId":"173","severity":1,"message":"201","line":93,"column":18,"nodeType":"175","messageId":"176","endLine":93,"endColumn":27},{"ruleId":"173","severity":1,"message":"196","line":96,"column":10,"nodeType":"175","messageId":"176","endLine":96,"endColumn":19},{"ruleId":"173","severity":1,"message":"197","line":96,"column":21,"nodeType":"175","messageId":"176","endLine":96,"endColumn":33},{"ruleId":"173","severity":1,"message":"198","line":97,"column":10,"nodeType":"175","messageId":"176","endLine":97,"endColumn":19},{"ruleId":"173","severity":1,"message":"199","line":97,"column":21,"nodeType":"175","messageId":"176","endLine":97,"endColumn":33},{"ruleId":"180","severity":1,"message":"203","line":139,"column":6,"nodeType":"182","endLine":139,"endColumn":8,"suggestions":"261"},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Linkedin' is defined but never used.","'crest' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["264"],["265"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["266"],["267"],"'Loading' is defined but never used.","'sleep' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["268"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Alert' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'btnTitle1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["269","270"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Moment' is defined but never used.","'NumberFormat' is defined but never used.","'avatar' is defined but never used.","'img' is assigned a value but never used.","'setImg' is assigned a value but never used.","'urlUpload' is assigned a value but never used.",["271"],"'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'AOS' is defined but never used.","'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.",["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"273","fix":"278"},{"desc":"279","fix":"280"},{"messageId":"281","fix":"282","desc":"283"},{"messageId":"284","fix":"285","desc":"286"},{"desc":"273","fix":"287"},{"desc":"276","fix":"288"},"Update the dependencies array to be: [token]",{"range":"289","text":"290"},{"range":"291","text":"290"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"292","text":"293"},{"range":"294","text":"290"},"Update the dependencies array to be: [token, upComing]",{"range":"295","text":"296"},"removeEscape",{"range":"297","text":"298"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"299","text":"300"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"301","text":"290"},{"range":"302","text":"293"},[868,870],"[token]",[1777,1779],[3199,3201],"[dataMonth, dataWeek, token]",[939,941],[1581,1583],"[token, upComing]",[2681,2682],"",[2681,2681],"\\",[1095,1097],[3996,3998]]
>>>>>>> 6fc4487fc9aaacb1c9415e4430b85b3a6d7ddcb6
