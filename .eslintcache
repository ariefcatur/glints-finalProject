[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\UploadImg.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js":"15"},{"size":1019,"mtime":1608026248734,"results":"16","hashOfConfig":"17"},{"size":2353,"mtime":1608830741038,"results":"18","hashOfConfig":"17"},{"size":3980,"mtime":1608830741083,"results":"19","hashOfConfig":"17"},{"size":14125,"mtime":1608976366873,"results":"20","hashOfConfig":"17"},{"size":15036,"mtime":1608976708075,"results":"21","hashOfConfig":"17"},{"size":4799,"mtime":1608976647560,"results":"22","hashOfConfig":"17"},{"size":5997,"mtime":1608976268299,"results":"23","hashOfConfig":"17"},{"size":344,"mtime":1608830741097,"results":"24","hashOfConfig":"17"},{"size":3883,"mtime":1608627575489,"results":"25","hashOfConfig":"17"},{"size":1772,"mtime":1608976268330,"results":"26","hashOfConfig":"17"},{"size":9022,"mtime":1608976268343,"results":"27","hashOfConfig":"17"},{"size":1293,"mtime":1607762145160,"results":"28","hashOfConfig":"17"},{"size":871,"mtime":1608282592527,"results":"29","hashOfConfig":"17"},{"size":6524,"mtime":1608627576003,"results":"30","hashOfConfig":"17"},{"size":4963,"mtime":1608977051401,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lm62wj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["67","68"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",["69","70","71","72"],"import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Container, Col, Row, Table } from \"reactstrap\";\r\nimport { Facebook, Twitter, Instagram, Linkedin } from \"react-feather\";\r\nimport gplay from \"../pages/img/googleplay.png\";\r\nimport appstore from \"../pages/img/appstore1.png\";\r\nimport crest from \"../assets/logo-subsit.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container >\r\n        <Container fluid style={{paddingTop:\"30px\"}}>\r\n          {/* <Row md=\"6\" sm=\"12\" style={{ padding: \"1%\", marginTop: \"1%\" }}>\r\n            <img src={crest} alt=\"\" style={{ width: \"10%\" }} />\r\n          </Row> */}\r\n          <Row>\r\n              <Container className=\"icons\" style={{ textAlign: \"center\" }}>\r\n                <Facebook\r\n                  size={45}\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n                <Twitter\r\n                  size={45}\r\n                  style={{\r\n                    marginRight: \"2%\",\r\n                    marginLeft: \"2%\",\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n                <Instagram\r\n                  size={45}\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    fill: \"#ba8ff2\",\r\n                    borderRadius: \"100%\",\r\n                    backgroundColor: \"#222222\",\r\n                  }}\r\n                />\r\n              </Container>\r\n          </Row>\r\n          <Row>\r\n              <Container style={{ textAlign: \"center\" }}>\r\n              <Container>\r\n                  <p><b>Terms of use | Privacy Policy</b></p>\r\n              </Container>\r\n              <img className=\"store\" src={gplay} alt=\"\"/>\r\n              <img className=\"store\" src={appstore} alt=\"\"/>\r\n              </Container>\r\n          </Row>\r\n          <b>\r\n            <p className=\"footerTable\">\r\n              Copyright &copy; 2020 SubsItId.herokuapp.com\r\n            </p>\r\n          </b>\r\n        </Container>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TopUp.js",["73"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nconst TopUp = (props) => {\r\n  const { className } = props;\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const [results, setResults] = useState(\"\");\r\n  const [saldo, setSaldo] = useState(null);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      saldo: parseInt(saldo),\r\n    };\r\n\r\n    // axios\r\n    //   .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\r\n    //     headers: { Authorization: `Bearer ${token}` },\r\n    //   })\r\n    axios({\r\n      method: 'PATCH',\r\n      url: `https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`,\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\"ini res.data top up\");\r\n        console.log(res.data);\r\n        // return window.location.reload();\r\n      });\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\r\n        onClick={toggle}\r\n      >\r\n        <strong>Top-up</strong>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Top-up your balance here.</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Container>\r\n              <FormGroup>\r\n                <Label for=\"cardNumber\">Select Card</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"cardNumber\"\r\n                  id=\"cardNumber\"\r\n                  onChange={(e) => setCardNumber(e.target.value)}\r\n                >\r\n                  <option>Select card</option>\r\n                  {results.length !== 0\r\n                    ? results.map((result) => (\r\n                        <option value={result.cardNumber}>\r\n                          {result.cardBank} - IDR {result.saldo}\r\n                        </option>\r\n                      ))\r\n                    : \"\"}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"saldo\">Top-up amount:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"saldo\"\r\n                  id=\"saldo\"\r\n                  onClick={(e) => setSaldo(e.target.value)}\r\n                >\r\n                  <option>Select amount</option>\r\n                  <option>50000</option>\r\n                  <option>100000</option>\r\n                  <option>250000</option>\r\n                  <option>500000</option>\r\n                  <option>1000000</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  size=\"sm\"\r\n                  type=\"submit\"\r\n                  block\r\n                  outline\r\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n                >\r\n                  <strong>Confirm</strong>\r\n                </Button>\r\n              </FormGroup>\r\n            </Container>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopUp;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["74"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport visa from \"../assets/visa.png\";\r\nimport master from \"../assets/mastercard.png\";\r\nimport \"./Profile.css\";\r\nimport expense from \"../assets/expense.png\";\r\n\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure you want to remove this card?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, I'm sure!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete(`${urlCard}?cardNumber=${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          });\r\n        Swal.fire(\"Done!\", \"Your card has been removed.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong><NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Master\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo >= 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Visa\"\r\n            ) {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4} className=\"mb-4\">\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong> <NumberFormat value={result.saldo} displayType={'text'} thousandSeparator={true} prefix={'IDR '}/></strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Container>\r\n            <p style={{ opacity: \"60%\" }}>\r\n              <i>\r\n                <strong>No card found. Please add card first.</strong>\r\n              </i>\r\n            </p>\r\n            <Col className=\"subs4\">\r\n              <img\r\n                src={expense}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n          // <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["94","95","96"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { X } from \"react-feather\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"./Profile.css\";\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you won't be able to retrieve this data!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#BA8FF2\",\r\n      cancelButtonColor: \"#8B8B8B\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            return window.location.reload();\r\n          });\r\n        Swal.fire(\"Done!\", \"Your expense record has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"500px\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <thead\r\n                className=\"text-center\"\r\n                style={{ backgroundColor: \"#BA8FF2\" }}\r\n              >\r\n                <tr>\r\n                  <th style={{ width: \"30%\" }}>Date</th>\r\n                  <th>Transaction</th>\r\n                  <th>Currency</th>\r\n                  <th>Costs</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              {results.length !== 0 ? (\r\n                results.map((result) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-center\">\r\n                        <Moment format=\"D MMM YYYY\">\r\n                          {result.purchaseDate}\r\n                        </Moment>\r\n                      </td>\r\n                      <td className=\"text-center\" style={{ width: \"50%\" }}>\r\n                        {result.title}\r\n                      </td>\r\n                      <td className=\"text-center\">IDR</td>\r\n                      <td className=\"text-center\">{result.total}</td>\r\n                      <td style={{ width: \"100%\" }} className=\"text-center\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            handleDelete(result.id);\r\n                          }}\r\n                          color=\"danger\"\r\n                          outline\r\n                        >\r\n                          <X size={15} />\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              ) : (\r\n                <tbody>\r\n                  <tr>\r\n                    <td colSpan=\"6\">\r\n                      <Container>\r\n                        <p style={{ opacity: \"60%\" }}>\r\n                          <i>\r\n                            <strong>No expense found.</strong>\r\n                          </i>\r\n                        </p>\r\n                        <Col className=\"subs3\">\r\n                          <img\r\n                            src={expense}\r\n                            alt=\"\"\r\n                            style={{\r\n                              width: \"40%\",\r\n                              opacity: \"0%\",\r\n                              position: \"center\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                      </Container>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              )}\r\n            </Element>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["97","98","99","100","101","102"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",["103"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\UploadImg.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["104","105","106","107","108","109","110","111","112","113"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["114","115"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["116"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js",["117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":21,"nodeType":"125","messageId":"126","endLine":3,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":3,"column":31,"nodeType":"125","messageId":"126","endLine":3,"endColumn":36},{"ruleId":"123","severity":1,"message":"128","line":4,"column":40,"nodeType":"125","messageId":"126","endLine":4,"endColumn":48},{"ruleId":"123","severity":1,"message":"129","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":39,"column":6,"nodeType":"132","endLine":39,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"131","line":69,"column":6,"nodeType":"132","endLine":69,"endColumn":8,"suggestions":"134"},{"ruleId":"123","severity":1,"message":"135","line":10,"column":3,"nodeType":"125","messageId":"126","endLine":10,"endColumn":11},{"ruleId":"123","severity":1,"message":"136","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":8},{"ruleId":"123","severity":1,"message":"137","line":13,"column":3,"nodeType":"125","messageId":"126","endLine":13,"endColumn":14},{"ruleId":"123","severity":1,"message":"138","line":15,"column":3,"nodeType":"125","messageId":"126","endLine":15,"endColumn":12},{"ruleId":"123","severity":1,"message":"139","line":18,"column":10,"nodeType":"125","messageId":"126","endLine":18,"endColumn":14},{"ruleId":"123","severity":1,"message":"140","line":21,"column":10,"nodeType":"125","messageId":"126","endLine":21,"endColumn":20},{"ruleId":"123","severity":1,"message":"141","line":25,"column":8,"nodeType":"125","messageId":"126","endLine":25,"endColumn":15},{"ruleId":"123","severity":1,"message":"142","line":48,"column":10,"nodeType":"125","messageId":"126","endLine":48,"endColumn":19},{"ruleId":"123","severity":1,"message":"143","line":50,"column":9,"nodeType":"125","messageId":"126","endLine":50,"endColumn":17},{"ruleId":"123","severity":1,"message":"144","line":52,"column":10,"nodeType":"125","messageId":"126","endLine":52,"endColumn":21},{"ruleId":"123","severity":1,"message":"145","line":52,"column":23,"nodeType":"125","messageId":"126","endLine":52,"endColumn":37},{"ruleId":"123","severity":1,"message":"146","line":55,"column":10,"nodeType":"125","messageId":"126","endLine":55,"endColumn":19},{"ruleId":"123","severity":1,"message":"147","line":55,"column":21,"nodeType":"125","messageId":"126","endLine":55,"endColumn":33},{"ruleId":"123","severity":1,"message":"148","line":56,"column":10,"nodeType":"125","messageId":"126","endLine":56,"endColumn":19},{"ruleId":"123","severity":1,"message":"149","line":56,"column":21,"nodeType":"125","messageId":"126","endLine":56,"endColumn":33},{"ruleId":"123","severity":1,"message":"150","line":57,"column":17,"nodeType":"125","messageId":"126","endLine":57,"endColumn":25},{"ruleId":"123","severity":1,"message":"151","line":58,"column":18,"nodeType":"125","messageId":"126","endLine":58,"endColumn":27},{"ruleId":"123","severity":1,"message":"152","line":67,"column":9,"nodeType":"125","messageId":"126","endLine":67,"endColumn":15},{"ruleId":"130","severity":1,"message":"153","line":107,"column":6,"nodeType":"132","endLine":107,"endColumn":8,"suggestions":"154"},{"ruleId":"123","severity":1,"message":"155","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":32,"column":6,"nodeType":"132","endLine":32,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":2,"message":"158","line":64,"column":14,"nodeType":"159","endLine":64,"endColumn":21},{"ruleId":"123","severity":1,"message":"160","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":15},{"ruleId":"123","severity":1,"message":"161","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":13},{"ruleId":"123","severity":1,"message":"162","line":15,"column":10,"nodeType":"125","messageId":"126","endLine":15,"endColumn":17},{"ruleId":"130","severity":1,"message":"163","line":52,"column":6,"nodeType":"132","endLine":52,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":54,"column":69,"nodeType":"167","messageId":"168","endLine":54,"endColumn":71},{"ruleId":"165","severity":1,"message":"166","line":108,"column":41,"nodeType":"167","messageId":"168","endLine":108,"endColumn":43},{"ruleId":"169","severity":1,"message":"170","line":11,"column":5,"nodeType":"171","messageId":"172","endLine":11,"endColumn":17},{"ruleId":"123","severity":1,"message":"173","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":8},{"ruleId":"123","severity":1,"message":"174","line":15,"column":8,"nodeType":"125","messageId":"126","endLine":15,"endColumn":13},{"ruleId":"123","severity":1,"message":"175","line":16,"column":8,"nodeType":"125","messageId":"126","endLine":16,"endColumn":17},{"ruleId":"123","severity":1,"message":"176","line":27,"column":10,"nodeType":"125","messageId":"126","endLine":27,"endColumn":20},{"ruleId":"123","severity":1,"message":"177","line":29,"column":9,"nodeType":"125","messageId":"126","endLine":29,"endColumn":16},{"ruleId":"123","severity":1,"message":"178","line":44,"column":10,"nodeType":"125","messageId":"126","endLine":44,"endColumn":14},{"ruleId":"123","severity":1,"message":"179","line":45,"column":10,"nodeType":"125","messageId":"126","endLine":45,"endColumn":17},{"ruleId":"123","severity":1,"message":"180","line":46,"column":10,"nodeType":"125","messageId":"126","endLine":46,"endColumn":22},{"ruleId":"123","severity":1,"message":"181","line":89,"column":9,"nodeType":"125","messageId":"126","endLine":89,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":92,"column":28,"nodeType":"184","messageId":"185","endLine":92,"endColumn":29,"suggestions":"186"},{"ruleId":"123","severity":1,"message":"187","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":20,"column":9,"nodeType":"190","endLine":20,"endColumn":70},{"ruleId":"188","severity":1,"message":"189","line":18,"column":8,"nodeType":"190","endLine":18,"endColumn":27},{"ruleId":"123","severity":1,"message":"191","line":17,"column":8,"nodeType":"125","messageId":"126","endLine":17,"endColumn":14},{"ruleId":"123","severity":1,"message":"155","line":18,"column":8,"nodeType":"125","messageId":"126","endLine":18,"endColumn":20},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Linkedin' is defined but never used.","'crest' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["194"],["195"],"'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["196"],"'NumberFormat' is defined but never used.",["197"],"react/jsx-no-undef","'Element' is not defined.","JSXIdentifier","'Loading' is defined but never used.","'sleep' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["198"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Alert' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'btnTitle1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["199","200"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"204","fix":"205"},{"desc":"201","fix":"206"},{"desc":"207","fix":"208"},{"messageId":"209","fix":"210","desc":"211"},{"messageId":"212","fix":"213","desc":"214"},"Update the dependencies array to be: [token]",{"range":"215","text":"216"},{"range":"217","text":"216"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"218","text":"219"},{"range":"220","text":"216"},"Update the dependencies array to be: [token, upComing]",{"range":"221","text":"222"},"removeEscape",{"range":"223","text":"224"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"225","text":"226"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[868,870],"[token]",[1777,1779],[3199,3201],"[dataMonth, dataWeek, token]",[900,902],[1581,1583],"[token, upComing]",[2681,2682],"",[2681,2681],"\\"]