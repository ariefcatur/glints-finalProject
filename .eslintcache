[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowCard.js":"14"},{"size":567,"mtime":1607074685755,"results":"15","hashOfConfig":"16"},{"size":2451,"mtime":1607263567268,"results":"17","hashOfConfig":"16"},{"size":11565,"mtime":1607535092741,"results":"18","hashOfConfig":"16"},{"size":2341,"mtime":1607397780662,"results":"19","hashOfConfig":"16"},{"size":12861,"mtime":1607090286108,"results":"20","hashOfConfig":"16"},{"size":1293,"mtime":1607072077847,"results":"21","hashOfConfig":"16"},{"size":2063,"mtime":1607072077844,"results":"22","hashOfConfig":"16"},{"size":884,"mtime":1607263567302,"results":"23","hashOfConfig":"16"},{"size":6503,"mtime":1607401487995,"results":"24","hashOfConfig":"16"},{"size":13320,"mtime":1607524781783,"results":"25","hashOfConfig":"16"},{"size":312,"mtime":1607263567296,"results":"26","hashOfConfig":"16"},{"size":4359,"mtime":1607401521116,"results":"27","hashOfConfig":"16"},{"size":199,"mtime":1607086232092,"results":"28","hashOfConfig":"16"},{"size":1524,"mtime":1607403857402,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lm62wj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],["66","67"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],["68","69"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    Collapse,\r\n    ModalBody\r\n    \r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link } from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie'\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n}\r\n\r\nconst History = () =>{ \r\n    const [history, setHistory]=useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const token = Cookies.get('token');\r\n    const fullName = Cookies.get('fullName')\r\n    const [expense, setExpense]=useState([]);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    console.log(token)\r\n\r\n    const urlHistory ='http://3.0.91.163/subscription'\r\n    const urlExpense ='http://3.0.91.163/expense'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n    \r\n    useEffect(()=>{\r\n        setIsLoading(true);\r\n        axios\r\n        .get(urlHistory, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            setHistory(res.data);\r\n            setIsLoading(false);    \r\n        })\r\n        .catch((err)=>console.log(err))\r\n\r\n        axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setExpense(res.data);\r\n            setIsLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        dataMonth();\r\n        dataWeek();\r\n    }, [])\r\n    \r\n    const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n             console.log(res);\r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        console.log(dates, totals)\r\n        \r\n    }\r\n\r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res);\r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n    \r\n    const handleRemove = (e) => {\r\n        const url = `http://3.0.91.163/subscription/:serviceId/`;\r\n        axios\r\n        .delete(url, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            setIsLoading(false);    \r\n        })\r\n        .catch((err)=>console.log(err))\r\n    } \r\n\r\n    // const expenses = () =>{\r\n    //     setIsLoading(true);\r\n    //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n    //     .then((res)=>{\r\n    //         console.log(res.data)\r\n    //         setExpense(res.data);\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch((err)=> console.log(err));\r\n    // }\r\n\r\n    const deleteSubscribe = () =>{\r\n\r\n    }\r\n    const subscribeDetails = (id) => {\r\n        setIsLoading(true);\r\n        const url =`http://3.0.91.163/service?id=${id}`\r\n        axios.get(url).then((res)=>{\r\n            console.log(res.data.subscribeId)\r\n            setSubscribeId(res.data);\r\n            setModal(!modal)\r\n            setIsLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));           \r\n    }\r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n            <Row>\r\n            <Col xs=\"8\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\"className=\"bg-default\">\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'10px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscribe</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {history.map((history)=>(\r\n                        <Col xs=\"4\" key={history.id}>\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"150px\"\r\n                                src={history.service.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                {history.service.name}\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=> subscribeDetails(history.id)}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id =\"button\"\r\n                            >\r\n                                Unsubcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <h5>\r\n                                    Description: <br/>{subscribe.description}\r\n                                </h5>\r\n                                <h5>\r\n                                    Cost: {subscribe.cost}\r\n                                </h5>   \r\n                            </CardText>\r\n                            <Row>\r\n                            <Button\r\n                                to=\"\"\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Unsubscribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                                </Col>\r\n                            ))}\r\n                            \r\n                    </ModalBody>\r\n                </Modal>\r\n            </Container>\r\n            </Col>\r\n            <Col xs=\"4\" style={{backgroundColor: 'white'}}> \r\n                <h4>history</h4>\r\n                {history.map((subscribtion, i)=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                    <Row>\r\n                    <Col xs=\"8\">\r\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight\"><h6>{subscribtion.service.name}  <br/> {subscribtion.repeat}</h6> \r\n                    </CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                    <h6>Rp.  {subscribtion.service.cost} </h6>\r\n                    </Col>       \r\n                    </Row>\r\n                </Card>\r\n                ))}\r\n                {expense.map((expenses, i )=>(\r\n                <Card key={i} style={{marginTop: '20px', backgroundColor: '#f6f9fc'}}>\r\n                <Row>\r\n                    <Col xs=\"8\">\r\n                    <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold\"><h6>{expenses.title} <br/> {expenses.purchaseDate}</h6></CardTitle>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                    <h6>Rp.  {expenses.total} </h6>\r\n                    </Col>  \r\n                </Row>  \r\n                </Card> \r\n                ))}\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default History;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["89","90"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["91","92","93","94","95","96","97"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Modalender.js",["98","99"],"import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Calendar from \"react-calendar\";\r\nimport Lendar from \"./img/calendar.svg\";\r\nimport \"./Modalender.css\"\r\n\r\nconst Modalender = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\r\n  return (\r\n    <div>\r\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\r\n           \r\n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\r\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\r\n        <ModalHeader>CALENDAR</ModalHeader>\r\n        <ModalBody>\r\n          <b>Your Schedule</b><br />\r\n            <Calendar />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modalender;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js",["100","101","102","103","104","105"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Signup from \"./Signup\";\r\n\r\n\r\nconst Login = (props) => {\r\n  const { className } = props;\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-dialog modal-login\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"model-header\">\r\n            <h4 className=\"modal-title\">LOGIN</h4>\r\n            <button className=\"close\"></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form method=\"post\">\r\n              <div className=\"form-group\">\r\n                <i className=\"fa fa-user\"></i>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Username\"\r\n                  required=\"required\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <i className=\"fa fa-lock\"></i>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  required=\"required\"\r\n                />\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block btn-lg\"\r\n                  value=\"Login\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\r\n          </div>\r\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\r\n            <ModalBody>\r\n              <Signup />\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["106"],"import profile from \"./img/Ellipse 1.svg\";\r\nimport React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst ProfMenu = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  \r\n\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle\r\n        tag=\"span\"\r\n        data-toggle=\"dropdown\"\r\n        aria-expanded={dropdownOpen}\r\n      >\r\n       <img src={profile}></img>\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem> <Link to=\"/profile\">View Profile</Link></DropdownItem>\r\n        <DropdownItem> <Link to=\"/logout\">Log Out</Link></DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default ProfMenu;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",["107"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Plus } from 'react-feather'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nconst AddCard = (props) => {\r\n\r\n  const urlAddCard = \"http://3.0.91.163/card\";\r\n\r\n  const history = useHistory();\r\n\r\n  const { className } = props;\r\n\r\n  const [cardType, setCardType] = useState(null);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardValid, setCardValid] = useState(\"\");\r\n  const [cvv, setCvv] = useState(\"\");\r\n  const [cardBank, setCardBank] = useState(null);\r\n  const [saldo, setSaldo] = useState(\"\");\r\n  const [cardHolder, setCardHolder] = useState(\"\");\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      cardType: cardType,\r\n      cardNumber: cardNumber,\r\n      cardValid: cardValid,\r\n      cvv: cvv,\r\n      cardBank: cardBank,\r\n      saldo: saldo,\r\n      cardHolder: cardHolder,\r\n    };\r\n\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(urlAddCard, data, {\r\n        headers: {Authorization: `Bearer ${token}`}\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) =>{\r\n        console.log(error);\r\n      })\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"sm\"\r\n        className=\"mt-2 mr-2 mb-sm-0\"\r\n        style={{color: \"white\", backgroundColor: \"#8F48EA\"}}\r\n        onClick={toggle}>\r\n        <Plus size={15}/>\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          <p>Add new card here.</p>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={handleSubmit}>\r\n              <Row form>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"cardType\">Card Type</Label>\r\n                        <Input\r\n                        type=\"select\"\r\n                        name=\"cardType\"\r\n                        id=\"cardType\"\r\n                        onChange={(e) => setCardType(e.target.value)}\r\n                        >\r\n                            <option>Select card type</option>\r\n                            <option>Master</option>\r\n                            <option>Visa</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"cardNumber\">Card Number</Label>\r\n                        <Input\r\n                        type=\"cardNumber\"\r\n                        name=\"cardNumber\"\r\n                        id=\"cardNumber\"\r\n                        placeholder=\"•••• •••• •••• ••••\"\r\n                        onChange={(e) => setCardNumber(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"cardValid\">Card Expiry</Label>\r\n                        <Input\r\n                        type=\"cardValid\"\r\n                        name=\"cardValid\"\r\n                        id=\"cardValid\"\r\n                        placeholder=\"•• / ••\"\r\n                        onChange={(e) => setCardValid(e.target.value)}\r\n                        />\r\n                  </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"cvv\">Card CVC</Label>\r\n                     <Input\r\n                        type=\"cvv\"\r\n                        name=\"cvv\"\r\n                        id=\"cvv\"\r\n                        placeholder=\"••••\"\r\n                        onChange={(e) => setCvv(e.target.value)}\r\n                     />\r\n                  </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"cardBank\">Bank</Label>\r\n                        <Input\r\n                        type=\"select\"\r\n                        name=\"cardBank\"\r\n                        id=\"cardBank\"\r\n                        onChange={(e) => setCardBank(e.target.value)}\r\n                        >\r\n                          <option>Select Bank</option>\r\n                          <option>BRI</option>\r\n                          <option>Mandiri</option>\r\n                          <option>BNI</option>\r\n                          <option>BCA</option>\r\n                          <option>CIMB Niaga</option>\r\n                          <option>BTN</option>\r\n                          <option>Panin</option>\r\n                          <option>Citibank</option>\r\n                          <option>Other</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"saldo\">Balance</Label>\r\n                     <Input\r\n                        type=\"saldo\"\r\n                        name=\"saldo\"\r\n                        id=\"saldo\"\r\n                        placeholder=\"IDR\"\r\n                        onChange={(e) => setSaldo(e.target.value)}\r\n                     />\r\n                  </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"cardHolder\">Card Holder Name</Label>\r\n                        <Input\r\n                        type=\"cardHolder\"\r\n                        name=\"cardHolder\"\r\n                        id=\"cardHolder\"\r\n                        placeholder=\"Input card holder's name\"\r\n                        onChange={(e) => setCardHolder(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                  </Col>\r\n              </Row>\r\n            <FormGroup>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                onClick={toggle}\r\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\r\n              >\r\n                <strong>Add New Card</strong>\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCard;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Dashboard.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Collapse,\r\n    Spinner,\r\n    FormGroup,\r\n    Input,\r\n    Label\r\n} from 'reactstrap';\r\nimport youtube from './img/youtube.jpg'\r\nimport hulu from './img/hulu-logo.jpg'\r\nimport disney from './img/disney.jpeg'\r\nimport sportify from './img/spotify.jpg'\r\nimport netflix from './img/netflix.jpeg'\r\nimport logo from './img/Rectangle.png'\r\nimport { Link, useParams} from 'react-router-dom';\r\nimport { Line } from '@reactchartjs/react-chart.js'\r\nimport axios from 'axios';\r\nimport {checkLogin} from '../Helper';\r\nimport Cookies from 'js-cookie';\r\nimport AddExpenses from '../components/AddExpenses';\r\n\r\n\r\n// const dataMonth= {\r\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Month',\r\n//             data: [12, 19, 3, 5, 2, 3],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n// const options = {\r\n//     scales: {\r\n//         yAxes: [\r\n//           {\r\n//             ticks: {\r\n//               beginAtZero: true,\r\n//             },\r\n//           },\r\n//         ],\r\n//       },\r\n// }\r\n\r\n// const dataWeek= {\r\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\r\n//     datasets:[\r\n//         {\r\n//             label: '# Week',\r\n//             data: [12, 19, 3, 5],\r\n//             fill: false,\r\n//             backgroundColor: 'rgb(255, 99, 132)',\r\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\r\n//         },\r\n//     ],\r\n// }\r\n\r\n\r\n\r\n\r\nconst Dashboard = () =>{ \r\n    const urlSubscribe = 'http://3.0.91.163/service'\r\n    const [subscribes, setSubscribes] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [subscribeId, setSubscribeId] = useState([]);\r\n    const token = Cookies.get('token');\r\n    const [startDate, setStartDate] = useState(0)\r\n    const [serviceId, setServiceId] = useState([])\r\n    const [card,setCard] = useState([])\r\n    const [cardId, setCardId] = useState(null)\r\n    const urlCard = 'http://3.0.91.163/card'\r\n    const [chartData, setChartData] = useState({});\r\n    const [dates, setDates] = useState([]);\r\n    const [totals, setTotals] = useState([]);\r\n    const urlMonth='http://3.0.91.163/chart/monthly'\r\n    const [chartWeek, setChartWeek] = useState({});\r\n    const [weekMonth, setWeekMonth] = useState([]);\r\n    const [totalWeek, setTotalWeek] = useState([]);\r\n    const urlWeek='http://3.0.91.163/chart/weekly'\r\n\r\n    const toggle = () =>setModal(!modal);\r\n    const collapse = () => {setIsOpen(true); setIsOpenWeek(false)}\r\n    const collapseWeek = () => {setIsOpenWeek(true); setIsOpen(false);}\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(urlSubscribe).then((res) => {\r\n          setSubscribes(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n        \r\n        dataMonth();\r\n        dataWeek();\r\n      }, []);\r\n    \r\n    const subscribeDetails = (id) => {\r\n        setLoading(true);\r\n        const url =`http://3.0.91.163/service?id=${id}`\r\n        axios.get(url).then((res)=>{\r\n            console.log(\"subscribe id\", res.data)\r\n            setSubscribeId(res.data);\r\n            setModal(!modal)\r\n            setLoading(false);\r\n            subscribeCard()\r\n            setServiceId(id)\r\n        })\r\n        .catch((err)=> console.log(err));           \r\n    }\r\n\r\n    \r\n    const subscribeCard = () =>{\r\n        setLoading(true);\r\n        axios.get(urlCard, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setCard(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((err)=> console.log(err));\r\n    }\r\n    \r\n    const subscribtion = (e)=>{\r\n        e.preventDefault();\r\n        const url =`http://3.0.91.163/subscription/${serviceId}/?cardId=${cardId}`\r\n        console.log(\"service Id \", serviceId, \"cardId \", cardId)\r\n        console.log(token)\r\n        axios\r\n        .post(url, null, {headers : {Authorization : `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n        })\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Spinner type=\"grow\" color=\"warning\" />\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n              Sedang memuat data...\r\n            </Row>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      const dataMonth =()=>  {\r\n        let month = [];\r\n        let pay = [];\r\n         axios\r\n         .get(urlMonth, {headers:{Authorization: `Bearer ${token}`}})\r\n         .then((res)=>{\r\n            \r\n             for(const dataObj of res.data){\r\n                 month.push(dataObj.dates)\r\n                 pay.push(dataObj.totals)\r\n             }\r\n             setChartData({\r\n                labels: month,\r\n                datasets:[\r\n                    {\r\n                        label: '# Month',\r\n                        data: pay,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                    },\r\n                ],  \r\n            })\r\n         }).catch((err)=>{\r\n             console.log(err)\r\n        });\r\n        console.log(dates, totals)\r\n        \r\n    }\r\n    \r\n    const dataWeek =()=> {\r\n        let week = [];\r\n        let pay = [];\r\n        axios\r\n        .get(urlWeek, {headers:{Authorization: `Bearer ${token}`}})\r\n        .then((res)=>{\r\n            \r\n            for(const dataObj of res.data){\r\n                week.push(dataObj.weekMonth)\r\n                pay.push(dataObj.totals)\r\n            }\r\n            setChartWeek({\r\n               labels: week,\r\n               datasets:[\r\n                   {\r\n                       label: '# Week',\r\n                       data: pay,\r\n                       fill: false,\r\n                       backgroundColor: 'rgb(255, 99, 132)',\r\n                       borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                   },\r\n               ],  \r\n           })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n       });\r\n       console.log(dates, totals)\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n    }\r\n    \r\n   \r\n    return(\r\n        <Container fluid className=\"content\">\r\n            <Container>\r\n                <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Row>\r\n                        <Col xs=\"6\">\r\n                            <h4>Spending Value</h4>\r\n                        </Col>\r\n                        <Col xs=\"6\">   \r\n                        <div style={{float :'right', position:'relative',  }}> \r\n                        <Button  id=\"button\" onClick={collapse} style={{ marginBottom: '1rem',marginRight:'20px' }}>Month</Button>\r\n                        <Button  id=\"button\" onClick={collapseWeek} style={{ marginBottom: '1rem', marginRight:'30px'}}>Week</Button>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs=\"12\" className=\"bg-default\">\r\n                        <Collapse isOpen={isOpen}>\r\n                            <Line data={chartData}  options={options} />\r\n                        </Collapse>\r\n                        <Collapse isOpen={isOpenWeek}>\r\n                            <Line data={chartWeek}  options={options} />\r\n                        </Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n            <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Popular Apps</h3>\r\n            </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    {subscribes.map((subscribes, ) =>(\r\n                        <Col xs=\"3\" key={subscribes.id}>\r\n                        <Card style={{marginBottom:'50px'}}>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"170px\"\r\n                                src={subscribes.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardBody className=\"bg-dangers\">\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                                <h5>{subscribes.name}</h5>\r\n                            </CardTitle>\r\n                            <Row>\r\n                            <Button\r\n                                onClick={()=> subscribeDetails(subscribes.id)}\r\n                                className=\"btn btn-primary btn-block\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subcribe\r\n                            </Button>\r\n                            </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>  \r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    <Modal isOpen={modal} toggle={toggle} >\r\n                        <ModalHeader toggle={toggle}> \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        {subscribeId.map((subscribe)=>(\r\n                            <Col key={subscribe.id}>\r\n                            <CardImg\r\n                                top\r\n                                height=\"300px\"\r\n                                src={subscribe.picture}\r\n                                alt=\"subscribtion\"\r\n                            /> \r\n                        <CardBody>\r\n                            <CardText>\r\n                                <ul>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Description: <br/>{subscribe.description}\r\n                                        </h5>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h5>\r\n                                        Cost: {subscribe.cost}\r\n                                        </h5>\r\n                                    </li>\r\n                                </ul> \r\n                            </CardText>\r\n                            <FormGroup>\r\n                            <Label for=\"cardId\">Select Card</Label>\r\n                            </FormGroup>\r\n                            <Row>\r\n                            <Col md=\"8\">\r\n                            {/* {card.map((cards)=>(\r\n                                <Select\r\n\r\n                                value={cards.cardBank}/>\r\n                            ))} */}\r\n                            <Row>\r\n                            <FormGroup>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"cardId\"\r\n                                id=\"cardId\"\r\n                                onChange={(e) =>{\r\n                                    setCardId(e.target.value)\r\n                                    console.log(e.target.value)\r\n                                } }\r\n                            >\r\n                                <option >Select Card</option>\r\n                            {card.length !== 0\r\n                                ? card.map((cards) => <option value={cards.id}>{cards.cardBank}</option>)\r\n                                : (\"\")}\r\n                            </Input>\r\n                            </FormGroup>\r\n                            </Row>\r\n                            </Col>\r\n                            <Col>\r\n                            <Button\r\n                                onClick={subscribtion}\r\n                                className=\"btn btn-primary\"\r\n                                id=\"button\"\r\n                            >\r\n                                Subscribe\r\n                            </Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                                </Col>\r\n                            ))}   \r\n                    </ModalBody>\r\n                </Modal>\r\n                </Row> \r\n                <Row>\r\n                <AddExpenses/>\r\n                </Row> \r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Logout.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",["126","127","128","129","130","131"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowCard.js",["132","133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":18,"column":8,"nodeType":"143","messageId":"144","endLine":18,"endColumn":15},{"ruleId":"141","severity":1,"message":"145","line":19,"column":8,"nodeType":"143","messageId":"144","endLine":19,"endColumn":12},{"ruleId":"141","severity":1,"message":"146","line":20,"column":8,"nodeType":"143","messageId":"144","endLine":20,"endColumn":14},{"ruleId":"141","severity":1,"message":"147","line":21,"column":8,"nodeType":"143","messageId":"144","endLine":21,"endColumn":16},{"ruleId":"141","severity":1,"message":"148","line":22,"column":8,"nodeType":"143","messageId":"144","endLine":22,"endColumn":15},{"ruleId":"141","severity":1,"message":"149","line":23,"column":8,"nodeType":"143","messageId":"144","endLine":23,"endColumn":12},{"ruleId":"141","severity":1,"message":"150","line":24,"column":10,"nodeType":"143","messageId":"144","endLine":24,"endColumn":14},{"ruleId":"141","severity":1,"message":"151","line":27,"column":9,"nodeType":"143","messageId":"144","endLine":27,"endColumn":19},{"ruleId":"141","severity":1,"message":"152","line":47,"column":12,"nodeType":"143","messageId":"144","endLine":47,"endColumn":21},{"ruleId":"141","severity":1,"message":"153","line":49,"column":11,"nodeType":"143","messageId":"144","endLine":49,"endColumn":19},{"ruleId":"141","severity":1,"message":"154","line":54,"column":12,"nodeType":"143","messageId":"144","endLine":54,"endColumn":21},{"ruleId":"141","severity":1,"message":"155","line":54,"column":23,"nodeType":"143","messageId":"144","endLine":54,"endColumn":35},{"ruleId":"141","severity":1,"message":"156","line":55,"column":12,"nodeType":"143","messageId":"144","endLine":55,"endColumn":21},{"ruleId":"141","severity":1,"message":"157","line":55,"column":23,"nodeType":"143","messageId":"144","endLine":55,"endColumn":35},{"ruleId":"141","severity":1,"message":"158","line":56,"column":19,"nodeType":"143","messageId":"144","endLine":56,"endColumn":27},{"ruleId":"141","severity":1,"message":"159","line":57,"column":20,"nodeType":"143","messageId":"144","endLine":57,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":90,"column":8,"nodeType":"162","endLine":90,"endColumn":10,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"164","line":151,"column":11,"nodeType":"143","messageId":"144","endLine":151,"endColumn":23},{"ruleId":"141","severity":1,"message":"165","line":173,"column":11,"nodeType":"143","messageId":"144","endLine":173,"endColumn":26},{"ruleId":"141","severity":1,"message":"166","line":15,"column":30,"nodeType":"143","messageId":"144","endLine":15,"endColumn":35},{"ruleId":"160","severity":1,"message":"167","line":39,"column":6,"nodeType":"162","endLine":39,"endColumn":8,"suggestions":"168"},{"ruleId":"141","severity":1,"message":"169","line":8,"column":5,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":23,"column":10,"nodeType":"143","messageId":"144","endLine":23,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":173,"column":41,"nodeType":"172","endLine":177,"endColumn":42},{"ruleId":"170","severity":1,"message":"171","line":195,"column":41,"nodeType":"172","endLine":199,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":211,"column":41,"nodeType":"172","endLine":211,"endColumn":45},{"ruleId":"170","severity":1,"message":"171","line":216,"column":41,"nodeType":"172","endLine":220,"endColumn":42},{"ruleId":"170","severity":1,"message":"171","line":239,"column":41,"nodeType":"172","endLine":243,"endColumn":42},{"ruleId":"141","severity":1,"message":"175","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":20,"column":9,"nodeType":"172","endLine":20,"endColumn":70},{"ruleId":"141","severity":1,"message":"175","line":3,"column":3,"nodeType":"143","messageId":"144","endLine":3,"endColumn":9},{"ruleId":"141","severity":1,"message":"176","line":6,"column":3,"nodeType":"143","messageId":"144","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"177","line":8,"column":3,"nodeType":"143","messageId":"144","endLine":8,"endColumn":14},{"ruleId":"141","severity":1,"message":"178","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":16},{"ruleId":"141","severity":1,"message":"179","line":10,"column":18,"nodeType":"143","messageId":"144","endLine":10,"endColumn":23},{"ruleId":"141","severity":1,"message":"180","line":15,"column":11,"nodeType":"143","messageId":"144","endLine":15,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":23,"column":8,"nodeType":"172","endLine":23,"endColumn":27},{"ruleId":"141","severity":1,"message":"181","line":23,"column":9,"nodeType":"143","messageId":"144","endLine":23,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":21,"column":8,"nodeType":"143","messageId":"144","endLine":21,"endColumn":15},{"ruleId":"141","severity":1,"message":"145","line":22,"column":8,"nodeType":"143","messageId":"144","endLine":22,"endColumn":12},{"ruleId":"141","severity":1,"message":"146","line":23,"column":8,"nodeType":"143","messageId":"144","endLine":23,"endColumn":14},{"ruleId":"141","severity":1,"message":"147","line":24,"column":8,"nodeType":"143","messageId":"144","endLine":24,"endColumn":16},{"ruleId":"141","severity":1,"message":"148","line":25,"column":8,"nodeType":"143","messageId":"144","endLine":25,"endColumn":15},{"ruleId":"141","severity":1,"message":"149","line":26,"column":8,"nodeType":"143","messageId":"144","endLine":26,"endColumn":12},{"ruleId":"141","severity":1,"message":"150","line":27,"column":10,"nodeType":"143","messageId":"144","endLine":27,"endColumn":14},{"ruleId":"141","severity":1,"message":"182","line":27,"column":16,"nodeType":"143","messageId":"144","endLine":27,"endColumn":25},{"ruleId":"141","severity":1,"message":"151","line":30,"column":9,"nodeType":"143","messageId":"144","endLine":30,"endColumn":19},{"ruleId":"141","severity":1,"message":"183","line":86,"column":12,"nodeType":"143","messageId":"144","endLine":86,"endColumn":21},{"ruleId":"141","severity":1,"message":"184","line":86,"column":23,"nodeType":"143","messageId":"144","endLine":86,"endColumn":35},{"ruleId":"141","severity":1,"message":"158","line":92,"column":19,"nodeType":"143","messageId":"144","endLine":92,"endColumn":27},{"ruleId":"141","severity":1,"message":"159","line":93,"column":20,"nodeType":"143","messageId":"144","endLine":93,"endColumn":29},{"ruleId":"141","severity":1,"message":"154","line":96,"column":12,"nodeType":"143","messageId":"144","endLine":96,"endColumn":21},{"ruleId":"141","severity":1,"message":"155","line":96,"column":23,"nodeType":"143","messageId":"144","endLine":96,"endColumn":35},{"ruleId":"141","severity":1,"message":"156","line":97,"column":12,"nodeType":"143","messageId":"144","endLine":97,"endColumn":21},{"ruleId":"141","severity":1,"message":"157","line":97,"column":23,"nodeType":"143","messageId":"144","endLine":97,"endColumn":35},{"ruleId":"160","severity":1,"message":"185","line":114,"column":10,"nodeType":"162","endLine":114,"endColumn":12,"suggestions":"186"},{"ruleId":"141","severity":1,"message":"187","line":2,"column":65,"nodeType":"143","messageId":"144","endLine":2,"endColumn":69},{"ruleId":"141","severity":1,"message":"169","line":2,"column":71,"nodeType":"143","messageId":"144","endLine":2,"endColumn":79},{"ruleId":"141","severity":1,"message":"175","line":2,"column":81,"nodeType":"143","messageId":"144","endLine":2,"endColumn":87},{"ruleId":"141","severity":1,"message":"188","line":2,"column":89,"nodeType":"143","messageId":"144","endLine":2,"endColumn":98},{"ruleId":"141","severity":1,"message":"189","line":2,"column":100,"nodeType":"143","messageId":"144","endLine":2,"endColumn":108},{"ruleId":"141","severity":1,"message":"190","line":2,"column":115,"nodeType":"143","messageId":"144","endLine":2,"endColumn":118},{"ruleId":"141","severity":1,"message":"191","line":2,"column":31,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"141","severity":1,"message":"175","line":2,"column":67,"nodeType":"143","messageId":"144","endLine":2,"endColumn":73},{"ruleId":"160","severity":1,"message":"167","line":28,"column":8,"nodeType":"162","endLine":28,"endColumn":10,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],"no-unused-vars","'youtube' is defined but never used.","Identifier","unusedVar","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'handleRemove' is assigned a value but never used.","'deleteSubscribe' is assigned a value but never used.","'Smile' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["196"],"'CardBody' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Button' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'history' is assigned a value but never used.","'useParams' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth' and 'dataWeek'. Either include them or remove the dependency array.",["197"],"'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"206","text":"207"},"Update the dependencies array to be: [token]",{"range":"208","text":"209"},"Update the dependencies array to be: [dataMonth, dataWeek]",{"range":"210","text":"211"},{"range":"212","text":"209"},[2743,2745],"[dataMonth, dataWeek, token]",[931,933],"[token]",[3398,3400],"[dataMonth, dataWeek]",[711,713]]