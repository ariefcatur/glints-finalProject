[{"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js":"1","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js":"2","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js":"3","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js":"4","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js":"5","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js":"6","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js":"7","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js":"8","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js":"9","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js":"10","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js":"11","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js":"12","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js":"13","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js":"14","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js":"15","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js":"16","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js":"17","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js":"18","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js":"19","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js":"20","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js":"21","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js":"22","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditDebt.js":"23","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js":"24","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js":"25","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js":"26","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js":"27"},{"size":546,"mtime":1606980992273,"results":"28","hashOfConfig":"29"},{"size":973,"mtime":1608043004511,"results":"30","hashOfConfig":"29"},{"size":2117,"mtime":1608627919484,"results":"31","hashOfConfig":"29"},{"size":2283,"mtime":1608814552066,"results":"32","hashOfConfig":"29"},{"size":4882,"mtime":1608816265345,"results":"33","hashOfConfig":"29"},{"size":330,"mtime":1608800505957,"results":"34","hashOfConfig":"29"},{"size":2334,"mtime":1608806046076,"results":"35","hashOfConfig":"29"},{"size":14856,"mtime":1608808150984,"results":"36","hashOfConfig":"29"},{"size":13368,"mtime":1608816643928,"results":"37","hashOfConfig":"29"},{"size":12420,"mtime":1608829057748,"results":"38","hashOfConfig":"29"},{"size":3013,"mtime":1608627919484,"results":"39","hashOfConfig":"29"},{"size":337,"mtime":1608292718087,"results":"40","hashOfConfig":"29"},{"size":3740,"mtime":1608368708068,"results":"41","hashOfConfig":"29"},{"size":1255,"mtime":1607076230330,"results":"42","hashOfConfig":"29"},{"size":189,"mtime":1607226668760,"results":"43","hashOfConfig":"29"},{"size":844,"mtime":1608221066046,"results":"44","hashOfConfig":"29"},{"size":1992,"mtime":1607230205571,"results":"45","hashOfConfig":"29"},{"size":2356,"mtime":1608823313239,"results":"46","hashOfConfig":"29"},{"size":8430,"mtime":1608825899445,"results":"47","hashOfConfig":"29"},{"size":3839,"mtime":1608653151765,"results":"48","hashOfConfig":"29"},{"size":4179,"mtime":1608627919484,"results":"49","hashOfConfig":"29"},{"size":3968,"mtime":1608627919480,"results":"50","hashOfConfig":"29"},{"size":5008,"mtime":1608627919484,"results":"51","hashOfConfig":"29"},{"size":6327,"mtime":1608627919476,"results":"52","hashOfConfig":"29"},{"size":5388,"mtime":1608627919480,"results":"53","hashOfConfig":"29"},{"size":6534,"mtime":1608825987984,"results":"54","hashOfConfig":"29"},{"size":12756,"mtime":1608627919484,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1h8k743",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/index.js",[],["126","127"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/App.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Profile.js",["128"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from 'js-cookie';\nimport avatar from \"../pages/img/circle3.png\";\nimport \"./Profile.css\";\nimport { User, Mail } from \"react-feather\";\nimport Edit from \"./EditProfile\";\nimport TabProfile from \"./TabProfile\";\n\nconst Profile = () => {\n  const [users, setUsers] = useState(\"\");\n\n  const token = Cookies.get('token');\n\n  useEffect(() => {\n\n    document.body.style.backgroundColor = \"#E5E5E5\"\n\n    axios\n      .get(\n        ` https://binar8-jul-hendri.nandaworks.com/auth/user/`, {\n            headers: {Authorization : `Bearer ${token}`}\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        setUsers(res.data);\n      })\n      .catch((error) => {\n      console.log(error);\n      })\n  }, []);\n\n  return (\n    <Container className=\"profile\">\n      <Row>\n        <Col xl=\"4\" sm=\"12\">\n        <Card id=\"cardphoto\">\n        <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\n        </Card>\n          <Card id=\"profilecard\">\n            {users.length !== 0 ? (\n              users.map((user)=> (\n                <CardBody key={user.id} className=\"cardBody\">\n               \n                <Row className=\"rowright\">\n                  <Container>\n                    <Edit />\n                  </Container>\n                </Row>\n                <CardTitle>\n                  <Container>\n                    <p>\n                      <User size={22} /> <b>{user.fullName}</b>\n                    </p>\n                  </Container>\n                  <Container>\n                    <p>\n                      <Mail size={22} /> <strong>{user.email}</strong>\n                    </p>\n                  </Container>\n                </CardTitle>\n              </CardBody>\n              ))\n            ) : (\n              \"\"\n            )}\n          </Card>\n        </Col>\n        <Col xl=\"8\" sm=\"12\">\n          <TabProfile />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Footer.js",["129","130","131","132"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { Container, Col, Row, Table } from \"reactstrap\";\nimport { Facebook, Twitter, Instagram, Linkedin } from \"react-feather\";\nimport gplay from \"../pages/img/googleplay.png\";\nimport appstore from \"../pages/img/appstore1.png\";\nimport crest from \"../assets/logo-subsit.png\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container >\n        <Container fluid style={{paddingTop:\"30px\"}}>\n          {/* <Row md=\"6\" sm=\"12\" style={{ padding: \"1%\", marginTop: \"1%\" }}>\n            <img src={crest} alt=\"\" style={{ width: \"10%\" }} />\n          </Row> */}\n          <Row>\n              <Container className=\"icons\" style={{ textAlign: \"center\" }}>\n                <Facebook\n                  size={45}\n                  style={{\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n                <Twitter\n                  size={45}\n                  style={{\n                    marginRight: \"2%\",\n                    marginLeft: \"2%\",\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n                <Instagram\n                  size={45}\n                  style={{\n                    color: \"#222222\",\n                    fill: \"#ba8ff2\",\n                    borderRadius: \"100%\",\n                    backgroundColor: \"#222222\",\n                  }}\n                />\n              </Container>\n          </Row>\n          <Row>\n              <Container style={{ textAlign: \"center\" }}>\n              <Container>\n                  <p><b>Terms of use | Privacy Policy</b></p>\n              </Container>\n              <img className=\"store\" src={gplay} alt=\"\"/>\n              <img className=\"store\" src={appstore} alt=\"\"/>\n              </Container>\n          </Row>\n          <b>\n            <p className=\"footerTable\">\n              Copyright &copy; 2020 SubsItId.herokuapp.com\n            </p>\n          </b>\n        </Container>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Calendar.js",["133","134","135","136","137"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Card, Row, Col } from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Loading from \"./Loading\";\nimport sleep from \"../assets/sleep.png\";\n\nconst CalendarEvent = () => {\n  const [upComing, setUpComing] = useState([]);\n  const [month, setMonth] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [checkSubs, setCheckSubs] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setLoading(true);\n    axios\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res.data.map((e) => e.dueDate));\n        setUpComing(\n          ...upComing,\n          res.data.map((e) => ({\n            title: e.service.name,\n            date: e.dueDate.substr(0, 10),\n          }))\n        );\n        setLoading(false);\n      });\n\n    axios\n      .get(\"https://binar8-jul-hendri.nandaworks.com/subscription\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCheckSubs(res.data);\n      });\n  }, []);\n\n  let checkComingMonth = upComing.filter((e) => e.date.substr(5, 2) == month);\n  // console.log(\"cek coming month\" , checkComingMonth)\n  checkComingMonth.sort((a, b) => {\n    if (a.date < b.date) return -1;\n    return a.date > b.date ? 1 : 0;\n  });\n\n  return (\n    <Container>\n      {checkSubs.length !== 0 ? (\n        // <Container className=\"mb-5 mt-5\">\n        // {/* {loading && <Loading/>} */}\n        // </Container>\n        // {!loading && (\n        <Container>\n          <Row>\n            <Col sm=\"8\">\n              <Card style={{ padding: \"20px\" }}>\n                <FullCalendar\n                  plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                  datesSet={(arg) => {\n                    console.log(arg);\n                    console.log(arg.view.currentStart.toISOString()); //starting visible date\n                    console.log(arg.view.currentEnd.toISOString()); //ending visible date\n                    setMonth(arg.view.currentEnd.toISOString().substr(5, 2));\n                  }}\n                  initialView=\"dayGridMonth\"\n                  // height =\"100%\"\n                  events={upComing}\n                  // events={[\n                  // { title: \"event 1\", date: \"2020-12-06\" },\n                  // { title: \"event 2\", date: \"2020-12-12\" },\n                  //  ]}\n                />\n              </Card>\n            </Col>\n            <Col sm=\"4\">\n              <Card\n                style={{\n                  padding: \"20px\",\n                  minHeight: \"605px\",\n                  marginBottom: \"50px\",\n                }}\n              >\n                <h4\n                  style={{\n                    color: \"#222222\",\n                  }}\n                  className=\"text-center\"\n                >\n                  <strong>Events</strong>\n                </h4>\n                <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n                {checkComingMonth === undefined ||\n                checkComingMonth.length == 0 ? (\n                  <h5 className=\"text-center my-5\">\n                    <strong>\n                      <i>No event found in this month.</i>\n                    </strong>\n                  </h5>\n                ) : (\n                  checkComingMonth.map((x) => (\n                    <p className=\"text-left\" style={{ marginBottom: \"20px\" }}>\n                      <b>{x.title}</b> service will be due on the{\" \"}\n                      <b>{x.date.substr(8, 2)}</b>th of this month.\n                    </p>\n                  ))\n                )}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <Container className=\"text-align-center\">\n          <Container style={{ minHeight: \"300px\", opacity:\"60%\", paddingTop:\"30px\" }}>\n            <p>\n              <b>\n                <i>\n                  You haven't subscribed anything, have you?\n                </i>\n              </b>\n            </p>\n            <Col className=\"subs6\">\n              <img\n                src={sleep}\n                alt=\"\"\n                style={{\n                  width: \"50%\",\n                  opacity: \"0%\",\n                  position: \"center\",\n                }}\n              />\n            </Col>\n          </Container>\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default CalendarEvent;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Logout.js",["138"],"import Cookies from \"js-cookie\";\nimport { useHistory } from 'react-router-dom';\n\nconst Logout = () => {\n    let history = useHistory();\n    Cookies.remove('token');\n    Cookies.remove('username');\n    Cookies.remove('status');\n    history.push('/');\n    return window.location.reload();\n    return null;\n\n}\n\nexport default Logout;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/TopMenu.js",["139","140","141","142","143","144","145","146","147"],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Row,\n  Button\n} from \"reactstrap\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport subsit from \"./img/SubsIt..svg\";\nimport \"./TopMenu.css\";\nimport Modals from \"./Modalender\";\nimport { Link} from \"react-router-dom\";\nimport app from \"./img/app.svg\";\nimport chart from \"./img/Group 11.svg\";\nimport { checkLogin } from \"../Helper\";\nimport ProfMenu from \"./ProfMenu\";\nimport { Calendar, PieChart } from 'react-feather';\nimport CalendarEvent from \"../components/Calendar\";\n\nimport Bells from \"./Bells\";\n\nconst TopMenu = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\n      <Navbar expand=\"sm\" style={{backgroundColor:\"#fefefe\", height:\"100px\"}}>\n      <NavbarBrand className=\"lognav\">\n            <Link to=\"/dashboard\">\n              <img src={subsit} ></img>\n            </Link>\n            </NavbarBrand>\n        \n        <Nav className=\"ml-auto\" navbar>\n          <Collapse isOpen={isOpen} navbar></Collapse>\n          {!checkLogin() && (\n            <div className=\"body\">\n              <ul id=\"Menu\">\n                <li>\n                <Button id=\"transparant\" >About</Button>\n                </li>\n                <li>\n                <Button id=\"transparant\"> Product</Button>\n                </li>\n                <li>\n                <Signup />\n                </li>\n              </ul>\n            </div>\n          )}\n          {checkLogin() && (\n            \n            <div>\n              <ul id=\"Menu\" className=\"liquid1\">\n                <li>\n                  <Link to=\"/history\">\n                    <PieChart style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/Calendar\">\n                    <Calendar style={{color:\"#8f48ea\"}}/>\n                  </Link>\n                </li>\n                <li>\n                  <Bells />\n                </li>\n                <li>\n                  <ProfMenu/>\n                </li>\n              </ul>\n            </div>\n          )}\n        </Nav>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default TopMenu;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/History.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button,\n  Modal,\n  ModalHeader,\n  Collapse,\n  ModalBody,\n} from \"reactstrap\";\nimport { Element } from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\nimport { Line } from \"@reactchartjs/react-chart.js\";\nimport axios from \"axios\";\nimport { checkLogin } from \"../Helper\";\nimport Cookies from \"js-cookie\";\nimport empty from \"../assets/empty.png\";\nimport glass from \"../assets/glass.png\";\nimport expense from \"../assets/expense.png\";\nimport \"../components/Profile.css\";\nimport Moment from \"react-moment\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst History = () => {\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = Cookies.get(\"token\");\n  const fullName = Cookies.get(\"fullName\");\n  const [expense, setExpense] = useState([]);\n  const [subscribeId, setSubscribeId] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [chartWeek, setChartWeek] = useState({});\n  const [weekMonth, setWeekMonth] = useState([]);\n  const [totalWeek, setTotalWeek] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [totals, setTotals] = useState([]);\n  const [totalHistory, setTotalHistory] = useState([]);\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\n  const urlWeek = \"https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\n\n  // console.log(token)\n\n  const urlHistory = \"https://binar8-jul-hendri.nandaworks.com/subscription\";\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\n  const urlTotalHistory = \"https://binar8-jul-hendri.nandaworks.com/history\";\n\n  const toggle = () => setModal(!modal);\n  const collapse = () => {\n    setIsOpen(true);\n    setIsOpenWeek(false);\n  };\n  const collapseWeek = () => {\n    setIsOpenWeek(true);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setIsLoading(true);\n    axios\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        // console.log(res.data);\n        setHistory(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        // console.log(res.data)\n        setExpense(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n    dataMonth();\n    dataWeek();\n\n    axios\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(\"totalhistory\" ,res.data);\n        setTotalHistory(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const dataMonth = () => {\n    let month = [];\n    let pay = [];\n    axios\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        //  console.log(res);\n        for (const dataObj of res.data) {\n          month.push(dataObj.dates);\n          pay.push(dataObj.totals);\n        }\n        setChartData({\n          labels: month,\n          datasets: [\n            {\n              label: \"# Month\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // console.log(dates, totals)\n  };\n\n  const dataWeek = () => {\n    let week = [];\n    let pay = [];\n    axios\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res);\n        for (const dataObj of res.data) {\n          week.push(dataObj.weekMonth);\n          pay.push(dataObj.totals);\n        }\n        setChartWeek({\n          labels: week,\n          datasets: [\n            {\n              label: \"# Week\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(dates, totals);\n  };\n\n  const handleRemove = (id) => {\n    const url = ` https://binar8-jul-hendri.nandaworks.com/subscription/${id}/`;\n    axios\n      .delete(url, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // const expenses = () =>{\n  //     setIsLoading(true);\n  //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\n  //     .then((res)=>{\n  //         console.log(res.data)\n  //         setExpense(res.data);\n  //         setIsLoading(false);\n  //     })\n  //     .catch((err)=> console.log(err));\n  // }\n\n  // const subscribeDetails = (id) => {\n  //     setIsLoading(true);\n  //     const url =`http://3.0.91.163/service?id=${id}`\n  //     axios.get(url).then((res)=>{\n  //         console.log(res.data.subscribeId)\n  //         setSubscribeId(res.data);\n  //         setModal(!modal)\n  //         setIsLoading(false);\n  //     })\n  //     .catch((err)=> console.log(err));\n  // }\n  return (\n    <Container fluid className=\"content\">\n      <Container>\n        <Row>\n          <Col xs=\"8\">\n            <Container>\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n                <Col xs=\"12\" className=\"bg-default\">\n                  <Row>\n                    <Col xs=\"6\">\n                      <h4>Spending Value</h4>\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n                    </Col>\n                    <Col xs=\"6\">\n                      <div style={{ float: \"right\", position: \"relative\" }}>\n                        <Button\n                          id=\"button\"\n                          onClick={collapse}\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\n                        >\n                          Month\n                        </Button>\n                        <Button\n                          id=\"button\"\n                          onClick={collapseWeek}\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\n                        >\n                          Week\n                        </Button>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs=\"12\">\n                  <Collapse isOpen={isOpen}>\n                    <Line data={chartData} options={options} />\n                  </Collapse>\n                  <Collapse isOpen={isOpenWeek}>\n                    <Line data={chartWeek} options={options} />\n                  </Collapse>\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row className=\"ml-0 mt-3 mb-2\">\n                <h3>Your Subscriptions</h3>\n              </Row>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n            </Container>\n            <Container>\n              <Row>\n                {history.length !== 0 ? (\n                  history.map((history) => (\n                    <Col xs=\"4\" key={history.id}>\n                      <Card className=\"mb-4\">\n                        <CardImg\n                          top\n                          width=\"100%\"\n                          height=\"150px\"\n                          src={history.service.picture}\n                          alt=\"subscribtion\"\n                        />\n                        <CardBody className=\"bg-dangers\">\n                          <CardTitle\n                            tag=\"h6\"\n                            className=\"text-dark font-weight-bold text-center\"\n                          >\n                            <p><b>{history.service.name}</b></p>\n                          </CardTitle>\n                            <Button\n                              onClick={() => {\n                                if (\n                                  window.confirm(\n                                    `Your \"${history.service.name}\" service is about to be terminated. Please click OK to confirm.`\n                                  )\n                                )\n                                  handleRemove(history.serviceId);\n                              }}\n                              className=\"btn btn-primary btn-block\"\n                              id=\"button\"\n                            >\n                              <b>Unsubscribe</b>\n                            </Button>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  ))\n                ) : (\n                  <Container>\n                    <p style={{ opacity: \"60%\" }}>\n                      <i>\n                        <strong>You don't have any subscription.</strong>\n                      </i>\n                    </p>\n                    <Col className=\"subs\">\n                      <img\n                        src={glass}\n                        alt=\"\"\n                        style={{\n                          width: \"50%\",\n                          opacity: \"0%\",\n                          position: \"center\",\n                        }}\n                      />\n                    </Col>\n                  </Container>\n                )}\n              </Row>\n            </Container>\n          </Col>\n\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"7px\" }}>\n            <h4>History</h4>\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n            <Card\n              style={{\n                marginTop: \"20px\",\n                color: \"white\",\n                backgroundColor: \"#8F48EA\",\n                marginBottom: \"25px\",\n              }}\n            >\n              <Row style={{ marginBottom: \"20px\" }}>\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\n                  <CardTitle className=\"text-white\">\n                    <strong>Total :</strong>\n                  </CardTitle>\n                </Col>\n                <Col xs=\"6\" style={{ paddingTop: \"30px\" }}>\n                  <h6 style={{ float: \"right\" }}>\n                    <strong>IDR {totalHistory.total}</strong>{\" \"}\n                  </h6>\n                </Col>\n              </Row>\n            </Card>\n            <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"1000px\",\n                overflow: \"scroll\",\n              }}\n            >\n              <h4>Subscriptions</h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n              {history.length !== 0 ? (\n                history.map((subscribtion, i) => (\n                  <Card\n                    key={i}\n                    style={{\n                      padding: \"5px\",\n                      marginTop: \"20px\",\n                      backgroundColor: \"#f6f9fc\",\n                      marginBottom: \"20px\",\n                    }}\n                  >\n                    <Row>\n                      <Col xs=\"8\">\n                        <CardTitle className=\"text-dark font-weight\">\n                          <h6 style={{ paddingTop: \"15px\" }}>\n                            {subscribtion.repeat} : {subscribtion.service.name}{\" \"}\n                          </h6>\n                          <Moment format=\"D MMM YYYY\" >{subscribtion.startDate}</Moment>\n                        </CardTitle>\n                      </Col>\n                      <Col xs=\"4\">\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\n                          IDR {subscribtion.service.cost}{\" \"}\n                        </h6>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))\n              ) : (\n                <Container style={{ marginBottom: \"20px\" }}>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No subscription found.</strong>\n                    </i>\n                  </p>\n                  <Col className=\"subs2\">\n                    <img\n                      src={empty}\n                      alt=\"\"\n                      style={{\n                        width: \"50%\",\n                        opacity: \"0%\",\n                        position: \"center\",\n                      }}\n                    />\n                  </Col>\n                </Container>\n              )}\n              <h4>Expenses</h4>\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n              {expense.length !== 0 ? (\n                expense.map((expenses, i) => (\n                  <Card\n                    key={i}\n                    style={{\n                      marginTop: \"20px\",\n                      padding: \"5px\",\n                      backgroundColor: \"#f6f9fc\",\n                    }}\n                  >\n                    <Row>\n                      <Col xs=\"6\" style={{ paddingTop: \"15px\" }}>\n                        <CardTitle tag=\"h6\" className=\"text-dark font-weight\">\n                          <h6>{expenses.title} </h6>\n                          <Moment format=\"D MMM YYYY\" >{expenses.purchaseDate}</Moment>\n                        </CardTitle>\n                      </Col>\n                      <Col xs=\"6\">\n                        <h6 style={{ float: \"right\", paddingTop: \"15px\" }}>\n                          IDR {expenses.total}{\" \"}\n                        </h6>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))\n              ) : (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No expense found.</strong>\n                    </i>\n                  </p>\n                  <Col className=\"subs3\">\n                    <img\n                      src={empty}\n                      alt=\"\"\n                      style={{\n                        width: \"50%\",\n                        opacity: \"0%\",\n                        position: \"center\",\n                      }}\n                    />\n                  </Col>\n                </Container>\n              )}\n            </Element>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default History;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Dashboard.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  CardImg,\n  Card,\n  Col,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Collapse,\n  Spinner,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport youtube from \"./img/youtube.jpg\";\nimport hulu from \"./img/hulu-logo.jpg\";\nimport disney from \"./img/disney.jpeg\";\nimport sportify from \"./img/spotify.jpg\";\nimport netflix from \"./img/netflix.jpeg\";\nimport logo from \"./img/Rectangle.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { checkLogin } from \"../Helper\";\nimport Cookies from \"js-cookie\";\nimport '../components/Profile.css'\nimport sleep from '../assets/sleep.png'\n\n// const dataMonth= {\n//     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November'],\n//     datasets:[\n//         {\n//             label: '# Month',\n//             data: [12, 19, 3, 5, 2, 3],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\n// const options = {\n//     scales: {\n//         yAxes: [\n//           {\n//             ticks: {\n//               beginAtZero: true,\n//             },\n//           },\n//         ],\n//       },\n// }\n\n// const dataWeek= {\n//     labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n//     datasets:[\n//         {\n//             label: '# Week',\n//             data: [12, 19, 3, 5],\n//             fill: false,\n//             backgroundColor: 'rgb(255, 99, 132)',\n//             borderColor: 'rgba(255, 99, 132, 0.2)',\n//         },\n//     ],\n// }\n\nconst Dashboard = () => {\n  const urlSubscribe = \" https://binar8-jul-hendri.nandaworks.com/service\";\n  const [subscribes, setSubscribes] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [subscribeId, setSubscribeId] = useState([]);\n  const token = Cookies.get(\"token\");\n  const [startDate, setStartDate] = useState(0);\n  const [serviceId, setServiceId] = useState([]);\n  const [card, setCard] = useState([]);\n  const [cardId, setCardId] = useState(null);\n  const [checkCard, setCheckCard] = useState(\"\");\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n  const [chartData, setChartData] = useState({});\n  const [dates, setDates] = useState([]);\n  const [totals, setTotals] = useState([]);\n  const urlMonth = \"https://binar8-jul-hendri.nandaworks.com/chart/monthly\";\n  const [chartWeek, setChartWeek] = useState({});\n  const [weekMonth, setWeekMonth] = useState([]);\n  const [totalWeek, setTotalWeek] = useState([]);\n  const urlWeek = \" https://binar8-jul-hendri.nandaworks.com/chart/weekly\";\n\n  const history = useHistory();\n\n  const toggle = () => setModal(!modal);\n  const collapse = () => {\n    setIsOpen(true);\n    setIsOpenWeek(false);\n  };\n  const collapseWeek = () => {\n    setIsOpenWeek(true);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#E5E5E5\";\n\n    setLoading(true);\n    axios\n      .get(urlSubscribe)\n      .then((res) => {\n        console.log(res.data);\n        setSubscribes(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCheckCard(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    dataMonth();\n    dataWeek();\n  }, []);\n\n  const subscribeDetails = (id) => {\n    setLoading(true);\n    const url = ` http://52.148.70.171/service?id=${id}`;\n    axios\n      .get(url)\n      .then((res) => {\n        console.log(\"subscribe id\", res.data);\n        setSubscribeId(res.data);\n        setModal(!modal);\n        setLoading(false);\n        subscribeCard();\n        setServiceId(id);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const subscribeCard = () => {\n    setLoading(true);\n    axios\n      .get(urlCard, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        setCard(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const subscribtion = (e) => {\n    e.preventDefault();\n    const url = ` http://52.148.70.171/subscription/${serviceId}/?cardId=${cardId}`;\n    // console.log(\"service Id \", serviceId, \"cardId \", cardId)\n    // console.log(token)\n    axios\n      .post(url, null, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        console.log(res.data);\n        history.push(\"/history\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (loading) {\n    return (\n      <div>\n        <Row className=\"justify-content-center mt-5\">\n          <Spinner\n            type=\"grow\"\n            style={{ width: \"4rem\", height: \"4rem\", color: \"#8F48EA\" }}\n          />\n        </Row>\n        <Row className=\"justify-content-center mt-3 font-weight-bold\">\n          Please wait...\n        </Row>\n      </div>\n    );\n  }\n\n  const dataMonth = () => {\n    let month = [];\n    let pay = [];\n    axios\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          month.push(dataObj.dates);\n          pay.push(dataObj.totals);\n        }\n        setChartData({\n          labels: month,\n          datasets: [\n            {\n              label: \"# Month\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132, 0.2)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n              pointBackgroundColor: \"rgb(255, 99, 132)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // console.log(dates, totals)\n  };\n\n  const dataWeek = () => {\n    let week = [];\n    let pay = [];\n    axios\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        for (const dataObj of res.data) {\n          week.push(dataObj.weekMonth);\n          pay.push(dataObj.totals);\n        }\n        setChartWeek({\n          labels: week,\n          datasets: [\n            {\n              label: \"# Week\",\n              data: pay,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(dates, totals);\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <Container fluid className=\"content\">\n      <Container>\n        <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\n          <Col xs=\"12\" className=\"bg-default\">\n            <Row>\n              <Col xs=\"6\">\n                <h4>Spending Value</h4>\n              </Col>\n              <Col xs=\"6\">\n                <div style={{ float: \"right\", position: \"relative\" }}>\n                  <Button\n                    id=\"button\"\n                    onClick={collapse}\n                    style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\n                  >\n                    Month\n                  </Button>\n                  <Button\n                    id=\"button\"\n                    onClick={collapseWeek}\n                    style={{ marginBottom: \"1rem\", marginRight: \"30px\" }}\n                  >\n                    Week\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs=\"12\" className=\"bg-default\">\n            <Collapse isOpen={isOpen}>\n              <Line data={chartData} options={options} />\n            </Collapse>\n            <Collapse isOpen={isOpenWeek}>\n              <Line data={chartWeek} options={options} />\n            </Collapse>\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <Row className=\"ml-0 mt-3 mb-0\">\n          <h3>Popular Apps</h3>\n        </Row>\n        <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\n      </Container>\n      <Container>\n        <Row>\n          {checkCard.length !== 0 ? (\n            subscribes.map((subscribes) => (\n              <Col xs=\"3\" key={subscribes.id}>\n                <Card style={{ marginBottom: \"50px\" }}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    height=\"170px\"\n                    src={subscribes.picture}\n                    alt=\"subscribtion\"\n                    style={{ border: \"0.5px solid grey\" }}\n                  />\n                  <CardBody className=\"bg-dangers\">\n                    <CardTitle\n                      tag=\"h6\"\n                      className=\"text-dark font-weight-bold text-center\"\n                    >\n                      <p>\n                        <b>{subscribes.name}</b>\n                      </p>\n                    </CardTitle>\n                    <Button\n                      onClick={() => subscribeDetails(subscribes.id)}\n                      className=\"btn btn-primary btn-block\"\n                      id=\"button\"\n                    >\n                      <b>Susbcribe</b>\n                    </Button>\n                  </CardBody>\n                </Card>\n              </Col>\n            ))\n          ) : (\n            <Container className=\"text-align-center\">\n              <Container\n                style={{\n                  opacity: \"60%\",\n                  paddingTop: \"30px\",\n                }}\n              >\n                <p>\n                  <b>\n                    <i>\n                      Oops! It seems like you haven't added any card yet. Please\n                      submit your card information in your profile page before\n                      using this feature.\n                    </i>\n                  </b>\n                </p>\n                <Col className=\"subs6\">\n                  <img\n                    src={sleep}\n                    alt=\"\"\n                    style={{\n                      width: \"50%\",\n                      opacity: \"0%\",\n                      position: \"center\",\n                    }}\n                  />\n                </Col>\n              </Container>\n            </Container>\n          )}\n        </Row>\n        <Row>\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}></ModalHeader>\n            <ModalBody>\n              {subscribeId.map((subscribe) => (\n                <Col key={subscribe.id}>\n                  <CardTitle style={{ textAlign: \"center\" }}>\n                    <h5>\n                      <strong>{subscribe.name}</strong>\n                    </h5>\n                  </CardTitle>\n                  <CardImg\n                    top\n                    width=\"15%\"\n                    src={subscribe.picture}\n                    style={{ border: \"0.5px solid grey\" }}\n                    alt=\"subscribtion\"\n                  />\n                  <CardBody>\n                    <CardText style={{ textAlign: \"justify\" }}>\n                      <p>{subscribe.description}</p>\n                    </CardText>\n                    <CardText>\n                      <p>\n                        Cost: <strong>IDR {subscribe.cost}</strong>\n                      </p>\n                    </CardText>\n                    <Row>\n                      <Col md=\"8\">\n                        <Row>\n                          <FormGroup>\n                            <Input\n                              type=\"select\"\n                              name=\"cardId\"\n                              id=\"cardId\"\n                              onChange={(e) => {\n                                setCardId(e.target.value);\n                                console.log(e.target.value);\n                              }}\n                            >\n                              <option>Select Card</option>\n                              {card.length !== 0\n                                ? card.map((cards) => (\n                                    <option value={cards.id}>\n                                      {cards.cardBank}\n                                    </option>\n                                  ))\n                                : \"\"}\n                            </Input>\n                          </FormGroup>\n                        </Row>\n                      </Col>\n                      <Col>\n                        <Button\n                          onClick={subscribtion}\n                          className=\"btn btn-primary\"\n                          id=\"button\"\n                        >\n                          <b>Subscribe</b>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Col>\n              ))}\n            </ModalBody>\n          </Modal>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Home.js",["186","187","188","189","190","191","192"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Loading.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TabProfile.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Modalender.js",["193","194"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Calendar from \"react-calendar\";\nimport Lendar from \"./img/calendar.svg\";\nimport \"./Modalender.css\"\n\nconst Modalender = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\n  return (\n    <div>\n        <img className=\"icon-kalender\" src={Lendar} onClick={toggle}>{buttonLabel}</img>\n           \n      {/* <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button> */}\n      <Modal isOpen={modal} toggle={toggle} className={className} external={externalCloseBtn}>\n        <ModalHeader>CALENDAR</ModalHeader>\n        <ModalBody>\n          <b>Your Schedule</b><br />\n            <Calendar />\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Modalender;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/Helper.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/ProfMenu.js",["195"],"import profile from \"./img/Ellipse 1.svg\";\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst ProfMenu = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle\n        tag=\"span\"\n        data-toggle=\"dropdown\"\n        aria-expanded={dropdownOpen}\n      >\n       <img src={profile}></img>\n      </DropdownToggle>\n      <DropdownMenu right>\n        <Link to=\"/profile\"><DropdownItem>View Profile</DropdownItem></Link>\n        <Link to=\"/logout\"><DropdownItem> Log Out</DropdownItem></Link>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nexport default ProfMenu;","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Login.js",["196","197","198","199","200","201"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Signup from \"./Signup\";\n\n\nconst Login = (props) => {\n  const { className } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <>\n      <div className=\"modal-dialog modal-login\">\n        <div className=\"modal-content\">\n          <div className=\"model-header\">\n            <h4 className=\"modal-title\">LOGIN</h4>\n            <button className=\"close\"></button>\n          </div>\n          <div className=\"modal-body\">\n            <form method=\"post\">\n              <div className=\"form-group\">\n                <i className=\"fa fa-user\"></i>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Username\"\n                  required=\"required\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <i className=\"fa fa-lock\"></i>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  required=\"required\"\n                />\n              </div>\n              <hr />\n              <div className=\"form-group\">\n                <Input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                  value=\"Login\"\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <Link onClick={toggle}>Don't have an account? Register Here</Link>\n          </div>\n          <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-size\">\n            <ModalBody>\n              <Signup />\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Bells.js",["202","203","204","205","206","207"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/pages/Signup.js",["208","209","210","211","212","213","214","215","216"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/TopUp.js",["217"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst TopUp = (props) => {\n  const { className } = props;\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const [results, setResults] = useState(\"\");\n  const [saldo, setSaldo] = useState(null);\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n\n    e.preventDefault()\n\n    const data = {\n      saldo: parseInt(saldo),\n    };\n\n    // axios\n    //   .patch(`https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`, data, {\n    //     headers: { Authorization: `Bearer ${token}` },\n    //   })\n    axios({\n      method: 'PATCH',\n      url: `https://binar8-jul-hendri.nandaworks.com/card?cardNumber=${cardNumber}`,\n      headers: { Authorization: `Bearer ${token}` },\n      data: data,\n    })\n      .then((res) => {\n        console.log(res);\n        console.log(\"ini res.data top up\");\n        console.log(res.data);\n        // return window.location.reload();\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n        <strong>Top-up</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Top-up your balance here.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"cardNumber\">Select Card</Label>\n                <Input\n                  type=\"select\"\n                  name=\"cardNumber\"\n                  id=\"cardNumber\"\n                  onChange={(e) => setCardNumber(e.target.value)}\n                >\n                  <option>Select card</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.cardNumber}>\n                          {result.cardBank} - IDR {result.saldo}\n                        </option>\n                      ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"saldo\">Top-up amount:</Label>\n                <Input\n                  type=\"select\"\n                  name=\"saldo\"\n                  id=\"saldo\"\n                  onClick={(e) => setSaldo(e.target.value)}\n                >\n                  <option>Select amount</option>\n                  <option>50000</option>\n                  <option>100000</option>\n                  <option>250000</option>\n                  <option>500000</option>\n                  <option>1000000</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  type=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TopUp;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowExpense.js",["218"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { X } from \"react-feather\";\nimport expense from \"../assets/expense.png\";\nimport \"./Profile.css\";\nimport {Element} from \"react-scroll\"\nimport Moment from 'react-moment';\n\n\nconst ShowExpenses = () => {\n  const [results, setResults] = useState(\"\");\n\n  const urlExpense = \" https://binar8-jul-hendri.nandaworks.com/expense\";\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlExpense, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`https://binar8-jul-hendri.nandaworks.com/expense/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      });\n  };\n\n  return (\n    <Container>\n      <Row className=\"tables\">\n        <Col xs=\"12\">\n          <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\n          <Element\n              ClassName=\"element\"\n              id=\"scroll-container\"\n              style={{\n                position: \"relative\",\n                height: \"500px\",\n                overflow: \"scroll\",\n                \n              }}\n            >\n            <thead\n              className=\"text-center\"\n              style={{ backgroundColor: \"#BA8FF2\" }}\n            >\n              <tr>\n                <th style={{ width: \"30%\" }}>Date</th>\n                <th>Transaction</th>\n                <th>Currency</th>\n                <th>Costs</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            \n            {results.length !== 0 ? (\n              results.map((result) => (\n                <tbody>\n                  <tr>\n                    <td className=\"text-center\"><Moment format=\"D MMM YYYY\" >{result.purchaseDate}</Moment></td>\n                    <td className=\"text-center\" style={{ width: \"50%\" }}>{result.title}</td>\n                    <td className=\"text-center\">IDR</td>\n                    <td className=\"text-center\">{result.total}</td>\n                    <td style={{ width: \"100%\" }} className=\"text-center\">\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          if (\n                            window.confirm(\n                              `Expense record of \"${result.title}\" is going to be deleted. Please click OK to confirm.`\n                            )\n                          )\n                            handleDelete(result.id);\n                        }}\n                        color=\"danger\"\n                        outline\n                      >\n                        <X size={15} />\n                      </Button>\n                    </td>\n                  </tr>\n                </tbody>\n                \n              ))\n            \n              )  : (\n              <tbody>\n                <tr>\n                  <td colSpan=\"6\">\n                    <Container>\n                      <p style={{ opacity: \"60%\" }}>\n                        <i>\n                          <strong>No expense found.</strong>\n                        </i>\n                      </p>\n                      <Col className=\"subs3\">\n                        <img\n                          src={expense}\n                          alt=\"\"\n                          style={{\n                            width: \"40%\",\n                            opacity: \"0%\",\n                            position: \"center\",\n                          }}\n                        />\n                      </Col>\n                    </Container>\n                  </td>\n                </tr>\n              </tbody>\n            )}\n            </Element>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ShowExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddDebt.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/EditDebt.js",["219"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container,\n} from \"reactstrap\";\n\nconst EditDebt = (props) => {\n  const { className } = props;\n\n  const urlDebt = \"https://binar8-jul-hendri.nandaworks.com/debts/notes\";\n\n  const [results, setResults] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(null);\n  const [dueDate, setDueDate] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    axios\n      .get(urlDebt, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n    const data = {\n      name: name,\n      description: description,\n      amount: amount,\n      type: type,\n      dueDate: dueDate,\n    };\n\n    axios\n      .patch(`https://binar8-jul-hendri.nandaworks.com/debts/update?id=${id}`, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      ><strong>Edit Note</strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Edit your debt record here and then click Confirm to save the changes.</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Container>\n              <FormGroup>\n                <Label for=\"id\">Which note you would like to edit?</Label>\n                <Input\n                  type=\"select\"\n                  name=\"id\"\n                  id=\"id\"\n                  onChange={(e) => setId(e.target.value)}\n                >\n                  <option>Select note</option>\n                  {results.length !== 0\n                    ? results.map((result) => (\n                        <option value={result.id}>\n                          {result.name} - {result.description}\n                        </option>\n                    ))\n                    : \"\"}\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={(e) => setName(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"description\">Description</Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"amount\">Amount</Label>\n                <Input\n                  type=\"number\"\n                  name=\"amount\"\n                  id=\"amount\"\n                  onChange={(e) => setAmount(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"type\">Type</Label>\n                <Input\n                  type=\"select\"\n                  name=\"type\"\n                  id=\"type\"\n                  onChange={(e) => setType(e.target.value)}\n                >\n                  <option>Select Type</option>\n                  <option>Payables</option>\n                  <option>Receivables</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"dueDate\">Due Date</Label>\n                <Input\n                  type=\"date\"\n                  name=\"dueDate\"\n                  id=\"dueDate\"\n                  onChange={(e) => setDueDate(e.target.value)}\n                ></Input>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  size=\"sm\"\n                  typw=\"submit\"\n                  block\n                  outline\n                  style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n                >\n                  <strong>Confirm</strong>\n                </Button>\n              </FormGroup>\n            </Container>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditDebt;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddCard.js",[],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/AddExpenses.js",["220"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport './Profile.css'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AddExpenses = (props) => {\n\n  const urlExpense = \"https://binar8-jul-hendri.nandaworks.com/expense\";\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const urlCategories = \" https://binar8-jul-hendri.nandaworks.com/categories\";\n\n  const token = Cookies.get(\"token\");\n\n  const { className } = props;\n\n  const [cards, setCards] = useState(\"\");\n\n  const [title, setTitle] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [cardId, setCardId] = useState(null);\n  const [categoryId, setCategoryId] = useState(\"\");\n\n  const [categories, setCategories] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setCards(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n      axios\n      .get(urlCategories)\n      .then((res) => {\n        console.log(res.data);\n        setCategories(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: title,\n      total: total,\n      purchaseDate: purchaseDate,\n      cardId: cardId,\n      categoryId: categoryId\n    };\n    \n    axios\n      .post(urlExpense, data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        return window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Button\n        size=\"sm\"\n        className=\"mt-2 mr-2 mb-sm-0\"\n        style={{ color: \"white\", backgroundColor: \"#8F48EA\" }}\n        onClick={toggle}\n      >\n      <strong>New Expense </strong>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>\n          <p>Add New Expenses</p>\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"title\">Title</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"total\">Paid amount</Label>\n                  <Input\n                    type=\"total\"\n                    name=\"total\"\n                    id=\"total\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setTotal(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"categoryId\">Expense Type</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"categoryId\"\n                    id=\"categoryId\"\n                    onChange={(e) => setCategoryId(e.target.value)}\n                  >\n                    <option>Select expense type</option>\n                  {categories.length !== 0\n                    ? categories.map((category) => <option value={category.id}>{category.category}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"purchaseDate\">Purchase Date</Label>\n                  <Input\n                    type=\"date\"\n                    name=\"purchaseDate\"\n                    id=\"purchaseDate\"\n                    placeholder=\"IDR\"\n                    onChange={(e) => setPurchaseDate(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <Label for=\"cardId\">Select Card</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"cardId\"\n                    id=\"cardId\"\n                    onChange={(e) => setCardId(e.target.value)}\n                  >\n                    <option>Select card</option>\n                  {cards.length !== 0\n                    ? cards.map((card) => <option value={card.id}>{card.cardBank} - IDR {card.saldo}</option>)\n                    : (\"\")}\n                  </Input>\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Button\n                block\n                type=\"submit\"\n                onClick={toggle}\n                style={{ backgroundColor: \"#8F48EA\", color: \"white\" }}\n              >\n                <strong>Add New Expense</strong>\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddExpenses;\n","/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/ShowDebt.js",["221","222","223","224","225","226","227","228","229"],"/home/dalvin/Documents/2020/Glints/Code/ga8-final2/src/components/Status.js",["230"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// import Loading from './Loading'\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\nimport visa from \"../assets/visa.png\";\nimport master from \"../assets/mastercard.png\";\nimport \"./Profile.css\";\nimport expense from \"../assets/expense.png\";\n\nfunction CheckStatus() {\n  const [results, setResults] = useState(\"\");\n\n  const urlCard = \" https://binar8-jul-hendri.nandaworks.com/card\";\n\n  const token = Cookies.get(\"token\");\n\n  console.log(results);\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`${urlCard}?cardNumber=${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        return window.location.reload();\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(urlCard, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((res) => {\n        console.log(res.data);\n        setResults(res.data);\n        // setLoading(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Row>\n        {results.length !== 0 ? (\n          results.map((result) => {\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Master\"\n            ) {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (\n              result.saldo >= 500000 &&\n              result.saldo < 1000000 &&\n              result.cardType === \"Visa\"\n            ) {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"green\" }}> Fair</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Master\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom:\"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={master}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else if (result.saldo < 500000 && result.cardType === \"Visa\") {\n              return (\n                <Col md={4} className=\"mb-4\">\n                  <Card\n                    style={{\n                      backgroundColor: \"whitesmoke\",\n                      color: \"#222222\",\n                      marginBottom: \"3\",\n                    }}\n                  >\n                    <CardBody>\n                      <CardTitle>\n                        <strong>{result.cardBank}</strong>\n                        <img\n                          src={visa}\n                          alt=\"\"\n                          style={{ width: \"40px\", float: \"right\" }}\n                        />\n                      </CardTitle>\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\n                      <CardTitle>\n                        <strong>{result.cardNumber}</strong>\n                      </CardTitle>\n                      <CardTitle>\n                        <strong>IDR {result.saldo}</strong>\n                      </CardTitle>\n                      <CardText>\n                        Status :\n                        <strong style={{ color: \"red\" }}> Critical</strong>\n                      </CardText>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => {\n                          handleDelete(result.cardNumber);\n                        }}\n                        block\n                        color=\"danger\"\n                        outline\n                      >\n                        Remove\n                      </Button>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            } else {\n              return (\n                <Container>\n                  <p style={{ opacity: \"60%\" }}>\n                    <i>\n                      <strong>No card found. Please add card first.</strong>\n                    </i>\n                  </p>\n                </Container>\n              );\n            }\n          })\n        ) : (\n          <Container>\n            <p style={{ opacity: \"60%\" }}>\n              <i>\n                <strong>No card found. Please add card first.</strong>\n              </i>\n            </p>\n            <Col className=\"subs4\">\n              <img\n                src={expense}\n                alt=\"\"\n                style={{\n                  width: \"50%\",\n                  opacity: \"0%\",\n                  position: \"center\",\n                }}\n              />\n            </Col>\n          </Container>\n          // <Loading />\n        )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default CheckStatus;\n",{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":41,"column":6,"nodeType":"237","endLine":41,"endColumn":8,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":3,"column":21,"nodeType":"241","messageId":"242","endLine":3,"endColumn":24},{"ruleId":"239","severity":1,"message":"243","line":3,"column":31,"nodeType":"241","messageId":"242","endLine":3,"endColumn":36},{"ruleId":"239","severity":1,"message":"244","line":4,"column":40,"nodeType":"241","messageId":"242","endLine":4,"endColumn":48},{"ruleId":"239","severity":1,"message":"245","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":13},{"ruleId":"239","severity":1,"message":"246","line":9,"column":8,"nodeType":"241","messageId":"242","endLine":9,"endColumn":15},{"ruleId":"239","severity":1,"message":"247","line":15,"column":10,"nodeType":"241","messageId":"242","endLine":15,"endColumn":17},{"ruleId":"235","severity":1,"message":"248","line":52,"column":6,"nodeType":"237","endLine":52,"endColumn":8,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":54,"column":69,"nodeType":"252","messageId":"253","endLine":54,"endColumn":71},{"ruleId":"250","severity":1,"message":"251","line":108,"column":41,"nodeType":"252","messageId":"253","endLine":108,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":11,"column":5,"nodeType":"256","messageId":"257","endLine":11,"endColumn":17},{"ruleId":"239","severity":1,"message":"258","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":16},{"ruleId":"239","severity":1,"message":"259","line":9,"column":3,"nodeType":"241","messageId":"242","endLine":9,"endColumn":6},{"ruleId":"239","severity":1,"message":"260","line":13,"column":8,"nodeType":"241","messageId":"242","endLine":13,"endColumn":13},{"ruleId":"239","severity":1,"message":"261","line":16,"column":8,"nodeType":"241","messageId":"242","endLine":16,"endColumn":14},{"ruleId":"239","severity":1,"message":"262","line":18,"column":8,"nodeType":"241","messageId":"242","endLine":18,"endColumn":11},{"ruleId":"239","severity":1,"message":"263","line":19,"column":8,"nodeType":"241","messageId":"242","endLine":19,"endColumn":13},{"ruleId":"239","severity":1,"message":"264","line":23,"column":8,"nodeType":"241","messageId":"242","endLine":23,"endColumn":21},{"ruleId":"239","severity":1,"message":"265","line":30,"column":9,"nodeType":"241","messageId":"242","endLine":30,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":37,"column":15,"nodeType":"268","endLine":37,"endColumn":34},{"ruleId":"239","severity":1,"message":"269","line":10,"column":3,"nodeType":"241","messageId":"242","endLine":10,"endColumn":11},{"ruleId":"239","severity":1,"message":"270","line":12,"column":3,"nodeType":"241","messageId":"242","endLine":12,"endColumn":8},{"ruleId":"239","severity":1,"message":"271","line":13,"column":3,"nodeType":"241","messageId":"242","endLine":13,"endColumn":14},{"ruleId":"239","severity":1,"message":"272","line":15,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":12},{"ruleId":"239","severity":1,"message":"273","line":18,"column":10,"nodeType":"241","messageId":"242","endLine":18,"endColumn":14},{"ruleId":"239","severity":1,"message":"274","line":21,"column":10,"nodeType":"241","messageId":"242","endLine":21,"endColumn":20},{"ruleId":"239","severity":1,"message":"275","line":25,"column":8,"nodeType":"241","messageId":"242","endLine":25,"endColumn":15},{"ruleId":"239","severity":1,"message":"276","line":46,"column":10,"nodeType":"241","messageId":"242","endLine":46,"endColumn":19},{"ruleId":"239","severity":1,"message":"277","line":48,"column":9,"nodeType":"241","messageId":"242","endLine":48,"endColumn":17},{"ruleId":"239","severity":1,"message":"278","line":50,"column":10,"nodeType":"241","messageId":"242","endLine":50,"endColumn":21},{"ruleId":"239","severity":1,"message":"279","line":50,"column":23,"nodeType":"241","messageId":"242","endLine":50,"endColumn":37},{"ruleId":"239","severity":1,"message":"280","line":53,"column":10,"nodeType":"241","messageId":"242","endLine":53,"endColumn":19},{"ruleId":"239","severity":1,"message":"281","line":53,"column":21,"nodeType":"241","messageId":"242","endLine":53,"endColumn":33},{"ruleId":"239","severity":1,"message":"282","line":54,"column":10,"nodeType":"241","messageId":"242","endLine":54,"endColumn":19},{"ruleId":"239","severity":1,"message":"283","line":54,"column":21,"nodeType":"241","messageId":"242","endLine":54,"endColumn":33},{"ruleId":"239","severity":1,"message":"284","line":55,"column":17,"nodeType":"241","messageId":"242","endLine":55,"endColumn":25},{"ruleId":"239","severity":1,"message":"285","line":56,"column":18,"nodeType":"241","messageId":"242","endLine":56,"endColumn":27},{"ruleId":"239","severity":1,"message":"265","line":67,"column":9,"nodeType":"241","messageId":"242","endLine":67,"endColumn":15},{"ruleId":"235","severity":1,"message":"286","line":109,"column":6,"nodeType":"237","endLine":109,"endColumn":8,"suggestions":"287"},{"ruleId":"239","severity":1,"message":"288","line":20,"column":3,"nodeType":"241","messageId":"242","endLine":20,"endColumn":8},{"ruleId":"239","severity":1,"message":"289","line":22,"column":8,"nodeType":"241","messageId":"242","endLine":22,"endColumn":15},{"ruleId":"239","severity":1,"message":"290","line":23,"column":8,"nodeType":"241","messageId":"242","endLine":23,"endColumn":12},{"ruleId":"239","severity":1,"message":"291","line":24,"column":8,"nodeType":"241","messageId":"242","endLine":24,"endColumn":14},{"ruleId":"239","severity":1,"message":"292","line":25,"column":8,"nodeType":"241","messageId":"242","endLine":25,"endColumn":16},{"ruleId":"239","severity":1,"message":"293","line":26,"column":8,"nodeType":"241","messageId":"242","endLine":26,"endColumn":15},{"ruleId":"239","severity":1,"message":"294","line":27,"column":8,"nodeType":"241","messageId":"242","endLine":27,"endColumn":12},{"ruleId":"239","severity":1,"message":"273","line":28,"column":10,"nodeType":"241","messageId":"242","endLine":28,"endColumn":14},{"ruleId":"239","severity":1,"message":"295","line":28,"column":16,"nodeType":"241","messageId":"242","endLine":28,"endColumn":25},{"ruleId":"239","severity":1,"message":"274","line":31,"column":10,"nodeType":"241","messageId":"242","endLine":31,"endColumn":20},{"ruleId":"239","severity":1,"message":"296","line":83,"column":10,"nodeType":"241","messageId":"242","endLine":83,"endColumn":19},{"ruleId":"239","severity":1,"message":"297","line":83,"column":21,"nodeType":"241","messageId":"242","endLine":83,"endColumn":33},{"ruleId":"239","severity":1,"message":"284","line":90,"column":17,"nodeType":"241","messageId":"242","endLine":90,"endColumn":25},{"ruleId":"239","severity":1,"message":"285","line":91,"column":18,"nodeType":"241","messageId":"242","endLine":91,"endColumn":27},{"ruleId":"239","severity":1,"message":"280","line":94,"column":10,"nodeType":"241","messageId":"242","endLine":94,"endColumn":19},{"ruleId":"239","severity":1,"message":"281","line":94,"column":21,"nodeType":"241","messageId":"242","endLine":94,"endColumn":33},{"ruleId":"239","severity":1,"message":"282","line":95,"column":10,"nodeType":"241","messageId":"242","endLine":95,"endColumn":19},{"ruleId":"239","severity":1,"message":"283","line":95,"column":21,"nodeType":"241","messageId":"242","endLine":95,"endColumn":33},{"ruleId":"235","severity":1,"message":"286","line":137,"column":6,"nodeType":"237","endLine":137,"endColumn":8,"suggestions":"298"},{"ruleId":"239","severity":1,"message":"299","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":11},{"ruleId":"239","severity":1,"message":"300","line":9,"column":3,"nodeType":"241","messageId":"242","endLine":9,"endColumn":12},{"ruleId":"239","severity":1,"message":"273","line":22,"column":10,"nodeType":"241","messageId":"242","endLine":22,"endColumn":14},{"ruleId":"266","severity":1,"message":"267","line":233,"column":25,"nodeType":"268","endLine":233,"endColumn":74},{"ruleId":"266","severity":1,"message":"267","line":261,"column":25,"nodeType":"268","endLine":261,"endColumn":72},{"ruleId":"266","severity":1,"message":"267","line":290,"column":25,"nodeType":"268","endLine":290,"endColumn":75},{"ruleId":"266","severity":1,"message":"267","line":319,"column":25,"nodeType":"268","endLine":319,"endColumn":72},{"ruleId":"239","severity":1,"message":"301","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":20,"column":9,"nodeType":"268","endLine":20,"endColumn":70},{"ruleId":"266","severity":1,"message":"267","line":18,"column":8,"nodeType":"268","endLine":18,"endColumn":27},{"ruleId":"239","severity":1,"message":"301","line":3,"column":3,"nodeType":"241","messageId":"242","endLine":3,"endColumn":9},{"ruleId":"239","severity":1,"message":"271","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":14},{"ruleId":"239","severity":1,"message":"302","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":14},{"ruleId":"239","severity":1,"message":"303","line":10,"column":10,"nodeType":"241","messageId":"242","endLine":10,"endColumn":16},{"ruleId":"239","severity":1,"message":"304","line":10,"column":18,"nodeType":"241","messageId":"242","endLine":10,"endColumn":23},{"ruleId":"239","severity":1,"message":"305","line":15,"column":11,"nodeType":"241","messageId":"242","endLine":15,"endColumn":20},{"ruleId":"239","severity":1,"message":"301","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":9},{"ruleId":"239","severity":1,"message":"259","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":6},{"ruleId":"239","severity":1,"message":"306","line":18,"column":10,"nodeType":"241","messageId":"242","endLine":18,"endColumn":14},{"ruleId":"239","severity":1,"message":"307","line":18,"column":16,"nodeType":"241","messageId":"242","endLine":18,"endColumn":23},{"ruleId":"239","severity":1,"message":"247","line":19,"column":10,"nodeType":"241","messageId":"242","endLine":19,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":36,"column":6,"nodeType":"237","endLine":36,"endColumn":8,"suggestions":"308"},{"ruleId":"239","severity":1,"message":"309","line":12,"column":3,"nodeType":"241","messageId":"242","endLine":12,"endColumn":8},{"ruleId":"239","severity":1,"message":"260","line":15,"column":8,"nodeType":"241","messageId":"242","endLine":15,"endColumn":13},{"ruleId":"239","severity":1,"message":"310","line":16,"column":8,"nodeType":"241","messageId":"242","endLine":16,"endColumn":17},{"ruleId":"239","severity":1,"message":"311","line":27,"column":10,"nodeType":"241","messageId":"242","endLine":27,"endColumn":20},{"ruleId":"239","severity":1,"message":"312","line":29,"column":9,"nodeType":"241","messageId":"242","endLine":29,"endColumn":16},{"ruleId":"239","severity":1,"message":"313","line":44,"column":10,"nodeType":"241","messageId":"242","endLine":44,"endColumn":14},{"ruleId":"239","severity":1,"message":"314","line":45,"column":10,"nodeType":"241","messageId":"242","endLine":45,"endColumn":17},{"ruleId":"239","severity":1,"message":"315","line":46,"column":10,"nodeType":"241","messageId":"242","endLine":46,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":95,"column":28,"nodeType":"318","messageId":"319","endLine":95,"endColumn":29,"suggestions":"320"},{"ruleId":"235","severity":1,"message":"236","line":39,"column":6,"nodeType":"237","endLine":39,"endColumn":8,"suggestions":"321"},{"ruleId":"235","severity":1,"message":"236","line":31,"column":6,"nodeType":"237","endLine":31,"endColumn":8,"suggestions":"322"},{"ruleId":"235","severity":1,"message":"236","line":43,"column":6,"nodeType":"237","endLine":43,"endColumn":8,"suggestions":"323"},{"ruleId":"235","severity":1,"message":"236","line":63,"column":6,"nodeType":"237","endLine":63,"endColumn":8,"suggestions":"324"},{"ruleId":"239","severity":1,"message":"325","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":20},{"ruleId":"239","severity":1,"message":"326","line":21,"column":16,"nodeType":"241","messageId":"242","endLine":21,"endColumn":23},{"ruleId":"239","severity":1,"message":"327","line":22,"column":23,"nodeType":"241","messageId":"242","endLine":22,"endColumn":37},{"ruleId":"239","severity":1,"message":"328","line":23,"column":18,"nodeType":"241","messageId":"242","endLine":23,"endColumn":27},{"ruleId":"239","severity":1,"message":"329","line":24,"column":16,"nodeType":"241","messageId":"242","endLine":24,"endColumn":23},{"ruleId":"239","severity":1,"message":"330","line":25,"column":19,"nodeType":"241","messageId":"242","endLine":25,"endColumn":29},{"ruleId":"235","severity":1,"message":"236","line":40,"column":6,"nodeType":"237","endLine":40,"endColumn":8,"suggestions":"331"},{"ruleId":"239","severity":1,"message":"332","line":61,"column":9,"nodeType":"241","messageId":"242","endLine":61,"endColumn":21},{"ruleId":"239","severity":1,"message":"265","line":86,"column":9,"nodeType":"241","messageId":"242","endLine":86,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":54,"column":6,"nodeType":"237","endLine":54,"endColumn":8,"suggestions":"333"},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["336"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Linkedin' is defined but never used.","'crest' is defined but never used.","'Loading' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.",["337"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Login' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'chart' is defined but never used.","'CalendarEvent' is defined but never used.","'toggle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["338"],"'Label' is defined but never used.","'youtube' is defined but never used.","'hulu' is defined but never used.","'disney' is defined but never used.","'sportify' is defined but never used.","'netflix' is defined but never used.","'logo' is defined but never used.","'useParams' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.",["339"],"'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.",["340"],"'Alert' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["341","342"],["343"],["344"],["345"],["346"],"'useHistory' is defined but never used.","'setName' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setType' is assigned a value but never used.","'setDueDate' is assigned a value but never used.",["347"],"'handleSubmit' is assigned a value but never used.",["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"353","fix":"355"},{"desc":"349","fix":"356"},{"messageId":"357","fix":"358","desc":"359"},{"messageId":"360","fix":"361","desc":"362"},{"desc":"349","fix":"363"},{"desc":"349","fix":"364"},{"desc":"349","fix":"365"},{"desc":"349","fix":"366"},{"desc":"349","fix":"367"},{"desc":"349","fix":"368"},"Update the dependencies array to be: [token]",{"range":"369","text":"370"},"Update the dependencies array to be: [token, upComing]",{"range":"371","text":"372"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"373","text":"374"},{"range":"375","text":"374"},{"range":"376","text":"370"},"removeEscape",{"range":"377","text":"378"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"379","text":"380"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"381","text":"370"},{"range":"382","text":"370"},{"range":"383","text":"370"},{"range":"384","text":"370"},{"range":"385","text":"370"},{"range":"386","text":"370"},[902,904],"[token]",[1530,1532],"[token, upComing]",[3105,3107],"[dataMonth, dataWeek, token]",[3802,3804],[871,873],[2573,2574],"",[2573,2573],"\\",[830,832],[826,828],[1005,1007],[1406,1408],[1098,1100],[1218,1220]]