[{"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js":"1","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js":"2","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js":"3","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js":"4","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js":"5","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js":"6","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js":"7","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js":"8","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js":"9","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js":"10","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js":"11","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js":"12","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js":"13","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js":"14","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js":"15","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js":"16","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js":"17","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js":"18","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js":"19","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js":"20","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js":"21"},{"size":1019,"mtime":1608026248734,"results":"22","hashOfConfig":"23"},{"size":3943,"mtime":1608120337106,"results":"24","hashOfConfig":"23"},{"size":15031,"mtime":1608115267787,"results":"25","hashOfConfig":"23"},{"size":2063,"mtime":1607762145156,"results":"26","hashOfConfig":"23"},{"size":199,"mtime":1607762145026,"results":"27","hashOfConfig":"23"},{"size":3097,"mtime":1608114707164,"results":"28","hashOfConfig":"23"},{"size":6824,"mtime":1608114707240,"results":"29","hashOfConfig":"23"},{"size":6513,"mtime":1608114707156,"results":"30","hashOfConfig":"23"},{"size":13200,"mtime":1608114707193,"results":"31","hashOfConfig":"23"},{"size":1879,"mtime":1608123658378,"results":"32","hashOfConfig":"23"},{"size":3904,"mtime":1608116659568,"results":"33","hashOfConfig":"23"},{"size":2451,"mtime":1607762145101,"results":"34","hashOfConfig":"23"},{"size":12865,"mtime":1608114707238,"results":"35","hashOfConfig":"23"},{"size":2083,"mtime":1608114707169,"results":"36","hashOfConfig":"23"},{"size":567,"mtime":1607762145127,"results":"37","hashOfConfig":"23"},{"size":2572,"mtime":1608128733667,"results":"38","hashOfConfig":"23"},{"size":3398,"mtime":1608129301518,"results":"39","hashOfConfig":"23"},{"size":4139,"mtime":1608129764207,"results":"40","hashOfConfig":"23"},{"size":3648,"mtime":1608114707196,"results":"41","hashOfConfig":"23"},{"size":884,"mtime":1607762145161,"results":"42","hashOfConfig":"23"},{"size":5447,"mtime":1608114707160,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1lm62wj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\App.js",[],["98","99"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Calendar.js",["100","101","102","103"],"import React, {useState, useEffect} from \"react\";\r\nimport {Card, Row, Col} from \"reactstrap\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Calendar=()=>{\r\n    const [upComing, setUpComing] = useState([]);\r\n    const [month, setMonth] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const token = Cookies.get(\"token\");\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        axios\r\n        .get(' http://52.148.70.171/subscription', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then((res)=>{\r\n            console.log(res.data.map((e)=> e.dueDate))\r\n            setUpComing(\r\n                ...upComing,\r\n                res.data.map((e)=>({\r\n                    title : e.service.name,\r\n                    date: e.dueDate.substr(0, 10),\r\n                }))\r\n            )\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    \r\n    let checkComingMonth = upComing.filter((e)=> e.date.substr(5,2) == month);\r\n    // console.log(\"cek coming month\" , checkComingMonth)\r\n    checkComingMonth.sort((a,b)=>{\r\n        if (a.date < b.date) return -1;\r\n        return a.date > b.date ? 1 : 0;\r\n    })\r\n    return(\r\n        <>\r\n        {loading && <p>Loading...</p>}\r\n        {!loading && (\r\n           \r\n        <div>\r\n           \r\n            <Row>\r\n                <Col sm=\"8\">\r\n                    <Card>\r\n                    <FullCalendar \r\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                        datesSet={(arg)=>{\r\n                            console.log(arg);\r\n                            console.log(arg.view.currentStart.toISOString()); //starting visible date\r\n                            console.log(arg.view.currentEnd.toISOString()); //ending visible date        \r\n                            setMonth(arg.view.currentEnd.toISOString().substr(5, 2))\r\n                        }}\r\n                        initialView=\"dayGridMonth\"\r\n                        // height =\"100%\"\r\n                        events={upComing}\r\n                        // events={[\r\n                        // { title: \"event 1\", date: \"2020-12-06\" },\r\n                        // { title: \"event 2\", date: \"2020-12-12\" },\r\n                        //  ]}\r\n                    />\r\n                    </Card> \r\n                </Col> \r\n                <Col sm=\"4\">\r\n                     <h3\r\n                        style={{\r\n                        color: \"black\",\r\n                        }}\r\n                        className=\"text-center\"\r\n                    >\r\n                        Up Coming Expense\r\n                    </h3>\r\n                    {checkComingMonth === undefined ||\r\n                    checkComingMonth.length == 0 ? (\r\n                        <h2 className=\"text-center my-5\">\r\n                        There Is No Up Coming Expense This Month\r\n                        </h2>\r\n                    ) : (\r\n                        checkComingMonth.map((x) => (\r\n                        <>\r\n                            <div className=\"upcomingCard row\">\r\n                            <div className=\"upcoming card\">\r\n                                <h2 className=\"text-center\">{x.date.substr(8, 2)}</h2>\r\n                            </div>\r\n                            <div className=\"upcomingDetail card\">\r\n                                <h2 className=\"\">{x.title}</h2>\r\n                            </div>\r\n                            </div>\r\n                        </>\r\n                        ))\r\n                    )}\r\n                </Col>  \r\n\r\n            </Row>\r\n        </div>\r\n      )}\r\n      </>\r\n    )\r\n}\r\nexport default Calendar;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\History.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  CardImg,\r\n  Card,\r\n  Col,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  Collapse,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { Element } from \"react-scroll\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Line } from \"@reactchartjs/react-chart.js\";\r\nimport axios from \"axios\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport empty from \"../assets/empty.png\";\r\nimport glass from \"../assets/glass.png\";\r\nimport expense from \"../assets/expense.png\"\r\nimport \"../components/Profile.css\";\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst History = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [isOpenWeek, setIsOpenWeek] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const token = Cookies.get(\"token\");\r\n  const fullName = Cookies.get(\"fullName\");\r\n  const [expense, setExpense] = useState([]);\r\n  const [subscribeId, setSubscribeId] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartWeek, setChartWeek] = useState({});\r\n  const [weekMonth, setWeekMonth] = useState([]);\r\n  const [totalWeek, setTotalWeek] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [totals, setTotals] = useState([]);\r\n  const [totalHistory, setTotalHistory] = useState({});\r\n  const urlMonth = \"http://52.148.70.171/chart/monthly\";\r\n  const urlWeek = \"http://52.148.70.171/chart/weekly\";\r\n\r\n  // console.log(token)\r\n\r\n  const urlHistory = \"http://52.148.70.171/subscription\";\r\n  const urlExpense = \"http://52.148.70.171/expense\";\r\n  const urlTotalHistory = \"http://52.148.70.171/history\";\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const collapse = () => {\r\n    setIsOpen(true);\r\n    setIsOpenWeek(false);\r\n  };\r\n  const collapseWeek = () => {\r\n    setIsOpenWeek(true);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = \"#E5E5E5\";\r\n\r\n    setIsLoading(true);\r\n    axios\r\n      .get(urlHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(urlExpense, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        // console.log(res.data)\r\n        setExpense(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    dataMonth();\r\n    dataWeek();\r\n\r\n    axios\r\n      .get(urlTotalHistory, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setTotalHistory(res.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const dataMonth = () => {\r\n    let month = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlMonth, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        //  console.log(res);\r\n        for (const dataObj of res.data) {\r\n          month.push(dataObj.dates);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartData({\r\n          labels: month,\r\n          datasets: [\r\n            {\r\n              label: \"# Month\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // console.log(dates, totals)\r\n  };\r\n\r\n  const dataWeek = () => {\r\n    let week = [];\r\n    let pay = [];\r\n    axios\r\n      .get(urlWeek, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        for (const dataObj of res.data) {\r\n          week.push(dataObj.weekMonth);\r\n          pay.push(dataObj.totals);\r\n        }\r\n        setChartWeek({\r\n          labels: week,\r\n          datasets: [\r\n            {\r\n              label: \"# Week\",\r\n              data: pay,\r\n              fill: false,\r\n              backgroundColor: \"rgb(255, 99, 132)\",\r\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(dates, totals);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    const url = `http://3.0.91.163/subscription/${id}/`;\r\n    axios\r\n      .delete(url, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // const expenses = () =>{\r\n  //     setIsLoading(true);\r\n  //     axios.get(urlExpense, {headers : {Authorization : `Bearer ${token}`}})\r\n  //     .then((res)=>{\r\n  //         console.log(res.data)\r\n  //         setExpense(res.data);\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n\r\n  // const subscribeDetails = (id) => {\r\n  //     setIsLoading(true);\r\n  //     const url =`http://3.0.91.163/service?id=${id}`\r\n  //     axios.get(url).then((res)=>{\r\n  //         console.log(res.data.subscribeId)\r\n  //         setSubscribeId(res.data);\r\n  //         setModal(!modal)\r\n  //         setIsLoading(false);\r\n  //     })\r\n  //     .catch((err)=> console.log(err));\r\n  // }\r\n  return (\r\n    <Container fluid className=\"content\">\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"8\">\r\n            <Container>\r\n              <Row className=\"shadow-sm p-3 mb-5 bg-white rounded\">\r\n                <Col xs=\"12\" className=\"bg-default\">\r\n                  <Row>\r\n                    <Col xs=\"6\">\r\n                      <h4>Spending Value</h4>\r\n                      <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                      <div style={{ float: \"right\", position: \"relative\" }}>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapse}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"20px\" }}\r\n                        >\r\n                          Month\r\n                        </Button>\r\n                        <Button\r\n                          id=\"button\"\r\n                          onClick={collapseWeek}\r\n                          style={{ marginBottom: \"1rem\", marginRight: \"10px\" }}\r\n                        >\r\n                          Week\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                  <Collapse isOpen={isOpen}>\r\n                    <Line data={chartData} options={options} />\r\n                  </Collapse>\r\n                  <Collapse isOpen={isOpenWeek}>\r\n                    <Line data={chartWeek} options={options} />\r\n                  </Collapse>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <Container>\r\n              <Row className=\"ml-0 mt-3 mb-2\">\r\n                <h3>Your Subscriptions</h3>\r\n              </Row>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            <Container>\r\n              <Row>\r\n                {history.length !== 0 ? (\r\n                  history.map((history) => (\r\n                    <Col xs=\"4\" key={history.id}>\r\n                      <Card>\r\n                        <CardImg\r\n                          top\r\n                          width=\"100%\"\r\n                          height=\"150px\"\r\n                          src={history.service.picture}\r\n                          alt=\"subscribtion\"\r\n                        />\r\n                        <CardBody className=\"bg-dangers\">\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold text-center\"\r\n                          >\r\n                            {history.service.name}\r\n                          </CardTitle>\r\n                          <Row>\r\n                            <Button\r\n                              onClick={() => {\r\n                                if (\r\n                                  window.confirm(\r\n                                    \"are you sure you wish to unsubscribe this item?\"\r\n                                  )\r\n                                )\r\n                                  handleRemove(history.serviceId);\r\n                              }}\r\n                              className=\"btn btn-primary btn-block\"\r\n                              id=\"button\"\r\n                            >\r\n                              Unsubscribe\r\n                            </Button>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))\r\n                ) : (\r\n                  <Container>\r\n                    <p style={{ opacity: \"60%\" }}>\r\n                      <i>\r\n                        <strong>You don't have any subscription.</strong>\r\n                      </i>\r\n                    </p>\r\n                    <Col className=\"subs\">\r\n                      <img\r\n                        src={glass}\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"50%\",\r\n                          opacity: \"0%\",\r\n                          position: \"center\",\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Container>\r\n                )}\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n\r\n          <Col xs=\"4\" style={{ backgroundColor: \"white\", padding: \"7px\" }}>\r\n            <h4>History</h4>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            <Card\r\n              style={{\r\n                marginTop: \"20px\",\r\n                color: \"white\",\r\n                backgroundColor: \"#8F48EA\",\r\n                marginBottom: \"25px\",\r\n              }}\r\n            >\r\n              <Row style={{ marginBottom: \"20px\" }}>\r\n                <Col xs=\"6\" style={{ paddingTop: \"20px\" }}>\r\n                  <CardTitle className=\"text-white\">\r\n                    <strong>Total :</strong>\r\n                  </CardTitle>\r\n                </Col>\r\n                <Col xs=\"6\" style={{ paddingTop: \"20px\" }}>\r\n                  <h6 style={{ float: \"right\" }}>\r\n                    <strong>IDR {totalHistory.total}</strong>{\" \"}\r\n                  </h6>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n            <Element\r\n              ClassName=\"element\"\r\n              id=\"scroll-container\"\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"700px\",\r\n                overflow: \"scroll\",\r\n                marginBottom: \"100px\",\r\n              }}\r\n            >\r\n              <h4>Subscriptions</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {history.length !== 0 ? (\r\n                history.map((subscribtion, i) => (\r\n                  <Card\r\n                    key={i}\r\n                    style={{ marginTop: \"20px\", backgroundColor: \"#f6f9fc\" }}\r\n                  >\r\n                    <Row>\r\n                      <Col xs=\"6\">\r\n                        <CardTitle className=\"text-dark font-weight\">\r\n                          <h6>\r\n                            {subscribtion.service.name} <br />{\" \"}\r\n                            {subscribtion.repeat}\r\n                          </h6>\r\n                        </CardTitle>\r\n                      </Col>\r\n                      <Col xs=\"6\">\r\n                        <h6 style={{ float: \"right\" }}>\r\n                          IDR {subscribtion.service.cost}{\" \"}\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <Container style={{marginBottom:\"20px\"}}>\r\n                  <p style={{ opacity: \"60%\"}}>\r\n                    <i>\r\n                      <strong>No subscription found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs2\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n              )}\r\n              <h4>Expenses</h4>\r\n              <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n              {expense.length !== 0\r\n                ? expense.map((expenses, i) => (\r\n                    <Card\r\n                      key={i}\r\n                      style={{\r\n                        marginTop: \"20px\",\r\n                        padding: \"5px\",\r\n                        backgroundColor: \"#f6f9fc\",\r\n                      }}\r\n                    >\r\n                      <Row>\r\n                        <Col xs=\"6\" style={{ paddingTop: \"10px\" }}>\r\n                          <CardTitle\r\n                            tag=\"h6\"\r\n                            className=\"text-dark font-weight-bold\"\r\n                          >\r\n                            <h6>\r\n                              {expenses.title} <br /> {expenses.purchaseDate}\r\n                            </h6>\r\n                          </CardTitle>\r\n                        </Col>\r\n                        <Col xs=\"6\">\r\n                          <h6 style={{ float: \"right\", paddingTop: \"20px\" }}>\r\n                            IDR {expenses.total}{\" \"}\r\n                          </h6>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  ))\r\n                : (\r\n                  <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No expense found.</strong>\r\n                    </i>\r\n                  </p>\r\n                  <Col className=\"subs3\">\r\n                    <img\r\n                      src={empty}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        opacity: \"0%\",\r\n                        position: \"center\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Container>\r\n                )}\r\n            </Element>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n",["123","124"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Login.js",["125","126","127","128","129","130"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\Helper.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\EditProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Signup.js",["131","132","133","134","135","136","137"],"import React, { useState } from \"react\";\r\nimport \"./Signup.css\";\r\nimport { \r\n  Modal, \r\n  ModalHeader, \r\n  ModalBody, \r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst SignUp = (props) => {\r\n  let history = useHistory();\r\n  const { buttonLabel, className } = props;\r\n\r\n  const [modalSignUp, setModalSignUp] = useState(false);\r\n  const [modalSignIn, setModalSignIn] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const checker = () => {\r\n    localStorage.getItem(\"token\") === null\r\n      ? setIsLoggedIn(false)\r\n      : setIsLoggedIn(true);\r\n  };\r\n\r\n  const toggleSignUp = () => setModalSignUp(!modalSignUp);\r\n  const toggleSignIn = () => {\r\n    setModalSignIn(!modalSignIn);\r\n    setModalSignUp(false);\r\n  };\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const [message, setMessage] = useState();\r\n\r\n  const handleSubmitSignUp = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage({\r\n      data: \"Registration is in progress...\",\r\n      type: \"alert-warning\"\r\n    })\r\n    const urlSignUp =\r\n      \"  http://52.148.70.171/auth/register\";\r\n    const data = {\r\n      fullName: fullName,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(urlSignUp, data)\r\n    .then((ress) => { \r\n      // console.log(ress.bodyData);\r\n      history.push(toggleSignIn);\r\n      // <Alert color=\"primary\">Mantav</Alert>;\r\n    })\r\n    // .then((error, data)=>{\r\n    //   // const hasError = \"error\" in data && data.error != null;\r\n    //   setMessage({\r\n    //     data: error || \"Registered Successfully\",\r\n    //     type: error ? \"alert-danger\" : \"alert-success\",\r\n    //   })\r\n    // })\r\n  };\r\n\r\n  const handleSubmitSignIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    const urlSignIn =\r\n      \" http://52.148.70.171/auth/login\";\r\n    const bodyData = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(urlSignIn, bodyData).then((res) => {\r\n      console.log(res);\r\n      const fullname = res.data.fullName;\r\n      const email = res.data.email;\r\n      const token = res.data.token;\r\n      Cookies.set(\"fullname\", fullname, { expires: 1 });\r\n      Cookies.set(\"email\", email, { expires: 1 });\r\n      Cookies.set(\"token\", token, { expires: 1 });\r\n      setUser(res.data);\r\n      history.push(`/Dashboard`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"SignUpModal\">\r\n        <div className=\"navigation\">\r\n          <a onClick={toggleSignUp}>{buttonLabel}Sign Up</a>\r\n        </div>\r\n\r\n        <Modal isOpen={modalSignUp} toggle={toggleSignUp} className={className}>\r\n          <ModalHeader toggle={toggleSignUp}>\r\n            <div className=\"ModalHeader\">\r\n              <p className=\"SignTitle\">Sign up for new account.</p>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={handleSubmitSignUp}>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Full Name</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"text\"\r\n                  color=\"primary\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter full name\"\r\n                  onChange={(e) => setFullName(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Email</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"email\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Password</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"password\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                id=\"submitButton\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={toggleSignIn}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <p className=\"Login\">\r\n                Already have an account?{\" \"}\r\n                <Button color=\"primary\" onClick={toggleSignIn}>\r\n                  {buttonLabel}Login\r\n                </Button>\r\n                {/* <a onClick={toggleSignUp}>Log In</a> */}\r\n              </p>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div className=\"SignInModal\">\r\n        <Modal isOpen={modalSignIn} toggle={toggleSignIn} className={className}>\r\n          <ModalHeader toggle={toggleSignIn}>\r\n          <div className=\"ModalHeader\">\r\n              <p className=\"SignTitle\">Please login to continue.</p>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={handleSubmitSignIn}>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Email</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"email\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Label id=\"SignUp\">Password</Label>\r\n                <br />\r\n                <Input\r\n                  id=\"InputSignUp\"\r\n                  type=\"password\"\r\n                  className=\"input-form btn-block\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className=\"btn btn-block\"\r\n                onClick={toggleSignIn}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddCard.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Status.js",["138"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n// import Loading from './Loading'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport visa from \"../assets/visa.png\";\r\nimport master from \"../assets/mastercard.png\";\r\nimport \"./Profile.css\";\r\nimport expense from \"../assets/expense.png\";\r\n\r\nfunction CheckStatus() {\r\n  const [results, setResults] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  const urlCard = \" http://52.148.70.171/card\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  console.log(results);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`${urlCard}?cardNumber=${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlCard, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n        // setLoading(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {results.length !== 0 ? (\r\n          results.map((result) => {\r\n            <Container className='rowright'>\r\n            <hr style={{ borderTop: \"2px solid #c8c8c8\" }} />\r\n            </Container>\r\n            if (result.saldo >= 1000000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo >= 1000000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"blue\" }}> Sufficient</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo > 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Master\"\r\n            ) {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (\r\n              result.saldo > 500000 &&\r\n              result.saldo < 1000000 &&\r\n              result.cardType === \"Visa\"\r\n            ) {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"green\" }}> Fair</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo <= 300000 && result.cardType === \"Master\") {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={master}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else if (result.saldo <= 300000 && result.cardType === \"Visa\") {\r\n              return (\r\n                <Col md={4}>\r\n                  <Card\r\n                    style={{\r\n                      backgroundColor: \"whitesmoke\",\r\n                      color: \"#222222\",\r\n                      marginBottom: \"3\",\r\n                    }}\r\n                  >\r\n                    <CardBody>\r\n                      <CardTitle>\r\n                        <strong>{result.cardBank}</strong>\r\n                        <img\r\n                          src={visa}\r\n                          alt=\"\"\r\n                          style={{ width: \"40px\", float: \"right\" }}\r\n                        />\r\n                      </CardTitle>\r\n                      <hr style={{ borderTop: \"2px solid #222222\" }} />\r\n                      <CardTitle>\r\n                        <strong>{result.cardNumber}</strong>\r\n                      </CardTitle>\r\n                      <CardTitle>\r\n                        <strong>IDR {result.saldo}</strong>\r\n                      </CardTitle>\r\n                      <CardText>\r\n                        Status :\r\n                        <strong style={{ color: \"red\" }}> Critical</strong>\r\n                      </CardText>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleDelete(result.cardNumber);\r\n                        }}\r\n                        block\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            } else {\r\n              return (\r\n                <Container>\r\n                  <p style={{ opacity: \"60%\" }}>\r\n                    <i>\r\n                      <strong>No card found. Please add card first.</strong>\r\n                    </i>\r\n                  </p>\r\n                </Container>\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <Container>\r\n            <p style={{ opacity: \"60%\" }}>\r\n              <i>\r\n                <strong>No card found. Please add card first.</strong>\r\n              </i>\r\n            </p>\r\n            <Col className=\"subs4\">\r\n              <img\r\n                src={expense}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  opacity: \"0%\",\r\n                  position: \"center\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Container>\r\n          // <Loading />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Bells.js",["139","140","141","142","143"],"import React, { useEffect, useState } from 'react';\r\nimport {Bell} from 'react-feather';\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n    Button,\r\n    Popover,\r\n    PopoverHeader,\r\n    PopoverBody\r\n}from 'reactstrap';\r\n\r\n\r\nconst Bells = () => {\r\n    const [notif, setNotif] = useState([]);\r\n    const [date, setDate] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n    \r\n    const token = Cookies.get(\"token\");\r\n\r\n    const toggle = () => setPopoverOpen(!popoverOpen)\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        axios\r\n        .get('http://52.148.70.171/subscription', {\r\n            headers: { Authorization: `Bearer ${token}`} \r\n        })\r\n        .then((res)=>{\r\n            setNotif(res.data)\r\n        })\r\n        console.log(\"setNotif\", setNotif)\r\n    }, [])\r\n\r\n    let tanggal = new Date();\r\n    \r\n    const maxDate = new Date(tanggal)\r\n    maxDate.setDate(maxDate.getDate() + 3)\r\n    //console.log(\"tanggal\")\r\n    let checkDueDate  = notif.filter((e)=>new Date(e.dueDate) <= maxDate)\r\n    //console.log(\"cek due date\", checkDueDate)\r\n    // if(tanggal<checkDueDate){\r\n    //     console.log(\"tampilkan notif\")\r\n    // }\r\n    // else{\r\n    //     console.log(\"notif ngak ada\")\r\n    // }\r\n    return (\r\n        <div>\r\n            <div id=\"Popover1\">\r\n                <Bell />\r\n            </div>\r\n            <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={toggle}>\r\n            <PopoverHeader>Notification</PopoverHeader>\r\n            {checkDueDate.map((notif)=>(\r\n                <PopoverBody>\r\n                <h3>{notif.service.name}</h3>\r\n                <h3>{notif.dueDate}</h3>\r\n                </PopoverBody>\r\n            ))}\r\n            </Popover>\r\n        </div>    \r\n    );\r\n    \r\n}\r\nexport default Bells;\r\n \r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowDebt.js",["144"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { X, Edit3 } from \"react-feather\";\r\nimport \"./Profile.css\";\r\nimport debtPic from \"../assets/debt2.png\";\r\n\r\nconst ShowDebt = () => {\r\n  const [debt, setDebt] = useState([]);\r\n\r\n  const url = \"http://52.148.70.171/debts/notes\";\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(url, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        console.log(\"get debt\", res.data);\r\n        setDebt(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(` http://52.148.70.171/debts/delete?id=${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"tables\">\r\n        <Col xs=\"12\">\r\n          {debt.length !== 0 ? (\r\n            debt.map((debts) => (\r\n              <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n                <thead\r\n                  className=\"text-center\"\r\n                  style={{ backgroundColor: \"#BA8FF2\" }}\r\n                >\r\n                  <tr>\r\n                    <th>Due Date</th>\r\n                    <th>Name</th>\r\n                    <th>Debt's Description</th>\r\n                    <th>Type</th>\r\n                    <th>Cost</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{debts.dueDate}</td>\r\n                    <td>{debts.name}</td>\r\n                    <td>{debts.description}</td>\r\n                    <td>{debts.type}</td>\r\n                    <td>{debts.amount}</td>\r\n                    <td className=\"text-center\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          backgroundColor: \"#8F48EA\",\r\n                          marginRight: \"5px\",\r\n                        }}\r\n                        onClick={toggle}\r\n                      >\r\n                        <Edit3 size={15} />\r\n                      </Button>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          if (\r\n                            window.confirm(\r\n                              \"are you sure you wish to unsubscribe this itme?\"\r\n                            )\r\n                          )\r\n                            handleDelete(debts.id);\r\n                        }}\r\n                        color=\"danger\"\r\n                        outline\r\n                      >\r\n                        <X size={15} />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            ))\r\n          ) : (\r\n            <Container>\r\n              <p style={{ opacity: \"60%\" }}>\r\n                <i>\r\n                  <strong>No record found.</strong>\r\n                </i>\r\n              </p>\r\n              <Col className=\"subs5\">\r\n                <img\r\n                  src={debtPic}\r\n                  alt=\"\"\r\n                  style={{\r\n                    width: \"80%\",\r\n                    opacity: \"0%\",\r\n                    position: \"center\",\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Container>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default ShowDebt;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Footer.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\Home.js",["145","146","147","148","149","150","151"],"import React, {useState, useEffect} from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardImg,\r\n    Card,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    Button,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Spinner,\r\n    \r\n} from 'reactstrap';\r\nimport subscribe from './img/subscribe.svg'\r\nimport expense from './img/expense.svg'\r\nimport budgetting from './img/budgetting.svg'\r\nimport history from './img/history.svg'\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faAd, faCoins, faDigitalTachograph, faClipboard} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nconst Home = () =>{\r\n    const urlSubscribe = ' http://52.148.70.171/service';\r\n    const [subscribes, setSubscribes] = useState([]);\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n    \r\n        axios.get(urlSubscribe).then((res) => {\r\n          setSubscribes(res.data);\r\n          setLoading(false);\r\n        });\r\n      }, []);\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n      }\r\n    \r\n    const addIcon = <FontAwesomeIcon icon ={faAd}/>;\r\n    const addCoins = <FontAwesomeIcon icon ={faCoins}/>;\r\n    const addDigital = <FontAwesomeIcon icon ={faDigitalTachograph}/>;\r\n    const addClipboard = <FontAwesomeIcon icon={faClipboard}/>;\r\n\r\n    if (loading) {\r\n        return (\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5\">\r\n              <Spinner type=\"grow\" color=\"warning\" />\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3 font-weight-bold\">\r\n              Sedang memuat data...\r\n            </Row>\r\n          </div>\r\n        );\r\n    }\r\n    return(\r\n        <>\r\n            <Container fluid>\r\n                <Row className=\"banner\"> \r\n                    <Col xs=\"5\">\r\n                        <div className=\"logo\">\r\n                        <h1><b>Stress Free</b></h1>\r\n                        <h1><b>Subscription Manager</b></h1>\r\n                        <Button \r\n                            width=\"80px\"\r\n                            to=\"\"\r\n                            className=\"btn \" \r\n                            id=\"button\"\r\n                        >\r\n                            Try For Free\r\n                        </Button>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs=\"7\"> \r\n                        \r\n                        <div className=\"logo-gambar\"></div>   \r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container fluid className=\"about\">\r\n            <h1 className=\"section\" >About US</h1>\r\n            <div className=\"section-title-divider \"></div>\r\n            \r\n                <div className=\"aboutIntro\">\r\n                    <h3><span className=\"text-green\">Manage</span> your subscription business from anywhere\r\n                    <br />\r\n                    You can easily keep a pulse on your subscription business in one platform, from anywhere.</h3>\r\n                \r\n                </div>\r\n            \r\n            </Container>\r\n            <Container fluid className=\"content\">\r\n            <section id=\"features\" className=\"features\">\r\n                <Container >\r\n                    <Nav >\r\n                        <Col sm=\"3\" >\r\n                            <Card className=\"tabs\">\r\n                                <NavItem>\r\n                                    <NavLink className={classnames({ active: activeTab === '1'})}\r\n                                        onClick={() =>{toggle('1');}}\r\n                                    >\r\n                                        <Row><Col sm=\"8\"><h4>Subscribe</h4></Col>\r\n                                        <Col sm=\"4\" className=\"icon\"> {addIcon} </Col></Row>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <Card className=\"tabs\">\r\n                                <NavItem >\r\n                                    <NavLink className={classnames({active: activeTab === '2'})}\r\n                                    onClick={()=>{toggle('2');}}\r\n                                >\r\n                                   <Row><Col sm=\"8\" ><h4>Expense</h4></Col> \r\n                                   <Col sm=\"4\" className=\"icon\"> {addCoins} </Col></Row> \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <Card className=\"tabs\">\r\n                                <NavItem>\r\n                                    <NavLink className={classnames({active: activeTab === '3'})}\r\n                                    onClick={()=>{toggle('3');}}\r\n                                >\r\n                                    <Row><Col sm=\"8\"><h4>Budgetting</h4></Col> \r\n                                    <Col sm=\"4\" className=\"icon\"> {addDigital} </Col></Row>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col sm =\"3\">\r\n                            <Card className=\"tabs\">\r\n                                <NavItem>\r\n                                    <NavLink className={classnames({active: activeTab === '4'})}\r\n                                    onClick={()=>{toggle('4');}}\r\n                                >\r\n                                     <Row><Col sm=\"8\"><h4>History</h4></Col>\r\n                                      <Col sm=\"4\"className=\"icon\" > {addClipboard} </Col></Row>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Card>\r\n                        </Col>\r\n                        \r\n                    </Nav>\r\n                   \r\n                    <TabContent activeTab={activeTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                    <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                         <h3>Easily create a subscription website</h3>\r\n                                         <h4>Simply put in the items you wish to purchase on subscription, and the website builder will generate a subscription website for you \r\n                                            right away. Join a member and create your own management subscription service you want to make.\r\n                                        </h4>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={subscribe}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                            <h3>Control your own daily expense</h3>\r\n                                            \r\n                                         <h4>Expense</h4>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={expense}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"3\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                        <h3></h3>\r\n                                         <h4>Budgetting</h4>\r\n                                         </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={budgetting}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"4\">\r\n                            <Row>\r\n                                <Col lg=\"12\">\r\n                                <Row>\r\n                                    <Col lg=\"6\">\r\n                                        <div className=\"intro\">\r\n                                         <h3>Real-time reporting for finance and subscribtion</h3>\r\n                                         <h4>With full visibility of all business expenditure and powerful reporting features at your disposal,\r\n                                            SubsIt empowers you to make smarter financial decisions.\r\n                                            Process expenses as they are approved and post to your accounting package with ease.</h4>\r\n                                         </div>\r\n                                    </Col>\r\n                                    <Col lg=\"6\" style={{marginTop:'20px', marginBottom:'20px'}}>\r\n                                        <img \r\n                                            src={history}\r\n                                            width=\"100%\"\r\n                                            height=\"400px\"\r\n                                        ></img>\r\n                                    </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </Container>\r\n            </section>\r\n            </Container>\r\n            <Container fluid className=\"popular\">\r\n                <Container>\r\n                    <h1 className=\"section\" >Popular Apps</h1>\r\n                    <div className=\"section-title-divider \"></div>\r\n                <Row>\r\n                    {subscribes.slice(0,4).map((subscribes, i) =>(\r\n                        <Col sm=\"3\" key={i}>\r\n                        <Card>\r\n                            <CardImg\r\n                                top\r\n                                width=\"100%\"\r\n                                height=\"170px\"\r\n                                src={subscribes.picture}\r\n                                alt=\"subscribtion\"\r\n                            />\r\n                            <CardTitle tag=\"h6\" className=\"text-dark font-weight-bold text-center\">\r\n                            <h4>{subscribes.name}</h4>\r\n                            </CardTitle>\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n                       \r\n                </Row>\r\n                </Container>\r\n            \r\n            </Container>\r\n            {/* <Container fluid className=\"team\">\r\n                <Container>\r\n                    <h1 className=\"section\" >Team</h1>\r\n                    <div className=\"section-title-divider \"></div>\r\n                </Container>\r\n            </Container> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\Profile.js",["152"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport avatar from \"../assets/avatar2.png\";\r\nimport \"./Profile.css\";\r\nimport { User, Mail } from \"react-feather\";\r\nimport Edit from \"./EditProfile\";\r\nimport TabProfile from \"./TabProfile\";\r\n\r\nconst Profile = () => {\r\n  const [users, setUsers] = useState(\"\");\r\n\r\n  const token = Cookies.get('token');\r\n\r\n  useEffect(() => {\r\n\r\n    document.body.style.backgroundColor = \"#E5E5E5\"\r\n\r\n    axios\r\n      .get(\r\n        ` http://52.148.70.171/auth/user/`, {\r\n            headers: {Authorization : `Bearer ${token}`}\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUsers(res.data);\r\n      })\r\n      .catch((error) => {\r\n      console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col xl=\"4\" sm=\"12\">\r\n          <Card>\r\n            {users.length !== 0 ? (\r\n              users.map((user)=> (\r\n                <CardBody key={user.id} className=\"cardBody\">\r\n                <CardImg top src={avatar} at=\"\" className=\"imgProfile\" />\r\n                <Row className=\"rowright\">\r\n                  <Container>\r\n                    <Edit />\r\n                  </Container>\r\n                </Row>\r\n                <CardTitle>\r\n                  <Container>\r\n                    <p>\r\n                      <User size={22} /> {user.fullName}\r\n                    </p>\r\n                  </Container>\r\n                  <Container>\r\n                    <p>\r\n                      <Mail size={22} /> {user.email}\r\n                    </p>\r\n                  </Container>\r\n                </CardTitle>\r\n              </CardBody>\r\n              ))\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col xl=\"8\" sm=\"12\">\r\n          <TabProfile />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\index.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\TopMenu.js",["153","154","155","156","157","158","159","160","161","162","163","164"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport subsit from \"./img/SubsIt..svg\";\r\nimport \"./TopMenu.css\";\r\nimport Modals from \"./Modalender\";\r\nimport { Link} from \"react-router-dom\";\r\nimport app from \"./img/app.svg\";\r\nimport chart from \"./img/Group 11.svg\";\r\nimport { checkLogin } from \"../Helper\";\r\nimport ProfMenu from \"./ProfMenu\";\r\nimport Lendar from \"./img/calendar.svg\";\r\nimport Calendar from \"../components/Calendar\";\r\n\r\nimport Bells from \"./Bells\";\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container fluid className=\"barnav\" style={{backgroundColor:\"#fefefe\"}}>\r\n      <Navbar expand=\"md\" style={{backgroundColor:\"#fefefe\", }}>\r\n      <NavbarBrand className=\"lognav\" href=\"/\" >\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand>\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Collapse isOpen={isOpen} navbar></Collapse>\r\n          {!checkLogin() && (\r\n            <div className=\"body\">\r\n              <ul id=\"Menu\">\r\n                <li className=\"liquid1\"></li>\r\n                <li>\r\n                  <a href=\"#\">About</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">Product</a>\r\n                </li>\r\n                <li>\r\n                  <Signup />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {checkLogin() && (\r\n            \r\n            <div>\r\n              {/* <NavbarBrand className=\"lognav\" href=\"/\" >\r\n            <Link to=\"/dashboard\">\r\n              <img src={subsit} ></img>\r\n            </Link>\r\n            </NavbarBrand> */}\r\n              <ul id=\"Menu\" className=\"liquid1\">\r\n                <li>\r\n                  <Link to=\"/history\">\r\n                    <img src={chart}></img>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Calendar\">\r\n                    <img src={Lendar}></img>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Bells />\r\n                </li>\r\n                <li>\r\n                  <ProfMenu />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\ShowExpense.js",["165"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Button, Row, Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { X } from \"react-feather\";\r\nimport expense from \"../assets/expense.png\";\r\nimport \"./Profile.css\";\r\n\r\nconst ShowExpenses = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  const urlExpense = \" http://52.148.70.171/expense\";\r\n\r\n  const token = Cookies.get(\"token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(urlExpense, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setResults(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`http://3.0.91.163/expense/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        return window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"tables\">\r\n          <Container>\r\n            {results.length !== 0 ? (\r\n              results.map((result) => (\r\n                <Table hover style={{ backgroundColor: \"whitesmoke\" }}>\r\n                  <thead\r\n                    className=\"text-center\"\r\n                    style={{ backgroundColor: \"#BA8FF2\" }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ width: \"50%\" }}>Transaction Date</th>\r\n                      <th>Name of Transaction</th>\r\n                      <th>Currency</th>\r\n                      <th>Costs</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-center\">{result.purchaseDate}</td>\r\n                      <td style={{ width: \"50%\" }}>{result.title}</td>\r\n                      <td className=\"text-center\">IDR</td>\r\n                      <td className=\"text-center\">{result.total}</td>\r\n                      <td style={{ width: \"100%\" }} className=\"text-center\">\r\n                        <Button\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            handleDelete(result.id);\r\n                          }}\r\n                          color=\"danger\"\r\n                          outline\r\n                        >\r\n                          <X size={15} />\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              ))\r\n            ) : (\r\n              <Container>\r\n                <p style={{ opacity: \"60%\" }}>\r\n                  <i>\r\n                    <strong>No expense found.</strong>\r\n                  </i>\r\n                </p>\r\n                <Col className=\"subs3\">\r\n                  <img\r\n                    src={expense}\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      opacity: \"0%\",\r\n                      position: \"center\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Container>\r\n            )}\r\n          </Container>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowExpenses;\r\n","D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddDebt.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\TabProfile.js",[],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\pages\\ProfMenu.js",["166"],"D:\\Rifkli Folder\\BootCamp\\ProductClass\\productclass\\src\\components\\AddExpenses.js",["167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":36,"column":8,"nodeType":"174","endLine":36,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":38,"column":9,"nodeType":"178","messageId":"179","endLine":38,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":39,"column":69,"nodeType":"182","messageId":"183","endLine":39,"endColumn":71},{"ruleId":"180","severity":1,"message":"181","line":83,"column":45,"nodeType":"182","messageId":"183","endLine":83,"endColumn":47},{"ruleId":"176","severity":1,"message":"184","line":10,"column":3,"nodeType":"178","messageId":"179","endLine":10,"endColumn":11},{"ruleId":"176","severity":1,"message":"185","line":12,"column":3,"nodeType":"178","messageId":"179","endLine":12,"endColumn":8},{"ruleId":"176","severity":1,"message":"186","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":15,"column":3,"nodeType":"178","messageId":"179","endLine":15,"endColumn":12},{"ruleId":"176","severity":1,"message":"188","line":18,"column":10,"nodeType":"178","messageId":"179","endLine":18,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":21,"column":10,"nodeType":"178","messageId":"179","endLine":21,"endColumn":20},{"ruleId":"176","severity":1,"message":"190","line":25,"column":8,"nodeType":"178","messageId":"179","endLine":25,"endColumn":15},{"ruleId":"176","severity":1,"message":"191","line":45,"column":10,"nodeType":"178","messageId":"179","endLine":45,"endColumn":19},{"ruleId":"176","severity":1,"message":"192","line":47,"column":9,"nodeType":"178","messageId":"179","endLine":47,"endColumn":17},{"ruleId":"176","severity":1,"message":"193","line":49,"column":10,"nodeType":"178","messageId":"179","endLine":49,"endColumn":21},{"ruleId":"176","severity":1,"message":"194","line":49,"column":23,"nodeType":"178","messageId":"179","endLine":49,"endColumn":37},{"ruleId":"176","severity":1,"message":"195","line":52,"column":10,"nodeType":"178","messageId":"179","endLine":52,"endColumn":19},{"ruleId":"176","severity":1,"message":"196","line":52,"column":21,"nodeType":"178","messageId":"179","endLine":52,"endColumn":33},{"ruleId":"176","severity":1,"message":"197","line":53,"column":10,"nodeType":"178","messageId":"179","endLine":53,"endColumn":19},{"ruleId":"176","severity":1,"message":"198","line":53,"column":21,"nodeType":"178","messageId":"179","endLine":53,"endColumn":33},{"ruleId":"176","severity":1,"message":"199","line":54,"column":17,"nodeType":"178","messageId":"179","endLine":54,"endColumn":25},{"ruleId":"176","severity":1,"message":"200","line":55,"column":18,"nodeType":"178","messageId":"179","endLine":55,"endColumn":27},{"ruleId":"176","severity":1,"message":"201","line":66,"column":9,"nodeType":"178","messageId":"179","endLine":66,"endColumn":15},{"ruleId":"172","severity":1,"message":"202","line":108,"column":6,"nodeType":"174","endLine":108,"endColumn":8,"suggestions":"203"},{"ruleId":"168","replacedBy":"204"},{"ruleId":"170","replacedBy":"205"},{"ruleId":"176","severity":1,"message":"206","line":3,"column":3,"nodeType":"178","messageId":"179","endLine":3,"endColumn":9},{"ruleId":"176","severity":1,"message":"186","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"176","severity":1,"message":"207","line":8,"column":3,"nodeType":"178","messageId":"179","endLine":8,"endColumn":14},{"ruleId":"176","severity":1,"message":"208","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":16},{"ruleId":"176","severity":1,"message":"209","line":10,"column":18,"nodeType":"178","messageId":"179","endLine":10,"endColumn":23},{"ruleId":"176","severity":1,"message":"210","line":15,"column":11,"nodeType":"178","messageId":"179","endLine":15,"endColumn":20},{"ruleId":"176","severity":1,"message":"211","line":14,"column":8,"nodeType":"178","messageId":"179","endLine":14,"endColumn":13},{"ruleId":"176","severity":1,"message":"212","line":15,"column":8,"nodeType":"178","messageId":"179","endLine":15,"endColumn":17},{"ruleId":"176","severity":1,"message":"213","line":25,"column":10,"nodeType":"178","messageId":"179","endLine":25,"endColumn":20},{"ruleId":"176","severity":1,"message":"214","line":27,"column":9,"nodeType":"178","messageId":"179","endLine":27,"endColumn":16},{"ruleId":"176","severity":1,"message":"215","line":42,"column":10,"nodeType":"178","messageId":"179","endLine":42,"endColumn":14},{"ruleId":"176","severity":1,"message":"216","line":43,"column":10,"nodeType":"178","messageId":"179","endLine":43,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":102,"column":11,"nodeType":"219","endLine":102,"endColumn":37},{"ruleId":"172","severity":1,"message":"220","line":55,"column":6,"nodeType":"174","endLine":55,"endColumn":8,"suggestions":"221"},{"ruleId":"176","severity":1,"message":"206","line":6,"column":5,"nodeType":"178","messageId":"179","endLine":6,"endColumn":11},{"ruleId":"176","severity":1,"message":"222","line":15,"column":12,"nodeType":"178","messageId":"179","endLine":15,"endColumn":16},{"ruleId":"176","severity":1,"message":"223","line":15,"column":18,"nodeType":"178","messageId":"179","endLine":15,"endColumn":25},{"ruleId":"176","severity":1,"message":"224","line":16,"column":12,"nodeType":"178","messageId":"179","endLine":16,"endColumn":19},{"ruleId":"172","severity":1,"message":"220","line":33,"column":8,"nodeType":"174","endLine":33,"endColumn":10,"suggestions":"225"},{"ruleId":"172","severity":1,"message":"220","line":31,"column":6,"nodeType":"174","endLine":31,"endColumn":8,"suggestions":"226"},{"ruleId":"176","severity":1,"message":"227","line":8,"column":5,"nodeType":"178","messageId":"179","endLine":8,"endColumn":13},{"ruleId":"176","severity":1,"message":"188","line":23,"column":10,"nodeType":"178","messageId":"179","endLine":23,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":173,"column":41,"nodeType":"219","endLine":177,"endColumn":42},{"ruleId":"228","severity":1,"message":"229","line":195,"column":41,"nodeType":"219","endLine":199,"endColumn":42},{"ruleId":"230","severity":1,"message":"231","line":211,"column":41,"nodeType":"219","endLine":211,"endColumn":45},{"ruleId":"228","severity":1,"message":"229","line":216,"column":41,"nodeType":"219","endLine":220,"endColumn":42},{"ruleId":"228","severity":1,"message":"229","line":239,"column":41,"nodeType":"219","endLine":243,"endColumn":42},{"ruleId":"172","severity":1,"message":"220","line":41,"column":6,"nodeType":"174","endLine":41,"endColumn":8,"suggestions":"232"},{"ruleId":"176","severity":1,"message":"233","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":16},{"ruleId":"176","severity":1,"message":"234","line":9,"column":3,"nodeType":"178","messageId":"179","endLine":9,"endColumn":6},{"ruleId":"176","severity":1,"message":"211","line":12,"column":8,"nodeType":"178","messageId":"179","endLine":12,"endColumn":13},{"ruleId":"176","severity":1,"message":"235","line":15,"column":8,"nodeType":"178","messageId":"179","endLine":15,"endColumn":14},{"ruleId":"176","severity":1,"message":"236","line":17,"column":8,"nodeType":"178","messageId":"179","endLine":17,"endColumn":11},{"ruleId":"176","severity":1,"message":"237","line":22,"column":8,"nodeType":"178","messageId":"179","endLine":22,"endColumn":16},{"ruleId":"176","severity":1,"message":"201","line":29,"column":9,"nodeType":"178","messageId":"179","endLine":29,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":36,"column":15,"nodeType":"219","endLine":36,"endColumn":34},{"ruleId":"217","severity":1,"message":"238","line":47,"column":19,"nodeType":"219","endLine":47,"endColumn":31},{"ruleId":"217","severity":1,"message":"238","line":50,"column":19,"nodeType":"219","endLine":50,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":69,"column":21,"nodeType":"219","endLine":69,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":74,"column":21,"nodeType":"219","endLine":74,"endColumn":39},{"ruleId":"172","severity":1,"message":"220","line":28,"column":6,"nodeType":"174","endLine":28,"endColumn":8,"suggestions":"239"},{"ruleId":"228","severity":1,"message":"229","line":23,"column":8,"nodeType":"219","endLine":23,"endColumn":27},{"ruleId":"172","severity":1,"message":"220","line":63,"column":6,"nodeType":"174","endLine":63,"endColumn":8,"suggestions":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'upComing'. Either include them or remove the dependency array. You can also do a functional update 'setUpComing(u => ...)' if you only need 'upComing' in the 'setUpComing' call.","ArrayExpression",["243"],"no-unused-vars","'date' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Link' is defined but never used.","'checkLogin' is defined but never used.","'expense' is defined but never used.","'isLoading' is assigned a value but never used.","'fullName' is assigned a value but never used.","'subscribeId' is assigned a value but never used.","'setSubscribeId' is assigned a value but never used.","'weekMonth' is assigned a value but never used.","'setWeekMonth' is assigned a value but never used.","'totalWeek' is assigned a value but never used.","'setTotalWeek' is assigned a value but never used.","'setDates' is assigned a value but never used.","'setTotals' is assigned a value but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataMonth', 'dataWeek', and 'token'. Either include them or remove the dependency array.",["244"],["241"],["242"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'className' is assigned a value but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checker' is assigned a value but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["245"],"'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'loading' is assigned a value but never used.",["246"],["247"],"'CardBody' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["248"],"'NavbarToggler' is defined but never used.","'Row' is defined but never used.","'Modals' is defined but never used.","'app' is defined but never used.","'Calendar' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["249"],["250"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},{"desc":"255","fix":"258"},{"desc":"255","fix":"259"},{"desc":"255","fix":"260"},{"desc":"255","fix":"261"},"Update the dependencies array to be: [token, upComing]",{"range":"262","text":"263"},"Update the dependencies array to be: [dataMonth, dataWeek, token]",{"range":"264","text":"265"},"Update the dependencies array to be: [token]",{"range":"266","text":"267"},{"range":"268","text":"267"},{"range":"269","text":"267"},{"range":"270","text":"267"},{"range":"271","text":"267"},{"range":"272","text":"267"},[1164,1166],"[token, upComing]",[3060,3062],"[dataMonth, dataWeek, token]",[1304,1306],"[token]",[885,887],[751,753],[919,921],[760,762],[1409,1411]]